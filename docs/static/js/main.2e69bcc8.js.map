{"version":3,"file":"static/js/main.2e69bcc8.js","mappings":"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A,EACA,GACAF,EACAA,GACA,GACR,IAAK,gCACD,OAAO,IAAIX,EACPlQ,GAAegR,UACf,EACA,KACA,KACA,EACA,GACAH,EACAA,GACA,GAER,IAAK,2BACD,OAAO,IAAIX,EACPlQ,GAAe0D,IACf,EACA,IACA,KACA,EACA,GACAmN,EACA,2BACA,GACR,IAAK,4BACD,OAAO,IAAIX,EACPlQ,GAAe0D,IACf,EACA,KACA,KACA,EACA,GACAmN,EACA,4BACA,GACR,IAAK,4BACD,OAAO,IAAIX,EACPlQ,GAAe8D,MACf,EACA,IACA,IACA,EACA,EACA+M,EACA,4BACA,GACR,IAAK,2BACD,OAAO,IAAIX,EACPlQ,GAAe0D,IACf,EACA,KACA,KACA,EACA,GACAmN,EACA,4BACA,GACR,IAAK,2BACD,OAAO,IAAIX,EACPlQ,GAAe0D,IACf,EACA,KACA,KACA,EACA,GACAmN,EACA,4BACA,GACR,IAAK,0BACD,OAAO,IAAIX,EACPlQ,GAAe0D,IACf,EACA,IACA,KACA,EACA,GACAmN,EACA,2BACA,GACR,IAAK,4BACD,OAAO,IAAIX,EACPlQ,GAAeiR,SACf,EACA,KACA,KACA,EACA,GACAJ,EACAA,GACA,GACR,IAAK,4BACD,OAAO,IAAIX,EACPlQ,GAAeiR,SACf,EACA,KACA,KACA,EACA,GACAJ,EACAA,GACA,GACR,IAAK,2BACD,OAAO,IAAIX,EACPlQ,GAAe0D,IACf,EACA,KACA,KACA,EACA,GACAmN,EACA,4BACA,GACR,IAAK,4BACD,OAAO,IAAIX,EACPlQ,GAAe0D,IACf,EACA,KACA,KACA,EACA,GACAmN,EACA,4BACA,GACR,IAAK,kCACD,OAAO,IAAIX,EACPlQ,GAAe+Q,IACf,EACA,KACA,MACA,EACA,GACAF,EACAA,GACA,GACR,IAAK,mCACD,OAAO,IAAIX,EACPlQ,GAAe+Q,IACf,EACA,KACA,MACA,EACA,GACAF,EACAA,GACA,GACR,IAAK,4BACD,OAAO,IAAIX,EACPlQ,GAAeiR,SACf,EACA,KACA,KACA,EACA,GACAJ,EACAA,GACA,GACR,IAAK,6BACD,OAAO,IAAIX,EACPlQ,GAAekR,UACf,EACA,KACA,IACA,EACA,GACAL,EACAA,GACA,GACR,IAAK,6BACD,OAAO,IAAIX,EACPlQ,GAAekR,UACf,EACA,KACA,IACA,EACA,GACAL,EACAA,GACA,GACR,IAAK,oCACD,OAAO,IAAIX,EACPlQ,GAAekR,UACf,EACA,KACA,IACA,EACA,GACAL,EACAA,GACA,GACR,IAAK,qCACD,OAAO,IAAIX,EACPlQ,GAAemR,KACf,EACA,KACA,IACA,EACA,GACAN,EACAA,GACA,GACR,IAAK,qCACD,OAAO,IAAIX,EACPlQ,GAAemR,KACf,EACA,KACA,IACA,EACA,GACAN,EACAA,GACA,GACR,IAAK,qCACD,OAAO,IAAIX,EACPlQ,GAAemR,KACf,EACA,KACA,IACA,EACA,GACAN,EACAA,GACA,GACR,IAAK,8BACD,OAAO,IAAIX,EACPlQ,GAAeoR,KACf,EACA,KACA,KACA,EACA,GACAP,EACAA,GACA,GACR,IAAK,8BACD,OAAO,IAAIX,EACPlQ,GAAeoR,KACf,EACA,KACA,IACA,EACA,GACAP,EACAA,GACA,GACR,IAAK,gCACD,OAAO,IAAIX,EACPlQ,GAAegR,UACf,EACA,KACA,KACA,EACA,GACAH,EACAA,GACA,GACR,IAAK,0BACD,OAAO,IAAIX,EACPlQ,GAAe6D,KACf,EACA,IACA,IACA,EACA,EACAgN,EACAA,GACA,GACR,IAAK,2BACD,OAAO,IAAIX,EACPlQ,GAAe6D,KACf,EACA,IACA,IACA,EACA,EACAgN,EACA,2BACA,GAER,QACI,OAAO,IAAIX,EACPlQ,GAAe0D,IACf,EACA,KACA,KACA,EACA,GACA,4BACA,4BACA,MAvdpB,oCA2dW,WACH,OAAOwM,EAAsBS,sCACN,qBAAXtM,OAA0B,kCAAoC,iCA7dlF,GAA2ClB,IACzB+M,GAAAA,qCAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAAA,GACThC,GAA4BmD,qBAAuB,6BAD1C,WAETnD,GAA4BoD,yBAA2B,iCAF9C,WAGTpD,GAA4BqD,0BAA4B,kCAH/C,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","sources":["../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/construct.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/bent/src/browser.js","../node_modules/bent/src/core.js","../node_modules/classnames/index.js","../node_modules/cookie/index.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/PlatformEvent.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/Guid.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/src/common.browser/ConsoleLoggingListener.ts","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/Error.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/EventSource.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/Events.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/RiffPcmEncoder.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/RecognizerConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/src/common.browser/PCMRecorder.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/Promise.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/AudioSourceEvents.ts","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/List.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/Queue.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/src/sdk/Audio/AudioStreamFormat.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/Stream.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/ChunkedArrayBufferStream.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/src/common.browser/MicAudioSource.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/ConnectionMessage.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/src/common.browser/FileAudioSource.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/src/sdk/Audio/PullAudioInputStreamCallback.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/src/sdk/Audio/AudioInputStream.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/IConnection.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/CancellationReason.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/CancellationErrorCodes.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/ConnectionEvents.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeechSynthesisEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeechSynthesisOutputFormat.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SynthesisResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeechSynthesisResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeechSynthesisWordBoundaryEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeechSynthesisBookmarkEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeechSynthesisVisemeEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/Exports.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/src/sdk/Audio/AudioOutputFormat.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/SynthesisAudioMetadata.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/src/sdk/Audio/AudioOutputStream.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/SynthesisEvents.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/SynthesisTurn.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/SynthesisContext.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/AgentConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/HeaderNames.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/SpeechConnectionMessage.Internal.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/SynthesisAdapterBase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/BackgroundError.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/OutputFormat.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/src/sdk/Audio/SpeakerAudioDestination.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/src/sdk/Audio/PushAudioOutputStreamCallback.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/src/sdk/Audio/AudioFileWriter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/src/sdk/Audio/AudioConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/KeywordRecognitionModel.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SessionEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/RecognitionEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/IntentRecognitionEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/ProfanityOption.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/RecognitionResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeechRecognitionResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/IntentRecognitionResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/LanguageUnderstandingModel.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeechRecognitionEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/CancellationEventArgsBase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeechRecognitionCanceledEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/TranslationRecognitionEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/TranslationSynthesisEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/TranslationRecognitionResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/TranslationSynthesisResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeechConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeechTranslationConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/src/common.browser/ReplayableAudioNode.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/Timeout.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/RecognitionEvents.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/ServiceTelemetryListener.Internal.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/RequestSession.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/DynamicGrammarBuilder.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/SpeechContext.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/SpeechDetected.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/ServiceRecognizerBase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/IAuthentication.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/CognitiveSubscriptionKeyAuthentication.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/CognitiveTokenAuthentication.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/Recognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/ConnectionOpenResponse.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/RawWebsocketMessage.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/OCSPEvents.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/src/common.browser/CertChecks.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/src/common.browser/WebsocketMessageAdapter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/src/common.browser/WebsocketConnection.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/src/common.browser/ProxyInfo.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/QueryParameterNames.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/ConnectionFactoryBase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/Enums.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/WebsocketMessageFormatter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/SpeechConnectionFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/SpeechHypothesis.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/SimpleSpeechPhrase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/VoiceProfileType.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/EnumTranslation.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/DetailedSpeechPhrase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/SpeechServiceRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeechRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/IntentConnectionFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/AddedLmIntent.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/IntentRecognitionCanceledEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/IntentResponse.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/IntentServiceRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/IntentRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/TranslationConnectionFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/TranslationStatus.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/TranslationRecognitionCanceledEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/NoMatchReason.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/Translations.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/TranslationHypothesis.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/TranslationPhrase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/TranslationSynthesisEnd.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/TranslationServiceRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/ConnectionMessage.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/ConnectionEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/ConnectionMessageEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/ServiceEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/Connection.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/TranslationRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/NoMatchDetails.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/CancellationDetailsBase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/CancellationDetails.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/PhraseListGrammar.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/DialogServiceConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/BotFrameworkConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/CustomCommandsConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/DialogConnectorFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/src/common/DialogEvents.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/ActivityResponsePayload.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/ActivityReceivedEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/TurnStatusPayload.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/TurnStatusReceivedEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/DialogServiceTurnState.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/ServicePropertyChannel.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/DialogServiceTurnStateManager.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/SpeechKeyword.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/DialogServiceAdapter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/DialogServiceConnector.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/src/sdk/Audio/BaseAudioPlayer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/VoiceProfile.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/VoiceProfileEnrollmentResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/VoiceProfileResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/VoiceProfilePhraseResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/SpeakerRecognitionConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/src/common.browser/RestConfigBase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/src/common.browser/RestMessageAdapter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeakerRecognitionResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/SpeakerIdMessageAdapter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/VoiceProfileClient.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeakerIdentificationModel.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeakerVerificationModel.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeakerRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/AutoDetectSourceLanguageConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/AutoDetectSourceLanguageResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SourceLanguageConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/src/common.speech/Transcription/ConversationConnectionConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/src/common.speech/Transcription/ConversationTranslatorInterfaces.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/src/sdk/Transcription/ParticipantChangedReason.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/src/common.speech/Transcription/ConversationManager.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/src/common.speech/Transcription/ConversationConnectionMessage.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/src/common.speech/Transcription/ConversationWebsocketMessageFormatter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/src/common.speech/Transcription/ConversationConnectionFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/src/sdk/Transcription/ConversationTranslationCanceledEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/src/sdk/Transcription/ConversationExpirationEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/src/sdk/Transcription/ConversationTranslationResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/src/common.speech/Transcription/ConversationRequestSession.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/src/common.speech/Transcription/ConversationTranslatorEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ServiceMessages/src/common.speech/Transcription/ServiceMessages/CommandResponsePayload.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ServiceMessages/src/common.speech/Transcription/ServiceMessages/ParticipantResponsePayload.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ServiceMessages/src/common.speech/Transcription/ServiceMessages/TranslationResponsePayload.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/src/common.speech/Transcription/ConversationServiceAdapter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/src/common.speech/Transcription/ConversationTranslatorRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/src/sdk/Transcription/ConversationParticipantsChangedEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/src/sdk/Transcription/ConversationTranslationEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/src/sdk/Transcription/ConversationTranslator.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/src/sdk/Transcription/IParticipant.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/src/sdk/Transcription/Conversation.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/src/sdk/Transcription/ConversationCommon.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/SynthesizerConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/TranscriberConnectionFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/ConversationTranscriptionCanceledEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/TranscriptionServiceRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/src/common.speech/Transcription/TranscriberRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/src/sdk/Transcription/ConversationTranscriber.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/SpeechSynthesisConnectionFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/VoiceInfo.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/SynthesisRestAdapter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SynthesisVoicesResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/SpeechSynthesizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/PronunciationAssessmentResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/microsoft.cognitiveservices.speech.sdk.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/Contracts.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/PronunciationAssessmentConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/PronunciationAssessmentGradingSystem.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/PronunciationAssessmentGranularity.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/PropertyCollection.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/PropertyId.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/ResultReason.ts","../node_modules/object-assign/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/querystringify/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/index.js","../node_modules/react-fast-compare/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/requires-port/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/url-parse/index.js","../node_modules/warning/warning.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/universal-cookie/es6/utils.js","../node_modules/universal-cookie/es6/Cookies.js","../node_modules/universal-cookie/es6/index.js","helpers/token_utils.js","../node_modules/react-popper/lib/esm/Manager.js","../node_modules/react-popper/lib/esm/utils.js","../node_modules/@popperjs/core/lib/dom-utils/getWindow.js","../node_modules/@popperjs/core/lib/dom-utils/instanceOf.js","../node_modules/@popperjs/core/lib/utils/math.js","../node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js","../node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js","../node_modules/@popperjs/core/lib/dom-utils/getNodeName.js","../node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js","../node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js","../node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js","../node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js","../node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js","../node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js","../node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js","../node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js","../node_modules/@popperjs/core/lib/dom-utils/getParentNode.js","../node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js","../node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js","../node_modules/@popperjs/core/lib/dom-utils/isTableElement.js","../node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js","../node_modules/@popperjs/core/lib/enums.js","../node_modules/@popperjs/core/lib/utils/orderModifiers.js","../node_modules/@popperjs/core/lib/utils/debounce.js","../node_modules/@popperjs/core/lib/createPopper.js","../node_modules/@popperjs/core/lib/utils/mergeByName.js","../node_modules/@popperjs/core/lib/modifiers/eventListeners.js","../node_modules/@popperjs/core/lib/utils/getBasePlacement.js","../node_modules/@popperjs/core/lib/utils/getVariation.js","../node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js","../node_modules/@popperjs/core/lib/utils/computeOffsets.js","../node_modules/@popperjs/core/lib/modifiers/popperOffsets.js","../node_modules/@popperjs/core/lib/modifiers/computeStyles.js","../node_modules/@popperjs/core/lib/modifiers/offset.js","../node_modules/@popperjs/core/lib/utils/getOppositePlacement.js","../node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js","../node_modules/@popperjs/core/lib/dom-utils/contains.js","../node_modules/@popperjs/core/lib/utils/rectToClientRect.js","../node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js","../node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js","../node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js","../node_modules/@popperjs/core/lib/utils/mergePaddingObject.js","../node_modules/@popperjs/core/lib/utils/getFreshSideObject.js","../node_modules/@popperjs/core/lib/utils/expandToHashMap.js","../node_modules/@popperjs/core/lib/utils/detectOverflow.js","../node_modules/@popperjs/core/lib/utils/within.js","../node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","../node_modules/@popperjs/core/lib/utils/getAltAxis.js","../node_modules/@popperjs/core/lib/modifiers/arrow.js","../node_modules/@popperjs/core/lib/modifiers/hide.js","../node_modules/@popperjs/core/lib/popper.js","../node_modules/@popperjs/core/lib/modifiers/applyStyles.js","../node_modules/@popperjs/core/lib/modifiers/flip.js","../node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js","../node_modules/react-popper/lib/esm/usePopper.js","../node_modules/react-popper/lib/esm/Popper.js","../node_modules/react-popper/lib/esm/Reference.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/reactstrap/src/utils.js","../node_modules/reactstrap/src/Container.js","../node_modules/reactstrap/src/Row.js","../node_modules/reactstrap/src/Col.js","../node_modules/reactstrap/src/Navbar.js","../node_modules/reactstrap/src/NavbarBrand.js","../node_modules/reactstrap/src/NavbarText.js","../node_modules/reactstrap/src/NavbarToggler.js","../node_modules/reactstrap/src/Nav.js","../node_modules/reactstrap/src/NavItem.js","../node_modules/reactstrap/src/NavLink.js","../node_modules/reactstrap/src/Breadcrumb.js","../node_modules/reactstrap/src/BreadcrumbItem.js","../node_modules/reactstrap/src/Button.js","../node_modules/reactstrap/src/ButtonToggle.js","../node_modules/reactstrap/src/DropdownContext.js","../node_modules/reactstrap/src/Dropdown.js","../node_modules/reactstrap/src/ButtonDropdown.js","../node_modules/reactstrap/src/ButtonGroup.js","../node_modules/reactstrap/src/ButtonToolbar.js","../node_modules/reactstrap/src/DropdownItem.js","../node_modules/reactstrap/src/DropdownMenu.js","../node_modules/reactstrap/src/DropdownToggle.js","../node_modules/reactstrap/src/Fade.js","../node_modules/reactstrap/src/AccordionContext.js","../node_modules/reactstrap/src/Accordion.js","../node_modules/reactstrap/src/UncontrolledAccordion.js","../node_modules/reactstrap/src/AccordionHeader.js","../node_modules/reactstrap/src/AccordionItem.js","../node_modules/reactstrap/src/Collapse.js","../node_modules/reactstrap/src/AccordionBody.js","../node_modules/reactstrap/src/Badge.js","../node_modules/reactstrap/src/Card.js","../node_modules/reactstrap/src/CardGroup.js","../node_modules/reactstrap/src/CardDeck.js","../node_modules/reactstrap/src/CardColumns.js","../node_modules/reactstrap/src/CardBody.js","../node_modules/reactstrap/src/CardLink.js","../node_modules/reactstrap/src/CardFooter.js","../node_modules/reactstrap/src/CardHeader.js","../node_modules/reactstrap/src/CardImg.js","../node_modules/reactstrap/src/CardImgOverlay.js","../node_modules/reactstrap/src/CarouselItem.js","../node_modules/reactstrap/src/CarouselContext.js","../node_modules/reactstrap/src/Carousel.js","../node_modules/reactstrap/src/CarouselControl.js","../node_modules/reactstrap/src/CarouselIndicators.js","../node_modules/reactstrap/src/CarouselCaption.js","../node_modules/reactstrap/src/UncontrolledCarousel.js","../node_modules/reactstrap/src/CardSubtitle.js","../node_modules/reactstrap/src/CardText.js","../node_modules/reactstrap/src/CardTitle.js","../node_modules/reactstrap/src/PopperContent.js","../node_modules/reactstrap/src/PopperTargetHelper.js","../node_modules/reactstrap/src/TooltipPopoverWrapper.js","../node_modules/reactstrap/src/Popover.js","../node_modules/reactstrap/src/UncontrolledPopover.js","../node_modules/reactstrap/src/PopoverHeader.js","../node_modules/reactstrap/src/PopoverBody.js","../node_modules/reactstrap/src/Progress.js","../node_modules/reactstrap/src/Portal.js","../node_modules/reactstrap/src/Modal.js","../node_modules/reactstrap/src/ModalHeader.js","../node_modules/reactstrap/src/ModalBody.js","../node_modules/reactstrap/src/ModalFooter.js","../node_modules/reactstrap/src/Tooltip.js","../node_modules/reactstrap/src/Table.js","../node_modules/reactstrap/src/ListGroup.js","../node_modules/reactstrap/src/Form.js","../node_modules/reactstrap/src/FormFeedback.js","../node_modules/reactstrap/src/FormGroup.js","../node_modules/reactstrap/src/FormText.js","../node_modules/reactstrap/src/Input.js","../node_modules/reactstrap/src/InputGroup.js","../node_modules/reactstrap/src/InputGroupText.js","../node_modules/reactstrap/src/Label.js","../node_modules/reactstrap/src/Media.js","../node_modules/reactstrap/src/Offcanvas.js","../node_modules/reactstrap/src/OffcanvasBody.js","../node_modules/reactstrap/src/OffcanvasHeader.js","../node_modules/reactstrap/src/Pagination.js","../node_modules/reactstrap/src/PaginationItem.js","../node_modules/reactstrap/src/PaginationLink.js","../node_modules/reactstrap/src/TabContext.js","../node_modules/reactstrap/src/TabContent.js","../node_modules/reactstrap/src/TabPane.js","../node_modules/reactstrap/src/Alert.js","../node_modules/reactstrap/src/Toast.js","../node_modules/reactstrap/src/ToastBody.js","../node_modules/reactstrap/src/ToastHeader.js","../node_modules/reactstrap/src/ListGroupItem.js","../node_modules/reactstrap/src/ListGroupItemHeading.js","../node_modules/reactstrap/src/ListGroupItemText.js","../node_modules/reactstrap/src/List.js","../node_modules/reactstrap/src/ListInlineItem.js","../node_modules/reactstrap/src/UncontrolledAlert.js","../node_modules/reactstrap/src/UncontrolledButtonDropdown.js","../node_modules/reactstrap/src/UncontrolledCollapse.js","../node_modules/reactstrap/src/UncontrolledDropdown.js","../node_modules/reactstrap/src/UncontrolledTooltip.js","../node_modules/reactstrap/src/Spinner.js","../node_modules/reactstrap/src/Placeholder.js","../node_modules/reactstrap/src/PlaceholderButton.js","../node_modules/reactstrap/src/polyfill.js","App.js","reportWebVitals.js","index.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}\n\nmodule.exports = _createSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeFunction = require(\"./isNativeFunction.js\");\n\nvar construct = require(\"./construct.js\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = require(\"regenerator-runtime\");\n","'use strict'\n/* global fetch, btoa, Headers */\nconst core = require('./core')\n\nclass StatusError extends Error {\n  constructor (res, ...params) {\n    super(...params)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, StatusError)\n    }\n\n    this.name = 'StatusError'\n    this.message = res.statusMessage\n    this.statusCode = res.status\n    this.res = res\n    this.json = res.json.bind(res)\n    this.text = res.text.bind(res)\n    this.arrayBuffer = res.arrayBuffer.bind(res)\n    let buffer\n    const get = () => {\n      if (!buffer) buffer = this.arrayBuffer()\n      return buffer\n    }\n    Object.defineProperty(this, 'responseBody', { get })\n    // match Node.js headers object\n    this.headers = {}\n    for (const [key, value] of res.headers.entries()) {\n      this.headers[key.toLowerCase()] = value\n    }\n  }\n}\n\nconst mkrequest = (statusCodes, method, encoding, headers, baseurl) => async (_url, body, _headers = {}) => {\n  _url = baseurl + (_url || '')\n  let parsed = new URL(_url)\n\n  if (!headers) headers = {}\n  if (parsed.username) {\n    headers.Authorization = 'Basic ' + btoa(parsed.username + ':' + parsed.password)\n    parsed = new URL(parsed.protocol + '//' + parsed.host + parsed.pathname + parsed.search)\n  }\n  if (parsed.protocol !== 'https:' && parsed.protocol !== 'http:') {\n    throw new Error(`Unknown protocol, ${parsed.protocol}`)\n  }\n\n  if (body) {\n    if (body instanceof ArrayBuffer ||\n      ArrayBuffer.isView(body) ||\n      typeof body === 'string'\n    ) {\n      // noop\n    } else if (typeof body === 'object') {\n      body = JSON.stringify(body)\n      headers['Content-Type'] = 'application/json'\n    } else {\n      throw new Error('Unknown body type.')\n    }\n  }\n\n  _headers = new Headers({ ...(headers || {}), ..._headers })\n\n  const resp = await fetch(parsed, { method, headers: _headers, body })\n  resp.statusCode = resp.status\n\n  if (!statusCodes.has(resp.status)) {\n    throw new StatusError(resp)\n  }\n\n  if (encoding === 'json') return resp.json()\n  else if (encoding === 'buffer') return resp.arrayBuffer()\n  else if (encoding === 'string') return resp.text()\n  else return resp\n}\n\nmodule.exports = core(mkrequest)\n","'use strict'\nconst encodings = new Set(['json', 'buffer', 'string'])\n\nmodule.exports = mkrequest => (...args) => {\n  const statusCodes = new Set()\n  let method\n  let encoding\n  let headers\n  let baseurl = ''\n\n  args.forEach(arg => {\n    if (typeof arg === 'string') {\n      if (arg.toUpperCase() === arg) {\n        if (method) {\n          const msg = `Can't set method to ${arg}, already set to ${method}.`\n          throw new Error(msg)\n        } else {\n          method = arg\n        }\n      } else if (arg.startsWith('http:') || arg.startsWith('https:')) {\n        baseurl = arg\n      } else {\n        if (encodings.has(arg)) {\n          encoding = arg\n        } else {\n          throw new Error(`Unknown encoding, ${arg}`)\n        }\n      }\n    } else if (typeof arg === 'number') {\n      statusCodes.add(arg)\n    } else if (typeof arg === 'object') {\n      if (Array.isArray(arg) || arg instanceof Set) {\n        arg.forEach(code => statusCodes.add(code))\n      } else {\n        if (headers) {\n          throw new Error('Cannot set headers twice.')\n        }\n        headers = arg\n      }\n    } else {\n      throw new Error(`Unknown type: ${typeof arg}`)\n    }\n  })\n\n  if (!method) method = 'GET'\n  if (statusCodes.size === 0) {\n    statusCodes.add(200)\n  }\n\n  return mkrequest(statusCodes, method, encoding, headers, baseurl)\n}\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(';')\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var index = pair.indexOf('=')\n\n    // skip things that don't look like key=value\n    if (index < 0) {\n      continue;\n    }\n\n    var key = pair.substring(0, index).trim()\n\n    // only assign once\n    if (undefined == obj[key]) {\n      var val = pair.substring(index + 1, pair.length).trim()\n\n      // quoted values\n      if (val[0] === '\"') {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\n\r\nexport enum EventType {\r\n    Debug,\r\n    Info,\r\n    Warning,\r\n    Error,\r\n}\r\n\r\nexport class PlatformEvent {\r\n    private privName: string;\r\n    private privEventId: string;\r\n    private privEventTime: string;\r\n    private privEventType: EventType;\r\n    private privMetadata: IStringDictionary<string>;\r\n\r\n    constructor(eventName: string, eventType: EventType) {\r\n        this.privName = eventName;\r\n        this.privEventId = createNoDashGuid();\r\n        this.privEventTime = new Date().toISOString();\r\n        this.privEventType = eventType;\r\n        this.privMetadata = { };\r\n    }\r\n\r\n    public get name(): string {\r\n        return this.privName;\r\n    }\r\n\r\n    public get eventId(): string {\r\n        return this.privEventId;\r\n    }\r\n\r\n    public get eventTime(): string {\r\n        return this.privEventTime;\r\n    }\r\n\r\n    public get eventType(): EventType {\r\n        return this.privEventType;\r\n    }\r\n\r\n    public get metadata(): IStringDictionary<string> {\r\n        return this.privMetadata;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst createGuid: () => string = (): string => {\r\n    return uuid();\r\n};\r\n\r\nconst createNoDashGuid: () => string = (): string => {\r\n    return createGuid().replace(new RegExp(\"-\", \"g\"), \"\").toUpperCase();\r\n};\r\n\r\nexport { createGuid, createNoDashGuid };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { EventType, IEventListener, PlatformEvent } from \"../common/Exports\";\r\n\r\nexport class ConsoleLoggingListener implements IEventListener<PlatformEvent> {\r\n    private privLogLevelFilter: EventType;\r\n\r\n    public constructor(logLevelFilter: EventType = EventType.Warning) {\r\n        this.privLogLevelFilter = logLevelFilter;\r\n    }\r\n\r\n    public onEvent = (event: PlatformEvent): void => {\r\n        if (event.eventType >= this.privLogLevelFilter) {\r\n            const log = this.toString(event);\r\n\r\n            switch (event.eventType) {\r\n                case EventType.Debug:\r\n                    // tslint:disable-next-line:no-console\r\n                    console.debug(log);\r\n                    break;\r\n                case EventType.Info:\r\n                    // tslint:disable-next-line:no-console\r\n                    console.info(log);\r\n                    break;\r\n                case EventType.Warning:\r\n                    // tslint:disable-next-line:no-console\r\n                    console.warn(log);\r\n                    break;\r\n                case EventType.Error:\r\n                    // tslint:disable-next-line:no-console\r\n                    console.error(log);\r\n                    break;\r\n                default:\r\n                    // tslint:disable-next-line:no-console\r\n                    console.log(log);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private toString = (event: any): string => {\r\n        const logFragments = [\r\n            `${event.EventTime}`,\r\n            `${event.Name}`,\r\n        ];\r\n\r\n        for (const prop in event) {\r\n            if (prop && event.hasOwnProperty(prop) &&\r\n                prop !== \"eventTime\" && prop !== \"eventType\" &&\r\n                prop !== \"eventId\" && prop !== \"name\" &&\r\n                prop !== \"constructor\") {\r\n                const value = event[prop];\r\n                let valueToLog = \"<NULL>\";\r\n                if (value !== undefined && value !== null) {\r\n                    if (typeof (value) === \"number\" || typeof (value) === \"string\") {\r\n                        valueToLog = value.toString();\r\n                    } else {\r\n                        valueToLog = JSON.stringify(value);\r\n                    }\r\n                }\r\n\r\n                logFragments.push(`${prop}: ${valueToLog}`);\r\n            }\r\n\r\n        }\r\n\r\n        return logFragments.join(\" | \");\r\n    }\r\n}\r\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\n/**\r\n * The error that is thrown when an argument passed in is null.\r\n *\r\n * @export\r\n * @class ArgumentNullError\r\n * @extends {Error}\r\n */\r\nexport class ArgumentNullError extends Error {\r\n\r\n    /**\r\n     * Creates an instance of ArgumentNullError.\r\n     *\r\n     * @param {string} argumentName - Name of the argument that is null\r\n     *\r\n     * @memberOf ArgumentNullError\r\n     */\r\n    public constructor(argumentName: string) {\r\n        super(argumentName);\r\n        this.name = \"ArgumentNull\";\r\n        this.message = argumentName;\r\n    }\r\n}\r\n\r\n/**\r\n * The error that is thrown when an invalid operation is performed in the code.\r\n *\r\n * @export\r\n * @class InvalidOperationError\r\n * @extends {Error}\r\n */\r\nexport class InvalidOperationError extends Error {\r\n\r\n    /**\r\n     * Creates an instance of InvalidOperationError.\r\n     *\r\n     * @param {string} error - The error\r\n     *\r\n     * @memberOf InvalidOperationError\r\n     */\r\n    public constructor(error: string) {\r\n        super(error);\r\n        this.name = \"InvalidOperation\";\r\n        this.message = error;\r\n    }\r\n}\r\n\r\n/**\r\n * The error that is thrown when an object is disposed.\r\n *\r\n * @export\r\n * @class ObjectDisposedError\r\n * @extends {Error}\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class ObjectDisposedError extends Error {\r\n\r\n    /**\r\n     * Creates an instance of ObjectDisposedError.\r\n     *\r\n     * @param {string} objectName - The object that is disposed\r\n     * @param {string} error - The error\r\n     *\r\n     * @memberOf ObjectDisposedError\r\n     */\r\n    public constructor(objectName: string, error?: string) {\r\n        super(error);\r\n        this.name = objectName + \"ObjectDisposed\";\r\n        this.message = error;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ObjectDisposedError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { IDetachable } from \"./IDetachable\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\nimport { IEventListener, IEventSource } from \"./IEventSource\";\r\nimport { PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class EventSource<TEvent extends PlatformEvent> implements IEventSource<TEvent> {\r\n    private privEventListeners: IStringDictionary<(event: TEvent) => void> = {};\r\n    private privMetadata: IStringDictionary<string>;\r\n    private privIsDisposed: boolean = false;\r\n\r\n    constructor(metadata?: IStringDictionary<string>) {\r\n        this.privMetadata = metadata;\r\n    }\r\n\r\n    public onEvent = (event: TEvent): void => {\r\n        if (this.isDisposed()) {\r\n            throw (new ObjectDisposedError(\"EventSource\"));\r\n        }\r\n\r\n        if (this.metadata) {\r\n            for (const paramName in this.metadata) {\r\n                if (paramName) {\r\n                    if (event.metadata) {\r\n                        if (!event.metadata[paramName]) {\r\n                            event.metadata[paramName] = this.metadata[paramName];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const eventId in this.privEventListeners) {\r\n            if (eventId && this.privEventListeners[eventId]) {\r\n                this.privEventListeners[eventId](event);\r\n            }\r\n        }\r\n    }\r\n\r\n    public attach = (onEventCallback: (event: TEvent) => void): IDetachable => {\r\n        const id = createNoDashGuid();\r\n        this.privEventListeners[id] = onEventCallback;\r\n        return {\r\n            detach: () => {\r\n                delete this.privEventListeners[id];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public attachListener = (listener: IEventListener<TEvent>): IDetachable => {\r\n        return this.attach(listener.onEvent);\r\n    }\r\n\r\n    public isDisposed = (): boolean => {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public dispose = (): void => {\r\n        this.privEventListeners = null;\r\n        this.privIsDisposed = true;\r\n    }\r\n\r\n    public get metadata(): IStringDictionary<string> {\r\n        return this.privMetadata;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError } from \"./Error\";\r\nimport { EventSource } from \"./EventSource\";\r\nimport { IEventSource } from \"./IEventSource\";\r\nimport { PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class Events {\r\n    private static privInstance: IEventSource<PlatformEvent> = new EventSource<PlatformEvent>();\r\n\r\n    public static setEventSource = (eventSource: IEventSource<PlatformEvent>): void => {\r\n        if (!eventSource) {\r\n            throw new ArgumentNullError(\"eventSource\");\r\n        }\r\n\r\n        Events.privInstance = eventSource;\r\n    }\r\n\r\n    public static get instance(): IEventSource<PlatformEvent> {\r\n        return Events.privInstance;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class RiffPcmEncoder {\r\n\r\n    private privActualSampleRate: number;\r\n    private privDesiredSampleRate: number;\r\n\r\n    public constructor(actualSampleRate: number, desiredSampleRate: number) {\r\n        this.privActualSampleRate = actualSampleRate;\r\n        this.privDesiredSampleRate = desiredSampleRate;\r\n    }\r\n\r\n    public encode = (\r\n        actualAudioFrame: Float32Array): ArrayBuffer => {\r\n\r\n        const audioFrame = this.downSampleAudioFrame(actualAudioFrame, this.privActualSampleRate, this.privDesiredSampleRate);\r\n\r\n        if (!audioFrame) {\r\n            return null;\r\n        }\r\n\r\n        const audioLength = audioFrame.length * 2;\r\n\r\n        const buffer = new ArrayBuffer(audioLength);\r\n        const view = new DataView(buffer);\r\n        this.floatTo16BitPCM(view, 0, audioFrame);\r\n\r\n        return buffer;\r\n    }\r\n\r\n    private setString = (view: DataView, offset: number, str: string): void => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint8(offset + i, str.charCodeAt(i));\r\n        }\r\n    }\r\n\r\n    private floatTo16BitPCM = (view: DataView, offset: number, input: Float32Array): void => {\r\n        for (let i = 0; i < input.length; i++ , offset += 2) {\r\n            const s = Math.max(-1, Math.min(1, input[i]));\r\n            view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\r\n        }\r\n    }\r\n\r\n    private downSampleAudioFrame = (\r\n        srcFrame: Float32Array,\r\n        srcRate: number,\r\n        dstRate: number): Float32Array => {\r\n\r\n        if (!srcFrame) {\r\n            return null;\r\n        }\r\n\r\n        if (dstRate === srcRate || dstRate > srcRate) {\r\n            return srcFrame;\r\n        }\r\n\r\n        const ratio = srcRate / dstRate;\r\n        const dstLength = Math.round(srcFrame.length / ratio);\r\n        const dstFrame = new Float32Array(dstLength);\r\n        let srcOffset = 0;\r\n        let dstOffset = 0;\r\n        while (dstOffset < dstLength) {\r\n            const nextSrcOffset = Math.round((dstOffset + 1) * ratio);\r\n            let accum = 0;\r\n            let count = 0;\r\n            while (srcOffset < nextSrcOffset && srcOffset < srcFrame.length) {\r\n                accum += srcFrame[srcOffset++];\r\n                count++;\r\n            }\r\n            dstFrame[dstOffset++] = accum / count;\r\n        }\r\n\r\n        return dstFrame;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { PropertyCollection, PropertyId } from \"../sdk/Exports\";\r\n\r\nexport enum RecognitionMode {\r\n    Interactive,\r\n    Conversation,\r\n    Dictation,\r\n}\r\n\r\nexport enum SpeechResultFormat {\r\n    Simple,\r\n    Detailed,\r\n}\r\n\r\nexport class RecognizerConfig {\r\n    private privRecognitionMode: RecognitionMode = RecognitionMode.Interactive;\r\n    private privSpeechServiceConfig: SpeechServiceConfig;\r\n    private privRecognitionActivityTimeout: number;\r\n    private privParameters: PropertyCollection;\r\n    private privMaxRetryCount: number;\r\n\r\n    constructor(\r\n        speechServiceConfig: SpeechServiceConfig,\r\n        parameters: PropertyCollection) {\r\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new SpeechServiceConfig(new Context(null));\r\n        this.privParameters = parameters;\r\n        this.privMaxRetryCount = parseInt(parameters.getProperty(\"SPEECH-Error-MaxRetryCount\", \"4\"), 10);\r\n    }\r\n\r\n    public get parameters(): PropertyCollection {\r\n        return this.privParameters;\r\n    }\r\n\r\n    public get recognitionMode(): RecognitionMode {\r\n        return this.privRecognitionMode;\r\n    }\r\n\r\n    public set recognitionMode(value: RecognitionMode) {\r\n        this.privRecognitionMode = value;\r\n        this.privRecognitionActivityTimeout = value === RecognitionMode.Interactive ? 8000 : 25000;\r\n        this.privSpeechServiceConfig.Recognition = RecognitionMode[value];\r\n    }\r\n\r\n    public get SpeechServiceConfig(): SpeechServiceConfig {\r\n        return this.privSpeechServiceConfig;\r\n    }\r\n\r\n    public get recognitionActivityTimeout(): number {\r\n        return this.privRecognitionActivityTimeout;\r\n    }\r\n\r\n    public get isContinuousRecognition(): boolean {\r\n        return this.privRecognitionMode !== RecognitionMode.Interactive;\r\n    }\r\n\r\n    public get autoDetectSourceLanguages(): string {\r\n        return this.parameters.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, undefined);\r\n    }\r\n\r\n    public get maxRetryCount(): number {\r\n        return this.privMaxRetryCount;\r\n    }\r\n}\r\n\r\n// The config is serialized and sent as the Speech.Config\r\nexport class SpeechServiceConfig {\r\n    private context: Context;\r\n    private recognition: string;\r\n\r\n    constructor(context: Context) {\r\n        this.context = context;\r\n    }\r\n\r\n    public serialize = (): string => {\r\n        return JSON.stringify(this, (key: any, value: any): any => {\r\n            if (value && typeof value === \"object\") {\r\n                const replacement: any = {};\r\n                for (const k in value) {\r\n                    if (Object.hasOwnProperty.call(value, k)) {\r\n                        replacement[k && k.charAt(0).toLowerCase() + k.substring(1)] = value[k];\r\n                    }\r\n                }\r\n                return replacement;\r\n            }\r\n            return value;\r\n        });\r\n    }\r\n\r\n    public get Context(): Context {\r\n        return this.context;\r\n    }\r\n\r\n    public get Recognition(): string {\r\n        return this.recognition;\r\n    }\r\n\r\n    public set Recognition(value: string) {\r\n        this.recognition = value.toLowerCase();\r\n    }\r\n}\r\n\r\nexport class Context {\r\n    public system: System;\r\n    public os: OS;\r\n    public audio: ISpeechConfigAudio;\r\n\r\n    constructor(os: OS) {\r\n        this.system = new System();\r\n        this.os = os;\r\n    }\r\n}\r\n\r\nexport class System {\r\n    public name: string;\r\n    public version: string;\r\n    public build: string;\r\n    public lang: string;\r\n\r\n    constructor() {\r\n        // Note: below will be patched for official builds.\r\n        const SPEECHSDK_CLIENTSDK_VERSION = \"1.20.0\";\r\n\r\n        this.name = \"SpeechSDK\";\r\n        this.version = SPEECHSDK_CLIENTSDK_VERSION;\r\n        this.build = \"JavaScript\";\r\n        this.lang = \"JavaScript\";\r\n    }\r\n}\r\n\r\nexport class OS {\r\n    public platform: string;\r\n    public name: string;\r\n    public version: string;\r\n\r\n    constructor(platform: string, name: string, version: string) {\r\n        this.platform = platform;\r\n        this.name = name;\r\n        this.version = version;\r\n    }\r\n}\r\n\r\nexport class Device {\r\n    public manufacturer: string;\r\n    public model: string;\r\n    public version: string;\r\n\r\n    constructor(manufacturer: string, model: string, version: string) {\r\n        this.manufacturer = manufacturer;\r\n        this.model = model;\r\n        this.version = version;\r\n    }\r\n}\r\n\r\nexport interface ISpeechConfigAudio {\r\n    source?: ISpeechConfigAudioDevice;\r\n    playback?: ISpeechConfigAudioDevice;\r\n}\r\n\r\nexport interface ISpeechConfigAudioDevice {\r\n    manufacturer: string;\r\n    model: string;\r\n    connectivity: connectivity;\r\n    type: type;\r\n    samplerate: number;\r\n    bitspersample: number;\r\n    channelcount: number;\r\n}\r\n\r\nexport enum connectivity {\r\n    Bluetooth = \"Bluetooth\",\r\n    Wired = \"Wired\",\r\n    WiFi = \"WiFi\",\r\n    Cellular = \"Cellular\",\r\n    InBuilt = \"InBuilt\",\r\n    Unknown = \"Unknown\",\r\n}\r\n\r\nexport enum type {\r\n    Phone = \"Phone\",\r\n    Speaker = \"Speaker\",\r\n    Car = \"Car\",\r\n    Headset = \"Headset\",\r\n    Thermostat = \"Thermostat\",\r\n    Microphones = \"Microphones\",\r\n    Deskphone = \"Deskphone\",\r\n    RemoteControl = \"RemoteControl\",\r\n    Unknown = \"Unknown\",\r\n    File = \"File\",\r\n    Stream = \"Stream\",\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RiffPcmEncoder, Stream } from \"../common/Exports\";\r\nimport { IRecorder } from \"./IRecorder\";\r\n\r\nexport class PcmRecorder implements IRecorder {\r\n    private privMediaResources: IMediaResources;\r\n    private privSpeechProcessorScript: string; // speech-processor.js Url\r\n    private privStopInputOnRelease: boolean;\r\n\r\n    public constructor(stopInputOnRelease: boolean) {\r\n        this.privStopInputOnRelease = stopInputOnRelease;\r\n    }\r\n\r\n    public record = (context: AudioContext, mediaStream: MediaStream, outputStream: Stream<ArrayBuffer>): void => {\r\n        const desiredSampleRate = 16000;\r\n\r\n        const waveStreamEncoder = new RiffPcmEncoder(context.sampleRate, desiredSampleRate);\r\n        let needHeader: boolean = true;\r\n\r\n        const micInput = context.createMediaStreamSource(mediaStream);\r\n        if (!this.privSpeechProcessorScript) {\r\n            const workletScript = `class SP extends AudioWorkletProcessor {\r\n                constructor(options) {\r\n                  super(options);\r\n                }\r\n                process(inputs, outputs) {\r\n                  const input = inputs[0];\r\n                  const output = [];\r\n                  for (let channel = 0; channel < input.length; channel += 1) {\r\n                    output[channel] = input[channel];\r\n                  }\r\n                  this.port.postMessage(output[0]);\r\n                  return true;\r\n                }\r\n              }\r\n              registerProcessor('speech-processor', SP);`; // tslint:disable-line:max-line-length\r\n            const blob = new Blob([workletScript], { type: \"application/javascript; charset=utf-8\" });\r\n            this.privSpeechProcessorScript = URL.createObjectURL(blob);\r\n        }\r\n\r\n        const attachScriptProcessor = () => {\r\n            const scriptNode = (() => {\r\n                let bufferSize = 0;\r\n                try {\r\n                    return context.createScriptProcessor(bufferSize, 1, 1);\r\n                } catch (error) {\r\n                    // Webkit (<= version 31) requires a valid bufferSize.\r\n                    bufferSize = 2048;\r\n                    let audioSampleRate = context.sampleRate;\r\n                    while (bufferSize < 16384 && audioSampleRate >= (2 * desiredSampleRate)) {\r\n                        bufferSize <<= 1;\r\n                        audioSampleRate >>= 1;\r\n                    }\r\n                    return context.createScriptProcessor(bufferSize, 1, 1);\r\n                }\r\n            })();\r\n            scriptNode.onaudioprocess = (event: AudioProcessingEvent) => {\r\n                const inputFrame = event.inputBuffer.getChannelData(0);\r\n\r\n                if (outputStream && !outputStream.isClosed) {\r\n                    const waveFrame = waveStreamEncoder.encode(inputFrame);\r\n                    if (!!waveFrame) {\r\n                        outputStream.writeStreamChunk({\r\n                            buffer: waveFrame,\r\n                            isEnd: false,\r\n                            timeReceived: Date.now(),\r\n                        });\r\n                        needHeader = false;\r\n                    }\r\n                }\r\n            };\r\n            micInput.connect(scriptNode);\r\n            scriptNode.connect(context.destination);\r\n            this.privMediaResources = {\r\n                scriptProcessorNode: scriptNode,\r\n                source: micInput,\r\n                stream: mediaStream,\r\n            };\r\n        };\r\n\r\n        // https://webaudio.github.io/web-audio-api/#audioworklet\r\n        // Using AudioWorklet to improve audio quality and avoid audio glitches due to blocking the UI thread\r\n\r\n        if (!!this.privSpeechProcessorScript && !!context.audioWorklet) {\r\n            context.audioWorklet\r\n                .addModule(this.privSpeechProcessorScript)\r\n                .then(() => {\r\n                    const workletNode = new AudioWorkletNode(context, \"speech-processor\");\r\n                    workletNode.port.onmessage = (ev: MessageEvent) => {\r\n                        const inputFrame: Float32Array = ev.data as Float32Array;\r\n\r\n                        if (outputStream && !outputStream.isClosed) {\r\n                            const waveFrame = waveStreamEncoder.encode(inputFrame);\r\n                            if (!!waveFrame) {\r\n                                outputStream.writeStreamChunk({\r\n                                    buffer: waveFrame,\r\n                                    isEnd: false,\r\n                                    timeReceived: Date.now(),\r\n                                });\r\n                                needHeader = false;\r\n                            }\r\n                        }\r\n                    };\r\n                    micInput.connect(workletNode);\r\n                    workletNode.connect(context.destination);\r\n                    this.privMediaResources = {\r\n                        scriptProcessorNode: workletNode,\r\n                        source: micInput,\r\n                        stream: mediaStream,\r\n                    };\r\n                })\r\n                .catch(() => {\r\n                    attachScriptProcessor();\r\n                });\r\n        } else {\r\n            try {\r\n                attachScriptProcessor();\r\n            } catch (err) {\r\n                throw new Error(`Unable to start audio worklet node for PCMRecorder: ${err}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    public releaseMediaResources = (context: AudioContext): void => {\r\n        if (this.privMediaResources) {\r\n            if (this.privMediaResources.scriptProcessorNode) {\r\n                this.privMediaResources.scriptProcessorNode.disconnect(context.destination);\r\n                this.privMediaResources.scriptProcessorNode = null;\r\n            }\r\n            if (this.privMediaResources.source) {\r\n                this.privMediaResources.source.disconnect();\r\n                if (this.privStopInputOnRelease) {\r\n                    this.privMediaResources.stream.getTracks().forEach((track: any) => track.stop());\r\n                }\r\n                this.privMediaResources.source = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public setWorkletUrl(url: string): void {\r\n        this.privSpeechProcessorScript = url;\r\n    }\r\n}\r\n\r\ninterface IMediaResources {\r\n    source: MediaStreamAudioSourceNode;\r\n    scriptProcessorNode: ScriptProcessorNode | AudioWorkletNode;\r\n    stream: MediaStream;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { ArgumentNullError } from \"./Error\";\r\n\r\nexport enum PromiseState {\r\n    None,\r\n    Resolved,\r\n    Rejected,\r\n}\r\n\r\nexport interface IDeferred<T> {\r\n    readonly promise: Promise<T>;\r\n\r\n    resolve(result: T): IDeferred<T>;\r\n\r\n    reject(error: string): IDeferred<T>;\r\n}\r\n\r\nexport class PromiseResult<T> {\r\n    protected privIsCompleted: boolean;\r\n    protected privIsError: boolean;\r\n    protected privError: string;\r\n    protected privResult: T;\r\n\r\n    public constructor(promiseResultEventSource: PromiseResultEventSource<T>) {\r\n        promiseResultEventSource.on((result: T) => {\r\n            if (!this.privIsCompleted) {\r\n                this.privIsCompleted = true;\r\n                this.privIsError = false;\r\n                this.privResult = result;\r\n            }\r\n        }, (error: string) => {\r\n            if (!this.privIsCompleted) {\r\n                this.privIsCompleted = true;\r\n                this.privIsError = true;\r\n                this.privError = error;\r\n            }\r\n        });\r\n    }\r\n\r\n    public get isCompleted(): boolean {\r\n        return this.privIsCompleted;\r\n    }\r\n\r\n    public get isError(): boolean {\r\n        return this.privIsError;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n\r\n    public get result(): T {\r\n        return this.privResult;\r\n    }\r\n\r\n    public throwIfError = (): void => {\r\n        if (this.isError) {\r\n            throw this.error;\r\n        }\r\n    }\r\n}\r\n\r\nexport class PromiseResultEventSource<T>  {\r\n\r\n    private privOnSetResult: (result: T) => void;\r\n    private privOnSetError: (error: string) => void;\r\n\r\n    public setResult = (result: T): void => {\r\n        this.privOnSetResult(result);\r\n    }\r\n\r\n    public setError = (error: string): void => {\r\n        this.privOnSetError(error);\r\n    }\r\n\r\n    public on = (onSetResult: (result: T) => void, onSetError: (error: string) => void): void => {\r\n        this.privOnSetResult = onSetResult;\r\n        this.privOnSetError = onSetError;\r\n    }\r\n}\r\n\r\nexport class Deferred<T> implements IDeferred<T> {\r\n    private privPromise: Promise<T>;\r\n    private privResolve: (value?: T | PromiseLike<T>) => void;\r\n    private privReject: (reason?: any) => void;\r\n\r\n    public constructor() {\r\n        this.privPromise = new Promise<T>((resolve: (value: T) => void, reject: (reason: any) => void) => {\r\n            this.privResolve = resolve;\r\n            this.privReject = reject;\r\n        });\r\n    }\r\n\r\n    public get promise(): Promise<T> {\r\n        return this.privPromise;\r\n    }\r\n\r\n    public resolve = (result: T | Promise<T>): Deferred<T> => {\r\n        this.privResolve(result);\r\n        return this;\r\n    }\r\n\r\n    public reject = (error: string): Deferred<T> => {\r\n        this.privReject(error);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class Sink<T> {\r\n    private privState: PromiseState = PromiseState.None;\r\n    private privPromiseResult: PromiseResult<T> = null;\r\n    private privPromiseResultEvents: PromiseResultEventSource<T> = null;\r\n\r\n    private privSuccessHandlers: ((result: T) => void)[] = [];\r\n    private privErrorHandlers: ((e: string) => void)[] = [];\r\n\r\n    public constructor() {\r\n        this.privPromiseResultEvents = new PromiseResultEventSource();\r\n        this.privPromiseResult = new PromiseResult(this.privPromiseResultEvents);\r\n    }\r\n\r\n    public get state(): PromiseState {\r\n        return this.privState;\r\n    }\r\n\r\n    public get result(): PromiseResult<T> {\r\n        return this.privPromiseResult;\r\n    }\r\n\r\n    public resolve = (result: T): void => {\r\n        if (this.privState !== PromiseState.None) {\r\n            throw new Error(\"'Cannot resolve a completed promise'\");\r\n        }\r\n\r\n        this.privState = PromiseState.Resolved;\r\n        this.privPromiseResultEvents.setResult(result);\r\n\r\n        for (let i = 0; i < this.privSuccessHandlers.length; i++) {\r\n            this.executeSuccessCallback(result, this.privSuccessHandlers[i], this.privErrorHandlers[i]);\r\n        }\r\n\r\n        this.detachHandlers();\r\n    }\r\n\r\n    public reject = (error: string): void => {\r\n        if (this.privState !== PromiseState.None) {\r\n            throw new Error(\"'Cannot reject a completed promise'\");\r\n        }\r\n\r\n        this.privState = PromiseState.Rejected;\r\n        this.privPromiseResultEvents.setError(error);\r\n\r\n        for (const errorHandler of this.privErrorHandlers) {\r\n            this.executeErrorCallback(error, errorHandler);\r\n        }\r\n\r\n        this.detachHandlers();\r\n    }\r\n\r\n    public on = (\r\n        successCallback: (result: T) => void,\r\n        errorCallback: (error: string) => void): void => {\r\n\r\n        if (successCallback == null) {\r\n            successCallback = (r: T) => { return; };\r\n        }\r\n\r\n        if (this.privState === PromiseState.None) {\r\n            this.privSuccessHandlers.push(successCallback);\r\n            this.privErrorHandlers.push(errorCallback);\r\n        } else {\r\n            if (this.privState === PromiseState.Resolved) {\r\n                this.executeSuccessCallback(this.privPromiseResult.result, successCallback, errorCallback);\r\n            } else if (this.privState === PromiseState.Rejected) {\r\n                this.executeErrorCallback(this.privPromiseResult.error, errorCallback);\r\n            }\r\n\r\n            this.detachHandlers();\r\n        }\r\n    }\r\n\r\n    private executeSuccessCallback = (result: T, successCallback: (result: T) => void, errorCallback: (error: string) => void): void => {\r\n        try {\r\n            successCallback(result);\r\n        } catch (e) {\r\n            this.executeErrorCallback(`'Unhandled callback error: ${e}'`, errorCallback);\r\n        }\r\n    }\r\n\r\n    private executeErrorCallback = (error: string, errorCallback: (error: string) => void): void => {\r\n        if (errorCallback) {\r\n            try {\r\n                errorCallback(error);\r\n            } catch (e) {\r\n                throw new Error(`'Unhandled callback error: ${e}. InnerError: ${error}'`);\r\n            }\r\n        } else {\r\n            throw new Error(`'Unhandled error: ${error}'`);\r\n        }\r\n    }\r\n\r\n    private detachHandlers = (): void => {\r\n        this.privErrorHandlers = [];\r\n        this.privSuccessHandlers = [];\r\n    }\r\n}\r\n\r\nexport function marshalPromiseToCallbacks<T>(\r\n    promise: Promise<T>,\r\n    cb?: (value: T) => void,\r\n    err?: (error: string) => void): void {\r\n    promise.then((val: T): void => {\r\n        try {\r\n            if (!!cb) {\r\n                cb(val);\r\n            }\r\n        } catch (error) {\r\n            if (!!err) {\r\n                try {\r\n                    if (error instanceof Error) {\r\n                        const typedError: Error = error as Error;\r\n                        err(typedError.name + \": \" + typedError.message);\r\n                    } else {\r\n                        err(error);\r\n                    }\r\n                    /* tslint:disable:no-empty */\r\n                } catch (error) { }\r\n            }\r\n        }\r\n    }, (error: any): void => {\r\n        if (!!err) {\r\n            try {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error);\r\n                }\r\n                /* tslint:disable:no-empty */\r\n            } catch (error) { }\r\n        }\r\n    });\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class AudioSourceEvent extends PlatformEvent {\r\n    private privAudioSourceId: string;\r\n\r\n    constructor(eventName: string, audioSourceId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n        this.privAudioSourceId = audioSourceId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n}\r\n\r\nexport class AudioSourceInitializingEvent extends AudioSourceEvent {\r\n    constructor(audioSourceId: string) {\r\n        super(\"AudioSourceInitializingEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceReadyEvent extends AudioSourceEvent {\r\n    constructor(audioSourceId: string) {\r\n        super(\"AudioSourceReadyEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceOffEvent extends AudioSourceEvent {\r\n    constructor(audioSourceId: string) {\r\n        super(\"AudioSourceOffEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceErrorEvent extends AudioSourceEvent {\r\n    private privError: string;\r\n\r\n    constructor(audioSourceId: string, error: string) {\r\n        super(\"AudioSourceErrorEvent\", audioSourceId, EventType.Error);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeEvent extends AudioSourceEvent {\r\n    private privAudioNodeId: string;\r\n\r\n    constructor(eventName: string, audioSourceId: string, audioNodeId: string) {\r\n        super(eventName, audioSourceId);\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeAttachingEvent extends AudioStreamNodeEvent {\r\n    constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeAttachingEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeAttachedEvent extends AudioStreamNodeEvent {\r\n    constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeAttachedEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeDetachedEvent extends AudioStreamNodeEvent {\r\n    constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeDetachedEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeErrorEvent extends AudioStreamNodeEvent {\r\n    private privError: string;\r\n\r\n    constructor(audioSourceId: string, audioNodeId: string, error: string) {\r\n        super(\"AudioStreamNodeErrorEvent\", audioSourceId, audioNodeId);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ObjectDisposedError } from \"./Error\";\r\nimport { IDetachable } from \"./IDetachable\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\nimport { IDisposable } from \"./IDisposable\";\r\n\r\nexport interface IList<TItem> extends IDisposable {\r\n    get(itemIndex: number): TItem;\r\n    first(): TItem;\r\n    last(): TItem;\r\n\r\n    add(item: TItem): void;\r\n    insertAt(index: number, item: TItem): void;\r\n\r\n    removeFirst(): TItem;\r\n    removeLast(): TItem;\r\n    removeAt(index: number): TItem;\r\n    remove(index: number, count: number): TItem[];\r\n    clear(): void;\r\n\r\n    length(): number;\r\n\r\n    onAdded(addedCallback: () => void): IDetachable;\r\n    onRemoved(removedCallback: () => void): IDetachable;\r\n    onDisposed(disposedCallback: () => void): IDetachable;\r\n\r\n    join(seperator?: string): string;\r\n\r\n    toArray(): TItem[];\r\n\r\n    any(callback?: (item: TItem, index: number) => boolean): boolean;\r\n    all(callback: (item: TItem) => boolean): boolean;\r\n    forEach(callback: (item: TItem, index: number) => void): void;\r\n    select<T2>(callback: (item: TItem, index: number) => T2): List<T2>;\r\n    where(callback: (item: TItem, index: number) => boolean): List<TItem>;\r\n    orderBy(compareFn: (a: TItem, b: TItem) => number): List<TItem>;\r\n    orderByDesc(compareFn: (a: TItem, b: TItem) => number): List<TItem>;\r\n    clone(): List<TItem>;\r\n    concat(list: List<TItem>): List<TItem>;\r\n    concatArray(array: TItem[]): List<TItem>;\r\n}\r\n\r\nexport class List<TItem> implements IList<TItem>  {\r\n    private privList: TItem[];\r\n    private privSubscriptionIdCounter: number = 0;\r\n    private privAddSubscriptions: IStringDictionary<() => void> = {};\r\n    private privRemoveSubscriptions: IStringDictionary<() => void> = {};\r\n    private privDisposedSubscriptions: IStringDictionary<() => void> = {};\r\n    private privDisposeReason: string = null;\r\n\r\n    public constructor(list?: TItem[]) {\r\n        this.privList = [];\r\n        // copy the list rather than taking as is.\r\n        if (list) {\r\n            for (const item of list) {\r\n                this.privList.push(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    public get = (itemIndex: number): TItem => {\r\n        this.throwIfDisposed();\r\n        return this.privList[itemIndex];\r\n    }\r\n\r\n    public first = (): TItem => {\r\n        return this.get(0);\r\n    }\r\n\r\n    public last = (): TItem => {\r\n        return this.get(this.length() - 1);\r\n    }\r\n\r\n    public add = (item: TItem): void => {\r\n        this.throwIfDisposed();\r\n        this.insertAt(this.privList.length, item);\r\n    }\r\n\r\n    public insertAt = (index: number, item: TItem): void => {\r\n        this.throwIfDisposed();\r\n        if (index === 0) {\r\n            this.privList.unshift(item);\r\n        } else if (index === this.privList.length) {\r\n            this.privList.push(item);\r\n        } else {\r\n            this.privList.splice(index, 0, item);\r\n        }\r\n        this.triggerSubscriptions(this.privAddSubscriptions);\r\n    }\r\n\r\n    public removeFirst = (): TItem => {\r\n        this.throwIfDisposed();\r\n        return this.removeAt(0);\r\n    }\r\n\r\n    public removeLast = (): TItem => {\r\n        this.throwIfDisposed();\r\n        return this.removeAt(this.length() - 1);\r\n    }\r\n\r\n    public removeAt = (index: number): TItem => {\r\n        this.throwIfDisposed();\r\n        return this.remove(index, 1)[0];\r\n    }\r\n\r\n    public remove = (index: number, count: number): TItem[] => {\r\n        this.throwIfDisposed();\r\n        const removedElements = this.privList.splice(index, count);\r\n        this.triggerSubscriptions(this.privRemoveSubscriptions);\r\n        return removedElements;\r\n    }\r\n\r\n    public clear = (): void => {\r\n        this.throwIfDisposed();\r\n        this.remove(0, this.length());\r\n    }\r\n\r\n    public length = (): number => {\r\n        this.throwIfDisposed();\r\n        return this.privList.length;\r\n    }\r\n\r\n    public onAdded = (addedCallback: () => void): IDetachable => {\r\n        this.throwIfDisposed();\r\n        const subscriptionId = this.privSubscriptionIdCounter++;\r\n\r\n        this.privAddSubscriptions[subscriptionId] = addedCallback;\r\n\r\n        return {\r\n            detach: () => {\r\n                delete this.privAddSubscriptions[subscriptionId];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public onRemoved = (removedCallback: () => void): IDetachable => {\r\n        this.throwIfDisposed();\r\n        const subscriptionId = this.privSubscriptionIdCounter++;\r\n\r\n        this.privRemoveSubscriptions[subscriptionId] = removedCallback;\r\n\r\n        return {\r\n            detach: () => {\r\n                delete this.privRemoveSubscriptions[subscriptionId];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public onDisposed = (disposedCallback: () => void): IDetachable => {\r\n        this.throwIfDisposed();\r\n        const subscriptionId = this.privSubscriptionIdCounter++;\r\n\r\n        this.privDisposedSubscriptions[subscriptionId] = disposedCallback;\r\n\r\n        return {\r\n            detach: () => {\r\n                delete this.privDisposedSubscriptions[subscriptionId];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public join = (seperator?: string): string => {\r\n        this.throwIfDisposed();\r\n        return this.privList.join(seperator);\r\n    }\r\n\r\n    public toArray = (): TItem[] => {\r\n        const cloneCopy = Array<TItem>();\r\n        this.privList.forEach((val: TItem) => {\r\n            cloneCopy.push(val);\r\n        });\r\n        return cloneCopy;\r\n    }\r\n\r\n    public any = (callback?: (item: TItem, index: number) => boolean): boolean => {\r\n        this.throwIfDisposed();\r\n        if (callback) {\r\n            return this.where(callback).length() > 0;\r\n        } else {\r\n            return this.length() > 0;\r\n        }\r\n    }\r\n\r\n    public all = (callback: (item: TItem) => boolean): boolean => {\r\n        this.throwIfDisposed();\r\n        return this.where(callback).length() === this.length();\r\n    }\r\n\r\n    public forEach = (callback: (item: TItem, index: number) => void): void => {\r\n        this.throwIfDisposed();\r\n        for (let i = 0; i < this.length(); i++) {\r\n            callback(this.privList[i], i);\r\n        }\r\n    }\r\n\r\n    public select = <T2>(callback: (item: TItem, index: number) => T2): List<T2> => {\r\n        this.throwIfDisposed();\r\n        const selectList: T2[] = [];\r\n        for (let i = 0; i < this.privList.length; i++) {\r\n            selectList.push(callback(this.privList[i], i));\r\n        }\r\n\r\n        return new List<T2>(selectList);\r\n    }\r\n\r\n    public where = (callback: (item: TItem, index: number) => boolean): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        const filteredList = new List<TItem>();\r\n        for (let i = 0; i < this.privList.length; i++) {\r\n            if (callback(this.privList[i], i)) {\r\n                filteredList.add(this.privList[i]);\r\n            }\r\n        }\r\n        return filteredList;\r\n    }\r\n\r\n    public orderBy = (compareFn: (a: TItem, b: TItem) => number): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        const clonedArray = this.toArray();\r\n        const orderedArray = clonedArray.sort(compareFn);\r\n        return new List(orderedArray);\r\n    }\r\n\r\n    public orderByDesc = (compareFn: (a: TItem, b: TItem) => number): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        return this.orderBy((a: TItem, b: TItem) => compareFn(b, a));\r\n    }\r\n\r\n    public clone = (): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        return new List<TItem>(this.toArray());\r\n    }\r\n\r\n    public concat = (list: List<TItem>): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        return new List<TItem>(this.privList.concat(list.toArray()));\r\n    }\r\n\r\n    public concatArray = (array: TItem[]): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        return new List<TItem>(this.privList.concat(array));\r\n    }\r\n\r\n    public isDisposed = (): boolean => {\r\n        return this.privList == null;\r\n    }\r\n\r\n    public dispose = (reason?: string): void => {\r\n        if (!this.isDisposed()) {\r\n            this.privDisposeReason = reason;\r\n            this.privList = null;\r\n            this.privAddSubscriptions = null;\r\n            this.privRemoveSubscriptions = null;\r\n            this.triggerSubscriptions(this.privDisposedSubscriptions);\r\n        }\r\n    }\r\n\r\n    private throwIfDisposed = (): void => {\r\n        if (this.isDisposed()) {\r\n            throw new ObjectDisposedError(\"List\", this.privDisposeReason);\r\n        }\r\n    }\r\n\r\n    private triggerSubscriptions = (subscriptions: IStringDictionary<() => void>): void => {\r\n        if (subscriptions) {\r\n            for (const subscriptionId in subscriptions) {\r\n                if (subscriptionId) {\r\n                    subscriptions[subscriptionId]();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError, ObjectDisposedError } from \"./Error\";\r\nimport { IDetachable } from \"./IDetachable\";\r\nimport { IDisposable } from \"./IDisposable\";\r\nimport { List } from \"./List\";\r\nimport {\r\n    Deferred,\r\n} from \"./Promise\";\r\nexport interface IQueue<TItem> extends IDisposable {\r\n    enqueue(item: TItem): void;\r\n    enqueueFromPromise(promise: Promise<TItem>): void;\r\n    dequeue(): Promise<TItem>;\r\n    peek(): Promise<TItem>;\r\n    length(): number;\r\n}\r\n\r\nenum SubscriberType {\r\n    Dequeue,\r\n    Peek,\r\n}\r\n\r\nexport class Queue<TItem> implements IQueue<TItem> {\r\n    private privPromiseStore: List<Promise<TItem>> = new List<Promise<TItem>>();\r\n    private privList: List<TItem>;\r\n    private privDetachables: IDetachable[];\r\n    private privSubscribers: List<{ type: SubscriberType, deferral: Deferred<TItem> }>;\r\n    private privIsDrainInProgress: boolean = false;\r\n    private privIsDisposing: boolean = false;\r\n    private privDisposeReason: string = null;\r\n\r\n    public constructor(list?: List<TItem>) {\r\n        this.privList = list ? list : new List<TItem>();\r\n        this.privDetachables = [];\r\n        this.privSubscribers = new List<{ type: SubscriberType, deferral: Deferred<TItem> }>();\r\n        this.privDetachables.push(this.privList.onAdded(this.drain));\r\n    }\r\n\r\n    public enqueue = (item: TItem): void => {\r\n        this.throwIfDispose();\r\n        this.enqueueFromPromise(new Promise<TItem>((resolve: (value: TItem) => void, reject: (reason: any) => void) => { resolve(item); }));\r\n    }\r\n\r\n    public enqueueFromPromise = (promise: Promise<TItem>): void => {\r\n        this.throwIfDispose();\r\n        promise.then((val: TItem): void => {\r\n            this.privList.add(val);\r\n             /* tslint:disable:no-empty */\r\n        }, (error: string): void => { });\r\n    }\r\n\r\n    public dequeue = (): Promise<TItem> => {\r\n        this.throwIfDispose();\r\n        const deferredSubscriber = new Deferred<TItem>();\r\n\r\n        if (this.privSubscribers) {\r\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Dequeue });\r\n            this.drain();\r\n        }\r\n\r\n        return deferredSubscriber.promise;\r\n    }\r\n\r\n    public peek = (): Promise<TItem> => {\r\n        this.throwIfDispose();\r\n        const deferredSubscriber = new Deferred<TItem>();\r\n\r\n        const subs = this.privSubscribers;\r\n        if (subs) {\r\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Peek });\r\n            this.drain();\r\n        }\r\n\r\n        return deferredSubscriber.promise;\r\n    }\r\n\r\n    public length = (): number => {\r\n        this.throwIfDispose();\r\n        return this.privList.length();\r\n    }\r\n\r\n    public isDisposed = (): boolean => {\r\n        return this.privSubscribers == null;\r\n    }\r\n\r\n    public async drainAndDispose(pendingItemProcessor: (pendingItemInQueue: TItem) => void, reason?: string): Promise<void> {\r\n        if (!this.isDisposed() && !this.privIsDisposing) {\r\n            this.privDisposeReason = reason;\r\n            this.privIsDisposing = true;\r\n\r\n            const subs = this.privSubscribers;\r\n            if (subs) {\r\n                while (subs.length() > 0) {\r\n                    const subscriber = subs.removeFirst();\r\n                    // TODO: this needs work (Resolve(null) instead?).\r\n                    subscriber.deferral.resolve(undefined);\r\n                    // subscriber.deferral.reject(\"Disposed\");\r\n                }\r\n\r\n                // note: this block assumes cooperative multitasking, i.e.,\r\n                // between the if-statement and the assignment there are no\r\n                // thread switches.\r\n                // Reason is that between the initial const = this.; and this\r\n                // point there is the derral.resolve() operation that might have\r\n                // caused recursive calls to the Queue, especially, calling\r\n                // Dispose() on the queue alredy (which would reset the var\r\n                // here to null!).\r\n                // That should generally hold true for javascript...\r\n                if (this.privSubscribers === subs) {\r\n                    this.privSubscribers = subs;\r\n                }\r\n            }\r\n\r\n            for (const detachable of this.privDetachables) {\r\n                await detachable.detach();\r\n            }\r\n\r\n            if (this.privPromiseStore.length() > 0 && pendingItemProcessor) {\r\n                const promiseArray: Promise<TItem>[] = [];\r\n\r\n                this.privPromiseStore.toArray().forEach((wrapper: Promise<TItem>) => {\r\n                    promiseArray.push(wrapper);\r\n                });\r\n                return Promise.all(promiseArray).finally(() => {\r\n                    this.privSubscribers = null;\r\n                    this.privList.forEach((item: TItem, index: number): void => {\r\n                        pendingItemProcessor(item);\r\n                    });\r\n                    this.privList = null;\r\n                    return;\r\n                }).then<void>();\r\n            } else {\r\n                this.privSubscribers = null;\r\n                this.privList = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        await this.drainAndDispose(null, reason);\r\n    }\r\n\r\n    private drain = (): void => {\r\n        if (!this.privIsDrainInProgress && !this.privIsDisposing) {\r\n            this.privIsDrainInProgress = true;\r\n\r\n            const subs = this.privSubscribers;\r\n            const lists = this.privList;\r\n            if (subs && lists) {\r\n                while (lists.length() > 0 && subs.length() > 0 && !this.privIsDisposing) {\r\n                    const subscriber = subs.removeFirst();\r\n                    if (subscriber.type === SubscriberType.Peek) {\r\n                        subscriber.deferral.resolve(lists.first());\r\n                    } else {\r\n                        const dequeuedItem = lists.removeFirst();\r\n                        subscriber.deferral.resolve(dequeuedItem);\r\n                    }\r\n                }\r\n\r\n                // note: this block assumes cooperative multitasking, i.e.,\r\n                // between the if-statement and the assignment there are no\r\n                // thread switches.\r\n                // Reason is that between the initial const = this.; and this\r\n                // point there is the derral.resolve() operation that might have\r\n                // caused recursive calls to the Queue, especially, calling\r\n                // Dispose() on the queue alredy (which would reset the var\r\n                // here to null!).\r\n                // That should generally hold true for javascript...\r\n                if (this.privSubscribers === subs) {\r\n                    this.privSubscribers = subs;\r\n                }\r\n\r\n                // note: this block assumes cooperative multitasking, i.e.,\r\n                // between the if-statement and the assignment there are no\r\n                // thread switches.\r\n                // Reason is that between the initial const = this.; and this\r\n                // point there is the derral.resolve() operation that might have\r\n                // caused recursive calls to the Queue, especially, calling\r\n                // Dispose() on the queue alredy (which would reset the var\r\n                // here to null!).\r\n                // That should generally hold true for javascript...\r\n                if (this.privList === lists) {\r\n                    this.privList = lists;\r\n                }\r\n            }\r\n\r\n            this.privIsDrainInProgress = false;\r\n        }\r\n    }\r\n\r\n    private throwIfDispose = (): void => {\r\n        if (this.isDisposed()) {\r\n            if (this.privDisposeReason) {\r\n                throw new InvalidOperationError(this.privDisposeReason);\r\n            }\r\n\r\n            throw new ObjectDisposedError(\"Queue\");\r\n        } else if (this.privIsDisposing) {\r\n            throw new InvalidOperationError(\"Queue disposing\");\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport enum AudioFormatTag {\r\n    PCM = 1,\r\n    MuLaw,\r\n    Siren,\r\n    MP3,\r\n    SILKSkype,\r\n    OGG_OPUS,\r\n    WEBM_OPUS,\r\n    ALaw,\r\n    FLAC,\r\n    OPUS,\r\n}\r\n\r\n/**\r\n * Represents audio stream format used for custom audio input configurations.\r\n * @class AudioStreamFormat\r\n */\r\nexport abstract class AudioStreamFormat {\r\n    /**\r\n     * Creates an audio stream format object representing the default audio stream\r\n     * format (16KHz 16bit mono PCM).\r\n     * @member AudioStreamFormat.getDefaultInputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {AudioStreamFormat} The audio stream format being created.\r\n     */\r\n    public static getDefaultInputFormat(): AudioStreamFormat {\r\n        return AudioStreamFormatImpl.getDefaultInputFormat();\r\n    }\r\n\r\n    /**\r\n     * Creates an audio stream format object with the specified format characteristics.\r\n     * @member AudioStreamFormat.getWaveFormat\r\n     * @function\r\n     * @public\r\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\r\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\r\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\r\n     *        uses one channel and stereo data uses two channels.\r\n     * @param {AudioFormatTag} format - Audio format (PCM, alaw or mulaw).\r\n     * @returns {AudioStreamFormat} The audio stream format being created.\r\n     */\r\n    public static getWaveFormat(samplesPerSecond: number, bitsPerSample: number, channels: number, format: AudioFormatTag): AudioStreamFormat {\r\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels, format);\r\n    }\r\n\r\n    /**\r\n     * Creates an audio stream format object with the specified pcm waveformat characteristics.\r\n     * @member AudioStreamFormat.getWaveFormatPCM\r\n     * @function\r\n     * @public\r\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\r\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\r\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\r\n     *        uses one channel and stereo data uses two channels.\r\n     * @returns {AudioStreamFormat} The audio stream format being created.\r\n     */\r\n    public static getWaveFormatPCM(samplesPerSecond: number, bitsPerSample: number, channels: number): AudioStreamFormat {\r\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels);\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioStreamFormat.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * @private\r\n * @class AudioStreamFormatImpl\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class AudioStreamFormatImpl extends AudioStreamFormat {\r\n    protected privHeader: ArrayBuffer;\r\n\r\n    /**\r\n     * Creates an instance with the given values.\r\n     * @constructor\r\n     * @param {number} samplesPerSec - Samples per second.\r\n     * @param {number} bitsPerSample - Bits per sample.\r\n     * @param {number} channels - Number of channels.\r\n     * @param {AudioFormatTag} format - Audio format (PCM, alaw or mulaw).\r\n     */\r\n    public constructor(samplesPerSec: number = 16000, bitsPerSample: number = 16, channels: number = 1, format: AudioFormatTag = AudioFormatTag.PCM) {\r\n        super();\r\n\r\n        let isWavFormat: boolean = true;\r\n        /* 1 for PCM; 6 for alaw; 7 for mulaw */\r\n        switch (format) {\r\n            case AudioFormatTag.PCM:\r\n                this.formatTag = 1;\r\n                break;\r\n            case AudioFormatTag.ALaw:\r\n                this.formatTag = 6;\r\n                break;\r\n            case AudioFormatTag.MuLaw:\r\n                this.formatTag = 7;\r\n                break;\r\n            default:\r\n                isWavFormat = false;\r\n        }\r\n        this.bitsPerSample = bitsPerSample;\r\n        this.samplesPerSec = samplesPerSec;\r\n        this.channels = channels;\r\n        this.avgBytesPerSec = this.samplesPerSec * this.channels * (this.bitsPerSample / 8);\r\n        this.blockAlign = this.channels * Math.max(this.bitsPerSample, 8);\r\n\r\n        if (isWavFormat) {\r\n            this.privHeader = new ArrayBuffer(44);\r\n\r\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\r\n            const view = new DataView(this.privHeader);\r\n\r\n            /* RIFF identifier */\r\n            this.setString(view, 0, \"RIFF\");\r\n            /* file length */\r\n            view.setUint32(4, 0, true);\r\n            /* RIFF type & Format */\r\n            this.setString(view, 8, \"WAVEfmt \");\r\n            /* format chunk length */\r\n            view.setUint32(16, 16, true);\r\n            /* audio format */\r\n            view.setUint16(20, this.formatTag, true);\r\n            /* channel count */\r\n            view.setUint16(22, this.channels, true);\r\n            /* sample rate */\r\n            view.setUint32(24, this.samplesPerSec, true);\r\n            /* byte rate (sample rate * block align) */\r\n            view.setUint32(28, this.avgBytesPerSec, true);\r\n            /* block align (channel count * bytes per sample) */\r\n            view.setUint16(32, this.channels * (this.bitsPerSample / 8), true);\r\n            /* bits per sample */\r\n            view.setUint16(34, this.bitsPerSample, true);\r\n            /* data chunk identifier */\r\n            this.setString(view, 36, \"data\");\r\n            /* data chunk length */\r\n            view.setUint32(40, 0, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the default input format.\r\n     * @member AudioStreamFormatImpl.getDefaultInputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {AudioStreamFormatImpl} The default input format.\r\n     */\r\n    public static getDefaultInputFormat(): AudioStreamFormatImpl {\r\n        return new AudioStreamFormatImpl();\r\n    }\r\n\r\n    /**\r\n     * Creates an audio context appropriate to current browser\r\n     * @member AudioStreamFormatImpl.getAudioContext\r\n     * @function\r\n     * @public\r\n     * @returns {AudioContext} An audio context instance\r\n     */\r\n    public static getAudioContext(sampleRate?: number): AudioContext {\r\n        // Workaround for Speech SDK bug in Safari.\r\n        const AudioContext = (window as any).AudioContext // our preferred impl\r\n            || (window as any).webkitAudioContext // fallback, mostly when on Safari\r\n            || false; // could not find.\r\n\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\r\n        if (!!AudioContext) {\r\n            if (sampleRate !== undefined && navigator.mediaDevices.getSupportedConstraints().sampleRate) {\r\n                return new AudioContext({ sampleRate });\r\n            } else {\r\n                return new AudioContext();\r\n            }\r\n        } else {\r\n            throw new Error(\"Browser does not support Web Audio API (AudioContext is not available).\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Closes the configuration object.\r\n     * @member AudioStreamFormatImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void { return; }\r\n\r\n    /**\r\n     * The format of the audio, valid values: 1 (PCM)\r\n     * @member AudioStreamFormatImpl.prototype.formatTag\r\n     * @function\r\n     * @public\r\n     */\r\n    public formatTag: number;\r\n\r\n    /**\r\n     * The number of channels, valid values: 1 (Mono).\r\n     * @member AudioStreamFormatImpl.prototype.channels\r\n     * @function\r\n     * @public\r\n     */\r\n    public channels: number;\r\n\r\n    /**\r\n     * The sample rate, valid values: 16000.\r\n     * @member AudioStreamFormatImpl.prototype.samplesPerSec\r\n     * @function\r\n     * @public\r\n     */\r\n    public samplesPerSec: number;\r\n\r\n    /**\r\n     * The bits per sample, valid values: 16\r\n     * @member AudioStreamFormatImpl.prototype.b\r\n     * @function\r\n     * @public\r\n     */\r\n    public bitsPerSample: number;\r\n\r\n    /**\r\n     * Average bytes per second, usually calculated as nSamplesPerSec * nChannels * ceil(wBitsPerSample, 8).\r\n     * @member AudioStreamFormatImpl.prototype.avgBytesPerSec\r\n     * @function\r\n     * @public\r\n     */\r\n    public avgBytesPerSec: number;\r\n\r\n    /**\r\n     * The size of a single frame, valid values: nChannels * ceil(wBitsPerSample, 8).\r\n     * @member AudioStreamFormatImpl.prototype.blockAlign\r\n     * @function\r\n     * @public\r\n     */\r\n    public blockAlign: number;\r\n\r\n    public get header(): ArrayBuffer {\r\n        return this.privHeader;\r\n    }\r\n\r\n    protected setString = (view: DataView, offset: number, str: string): void => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint8(offset + i, str.charCodeAt(i));\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { Queue } from \"./Queue\";\r\n\r\nexport interface IStreamChunk<TBuffer> {\r\n    isEnd: boolean;\r\n    buffer: TBuffer;\r\n    timeReceived: number;\r\n}\r\n\r\nexport class Stream<TBuffer> {\r\n    private privId: string;\r\n    private privIsWriteEnded: boolean = false;\r\n    private privIsReadEnded: boolean = false;\r\n    private privReaderQueue: Queue<IStreamChunk<TBuffer>>;\r\n\r\n    public constructor(streamId?: string) {\r\n        this.privId = streamId ? streamId : createNoDashGuid();\r\n        this.privReaderQueue = new Queue<IStreamChunk<TBuffer>>();\r\n    }\r\n\r\n    public get isClosed(): boolean {\r\n        return this.privIsWriteEnded;\r\n    }\r\n\r\n    public get isReadEnded(): boolean {\r\n        return this.privIsReadEnded;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public close(): void {\r\n        if (!this.privIsWriteEnded) {\r\n            this.writeStreamChunk({\r\n                buffer: null,\r\n                isEnd: true,\r\n                timeReceived: Date.now(),\r\n            });\r\n            this.privIsWriteEnded = true;\r\n        }\r\n    }\r\n\r\n    public writeStreamChunk(streamChunk: IStreamChunk<TBuffer>): void {\r\n        this.throwIfClosed();\r\n        if (!this.privReaderQueue.isDisposed()) {\r\n            try {\r\n                this.privReaderQueue.enqueue(streamChunk);\r\n            } catch (e) {\r\n                // Do nothing\r\n            }\r\n        }\r\n    }\r\n\r\n    public read = (): Promise<IStreamChunk<TBuffer>> => {\r\n        if (this.privIsReadEnded) {\r\n            throw new InvalidOperationError(\"Stream read has already finished\");\r\n        }\r\n\r\n        return this.privReaderQueue\r\n            .dequeue()\r\n            .then(async (streamChunk: IStreamChunk<TBuffer>) => {\r\n                if (streamChunk === undefined || streamChunk.isEnd) {\r\n                    await this.privReaderQueue.dispose(\"End of stream reached\");\r\n                }\r\n\r\n                return streamChunk;\r\n            });\r\n    }\r\n    public readEnded = (): void => {\r\n        if (!this.privIsReadEnded) {\r\n            this.privIsReadEnded = true;\r\n            this.privReaderQueue = new Queue<IStreamChunk<TBuffer>>();\r\n        }\r\n    }\r\n\r\n    private throwIfClosed = (): void => {\r\n        if (this.privIsWriteEnded) {\r\n            throw new InvalidOperationError(\"Stream closed\");\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IStreamChunk, Stream } from \"./Exports\";\r\n\r\nexport class ChunkedArrayBufferStream extends Stream<ArrayBuffer> {\r\n    private privTargetChunkSize: number;\r\n    private privNextBufferToWrite: ArrayBuffer;\r\n    private privNextBufferStartTime: number;\r\n    private privNextBufferReadyBytes: number;\r\n\r\n    constructor(targetChunkSize: number, streamId?: string) {\r\n        super(streamId);\r\n        this.privTargetChunkSize = targetChunkSize;\r\n        this.privNextBufferReadyBytes = 0;\r\n    }\r\n\r\n    public writeStreamChunk(chunk: IStreamChunk<ArrayBuffer>): void {\r\n        // No pending write, and the buffer is the right size so write it.\r\n        if (chunk.isEnd ||\r\n            (0 === this.privNextBufferReadyBytes && chunk.buffer.byteLength === this.privTargetChunkSize)) {\r\n            super.writeStreamChunk(chunk);\r\n            return;\r\n        }\r\n\r\n        let bytesCopiedFromBuffer: number = 0;\r\n\r\n        while (bytesCopiedFromBuffer < chunk.buffer.byteLength) {\r\n            // Fill the next buffer.\r\n            if (undefined === this.privNextBufferToWrite) {\r\n                this.privNextBufferToWrite = new ArrayBuffer(this.privTargetChunkSize);\r\n                this.privNextBufferStartTime = chunk.timeReceived;\r\n            }\r\n\r\n            // Find out how many bytes we can copy into the read buffer.\r\n            const bytesToCopy: number = Math.min(chunk.buffer.byteLength - bytesCopiedFromBuffer, this.privTargetChunkSize - this.privNextBufferReadyBytes);\r\n            const targetView: Uint8Array = new Uint8Array(this.privNextBufferToWrite);\r\n            const sourceView: Uint8Array = new Uint8Array(chunk.buffer.slice(bytesCopiedFromBuffer, bytesToCopy + bytesCopiedFromBuffer));\r\n\r\n            targetView.set(sourceView, this.privNextBufferReadyBytes);\r\n            this.privNextBufferReadyBytes += bytesToCopy;\r\n            bytesCopiedFromBuffer += bytesToCopy;\r\n\r\n            // Are we ready to write?\r\n            if (this.privNextBufferReadyBytes === this.privTargetChunkSize) {\r\n                super.writeStreamChunk({\r\n                    buffer: this.privNextBufferToWrite,\r\n                    isEnd: false,\r\n                    timeReceived: this.privNextBufferStartTime,\r\n                });\r\n                this.privNextBufferReadyBytes = 0;\r\n                this.privNextBufferToWrite = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        // Send whatever is pending, then close the base class.\r\n        if (0 !== this.privNextBufferReadyBytes && !this.isClosed) {\r\n            super.writeStreamChunk({\r\n                buffer: this.privNextBufferToWrite.slice(0, this.privNextBufferReadyBytes),\r\n                isEnd: false,\r\n                timeReceived: this.privNextBufferStartTime,\r\n            });\r\n        }\r\n\r\n        super.close();\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    connectivity,\r\n    ISpeechConfigAudioDevice,\r\n    type\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    AudioSourceErrorEvent,\r\n    AudioSourceEvent,\r\n    AudioSourceInitializingEvent,\r\n    AudioSourceOffEvent,\r\n    AudioSourceReadyEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    AudioStreamNodeErrorEvent,\r\n    ChunkedArrayBufferStream,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IStringDictionary,\r\n    Stream,\r\n} from \"../common/Exports\";\r\nimport {\r\n    AudioStreamFormat,\r\n    AudioStreamFormatImpl,\r\n} from \"../sdk/Audio/AudioStreamFormat\";\r\nimport { IRecorder } from \"./IRecorder\";\r\n\r\n// Extending the default definition with browser specific definitions for backward compatibility\r\ninterface INavigator extends Navigator {\r\n    webkitGetUserMedia?: (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback) => void;\r\n    mozGetUserMedia?: (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback) => void;\r\n    msGetUserMedia?: (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback) => void;\r\n}\r\n\r\nexport const AudioWorkletSourceURLPropertyName = \"MICROPHONE-WorkletSourceUrl\";\r\n\r\nexport class MicAudioSource implements IAudioSource {\r\n\r\n    private static readonly AUDIOFORMAT: AudioStreamFormatImpl = AudioStreamFormat.getDefaultInputFormat() as AudioStreamFormatImpl;\r\n\r\n    private privStreams: IStringDictionary<Stream<ArrayBuffer>> = {};\r\n\r\n    private privId: string;\r\n\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n\r\n    private privInitializeDeferral: Deferred<void>;\r\n\r\n    private privMediaStream: MediaStream;\r\n\r\n    private privContext: AudioContext;\r\n\r\n    private privMicrophoneLabel: string;\r\n\r\n    private privOutputChunkSize: number;\r\n\r\n    private privIsClosing: boolean;\r\n\r\n    public constructor(\r\n        private readonly privRecorder: IRecorder,\r\n        private readonly deviceId?: string,\r\n        audioSourceId?: string,\r\n        mediaStream?: MediaStream\r\n        ) {\r\n\r\n        this.privOutputChunkSize = MicAudioSource.AUDIOFORMAT.avgBytesPerSec / 10;\r\n        this.privId = audioSourceId ? audioSourceId : createNoDashGuid();\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privMediaStream = mediaStream || null;\r\n        this.privIsClosing = false;\r\n    }\r\n\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return Promise.resolve(MicAudioSource.AUDIOFORMAT);\r\n    }\r\n\r\n    public get blob(): Promise<Blob> {\r\n        return Promise.reject(\"Not implemented for Mic input\");\r\n    }\r\n\r\n    public turnOn = (): Promise<void> => {\r\n        if (this.privInitializeDeferral) {\r\n            return this.privInitializeDeferral.promise;\r\n        }\r\n\r\n        this.privInitializeDeferral = new Deferred<void>();\r\n\r\n        try {\r\n            this.createAudioContext();\r\n        } catch (error) {\r\n            if (error instanceof Error) {\r\n                const typedError: Error = error as Error;\r\n                this.privInitializeDeferral.reject(typedError.name + \": \" + typedError.message);\r\n            } else {\r\n                this.privInitializeDeferral.reject(error);\r\n            }\r\n            return this.privInitializeDeferral.promise;\r\n        }\r\n\r\n        const nav = window.navigator as INavigator;\r\n\r\n        let getUserMedia = (\r\n            nav.getUserMedia ||\r\n            nav.webkitGetUserMedia ||\r\n            nav.mozGetUserMedia ||\r\n            nav.msGetUserMedia\r\n        );\r\n\r\n        if (!!nav.mediaDevices) {\r\n            getUserMedia = (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback): void => {\r\n                nav.mediaDevices\r\n                    .getUserMedia(constraints)\r\n                    .then(successCallback)\r\n                    .catch(errorCallback);\r\n            };\r\n        }\r\n\r\n        if (!getUserMedia) {\r\n            const errorMsg = \"Browser does not support getUserMedia.\";\r\n            this.privInitializeDeferral.reject(errorMsg);\r\n            this.onEvent(new AudioSourceErrorEvent(errorMsg, \"\")); // mic initialized error - no streamid at this point\r\n        } else {\r\n            const next = () => {\r\n                this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n                if (this.privMediaStream && this.privMediaStream.active) {\r\n                    this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n                    this.privInitializeDeferral.resolve();\r\n                } else {\r\n                    getUserMedia(\r\n                        { audio: this.deviceId ? { deviceId: this.deviceId } : true, video: false },\r\n                        (mediaStream: MediaStream) => {\r\n                            this.privMediaStream = mediaStream;\r\n                            this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n                            this.privInitializeDeferral.resolve();\r\n                        }, (error: MediaStreamError) => {\r\n                            const errorMsg = `Error occurred during microphone initialization: ${error}`;\r\n                            this.privInitializeDeferral.reject(errorMsg);\r\n                            this.onEvent(new AudioSourceErrorEvent(this.privId, errorMsg));\r\n                        });\r\n                }\r\n            };\r\n\r\n            if (this.privContext.state === \"suspended\") {\r\n                // NOTE: On iOS, the Web Audio API requires sounds to be triggered from an explicit user action.\r\n                // https://github.com/WebAudio/web-audio-api/issues/790\r\n                this.privContext.resume()\r\n                    .then(next)\r\n                    .catch((reason: any) => {\r\n                        this.privInitializeDeferral.reject(`Failed to initialize audio context: ${reason}`);\r\n                    });\r\n            } else {\r\n                next();\r\n            }\r\n        }\r\n\r\n        return this.privInitializeDeferral.promise;\r\n    }\r\n\r\n    public id = (): string => {\r\n        return this.privId;\r\n    }\r\n\r\n    public attach = (audioNodeId: string): Promise<IAudioStreamNode> => {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        return this.listen(audioNodeId).then<IAudioStreamNode>(\r\n            (stream: Stream<ArrayBuffer>) => {\r\n                this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n                return {\r\n                    detach: async () => {\r\n                        stream.readEnded();\r\n                        delete this.privStreams[audioNodeId];\r\n                        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                        return this.turnOff();\r\n                    },\r\n                    id: () => {\r\n                        return audioNodeId;\r\n                    },\r\n                    read: () => {\r\n                        return stream.read();\r\n                    },\r\n                };\r\n            });\r\n    }\r\n\r\n    public detach = (audioNodeId: string): void => {\r\n        if (audioNodeId && this.privStreams[audioNodeId]) {\r\n            this.privStreams[audioNodeId].close();\r\n            delete this.privStreams[audioNodeId];\r\n            this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n        }\r\n    }\r\n\r\n    public async turnOff(): Promise<void> {\r\n        for (const streamId in this.privStreams) {\r\n            if (streamId) {\r\n                const stream = this.privStreams[streamId];\r\n                if (stream) {\r\n                    stream.close();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onEvent(new AudioSourceOffEvent(this.privId)); // no stream now\r\n        if (this.privInitializeDeferral) {\r\n            // Correctly handle when browser forces mic off before turnOn() completes\r\n            await this.privInitializeDeferral;\r\n            this.privInitializeDeferral = null;\r\n        }\r\n\r\n        await this.destroyAudioContext();\r\n\r\n        return;\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return this.getMicrophoneLabel().then((label: string) => {\r\n            return {\r\n                bitspersample: MicAudioSource.AUDIOFORMAT.bitsPerSample,\r\n                channelcount: MicAudioSource.AUDIOFORMAT.channels,\r\n                connectivity: connectivity.Unknown,\r\n                manufacturer: \"Speech SDK\",\r\n                model: label,\r\n                samplerate: MicAudioSource.AUDIOFORMAT.samplesPerSec,\r\n                type: type.Microphones,\r\n            };\r\n        });\r\n    }\r\n\r\n    public setProperty(name: string, value: string): void {\r\n        if (name === AudioWorkletSourceURLPropertyName) {\r\n            this.privRecorder.setWorkletUrl(value);\r\n        } else {\r\n            throw new Error(\"Property '\" + name + \"' is not supported on Microphone.\");\r\n        }\r\n    }\r\n\r\n    private getMicrophoneLabel(): Promise<string> {\r\n        const defaultMicrophoneName: string = \"microphone\";\r\n\r\n        // If we did this already, return the value.\r\n        if (this.privMicrophoneLabel !== undefined) {\r\n            return Promise.resolve(this.privMicrophoneLabel);\r\n        }\r\n\r\n        // If the stream isn't currently running, we can't query devices because security.\r\n        if (this.privMediaStream === undefined || !this.privMediaStream.active) {\r\n            return Promise.resolve(defaultMicrophoneName);\r\n        }\r\n\r\n        // Setup a default\r\n        this.privMicrophoneLabel = defaultMicrophoneName;\r\n\r\n        // Get the id of the device running the audio track.\r\n        const microphoneDeviceId: string = this.privMediaStream.getTracks()[0].getSettings().deviceId;\r\n\r\n        // If the browser doesn't support getting the device ID, set a default and return.\r\n        if (undefined === microphoneDeviceId) {\r\n            return Promise.resolve(this.privMicrophoneLabel);\r\n        }\r\n\r\n        const deferred: Deferred<string> = new Deferred<string>();\r\n\r\n        // Enumerate the media devices.\r\n        navigator.mediaDevices.enumerateDevices().then((devices: MediaDeviceInfo[]) => {\r\n            for (const device of devices) {\r\n                if (device.deviceId === microphoneDeviceId) {\r\n                    // Found the device\r\n                    this.privMicrophoneLabel = device.label;\r\n                    break;\r\n                }\r\n            }\r\n            deferred.resolve(this.privMicrophoneLabel);\r\n        }, () => deferred.resolve(this.privMicrophoneLabel));\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    private listen = async (audioNodeId: string): Promise<Stream<ArrayBuffer>> => {\r\n        await this.turnOn();\r\n        const stream = new ChunkedArrayBufferStream(this.privOutputChunkSize, audioNodeId);\r\n        this.privStreams[audioNodeId] = stream;\r\n        try {\r\n            this.privRecorder.record(this.privContext, this.privMediaStream, stream);\r\n        } catch (error) {\r\n            this.onEvent(new AudioStreamNodeErrorEvent(this.privId, audioNodeId, error));\r\n            throw error;\r\n        }\r\n        const result: Stream<ArrayBuffer> = stream;\r\n        return result;\r\n    }\r\n\r\n    private onEvent = (event: AudioSourceEvent): void => {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private createAudioContext = (): void => {\r\n        if (!!this.privContext) {\r\n            return;\r\n        }\r\n\r\n        this.privContext = AudioStreamFormatImpl.getAudioContext(MicAudioSource.AUDIOFORMAT.samplesPerSec);\r\n    }\r\n\r\n    private async destroyAudioContext(): Promise<void> {\r\n        if (!this.privContext) {\r\n            return;\r\n        }\r\n\r\n        this.privRecorder.releaseMediaResources(this.privContext);\r\n\r\n        // This pattern brought to you by a bug in the TypeScript compiler where it\r\n        // confuses the (\"close\" in this.privContext) with this.privContext always being null as the alternate.\r\n        // https://github.com/Microsoft/TypeScript/issues/11498\r\n        let hasClose: boolean = false;\r\n        if (\"close\" in this.privContext) {\r\n            hasClose = true;\r\n        }\r\n\r\n        if (hasClose) {\r\n            if (!this.privIsClosing) {\r\n                // The audio context close may take enough time that the close is called twice\r\n                this.privIsClosing = true;\r\n                await this.privContext.close();\r\n                this.privContext = null;\r\n                this.privIsClosing = false;\r\n            }\r\n        } else if (null !== this.privContext && this.privContext.state === \"running\") {\r\n            // Suspend actually takes a callback, but analogous to the\r\n            // resume method, it'll be only fired if suspend is called\r\n            // in a direct response to a user action. The later is not always\r\n            // the case, as TurnOff is also called, when we receive an\r\n            // end-of-speech message from the service. So, doing a best effort\r\n            // fire-and-forget here.\r\n            await this.privContext.suspend();\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\n\r\nexport enum MessageType {\r\n    Text,\r\n    Binary,\r\n}\r\n\r\nexport class ConnectionMessage {\r\n\r\n    private privMessageType: MessageType;\r\n    private privHeaders: IStringDictionary<string>;\r\n    private privBody: any = null;\r\n    private privSize: number;\r\n\r\n    private privId: string;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        body: any,\r\n        headers?: IStringDictionary<string>,\r\n        id?: string) {\r\n\r\n        if (messageType === MessageType.Text && body && !(typeof (body) === \"string\")) {\r\n            throw new InvalidOperationError(\"Payload must be a string\");\r\n        }\r\n\r\n        if (messageType === MessageType.Binary && body && !(body instanceof ArrayBuffer)) {\r\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\r\n        }\r\n\r\n        this.privMessageType = messageType;\r\n        this.privBody = body;\r\n        this.privHeaders = headers ? headers : {};\r\n        this.privId = id ? id : createNoDashGuid();\r\n        switch (this.messageType) {\r\n            case MessageType.Binary:\r\n                this.privSize = this.binaryBody !== null ? this.binaryBody.byteLength : 0;\r\n                break;\r\n            case MessageType.Text:\r\n                this.privSize = this.textBody.length;\r\n        }\r\n    }\r\n\r\n    public get messageType(): MessageType {\r\n        return this.privMessageType;\r\n    }\r\n\r\n    public get headers(): IStringDictionary<string> {\r\n        return this.privHeaders;\r\n    }\r\n\r\n    public get body(): any {\r\n        return this.privBody;\r\n    }\r\n\r\n    public get textBody(): string {\r\n        if (this.privMessageType === MessageType.Binary) {\r\n            throw new InvalidOperationError(\"Not supported for binary message\");\r\n        }\r\n\r\n        return this.privBody as string;\r\n    }\r\n\r\n    public get binaryBody(): ArrayBuffer {\r\n        if (this.privMessageType === MessageType.Text) {\r\n            throw new InvalidOperationError(\"Not supported for text message\");\r\n        }\r\n\r\n        return this.privBody;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    connectivity,\r\n    ISpeechConfigAudioDevice,\r\n    type,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    AudioSourceErrorEvent,\r\n    AudioSourceEvent,\r\n    AudioSourceInitializingEvent,\r\n    AudioSourceOffEvent,\r\n    AudioSourceReadyEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    AudioStreamNodeErrorEvent,\r\n    ChunkedArrayBufferStream,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IStreamChunk,\r\n    IStringDictionary,\r\n    Stream,\r\n} from \"../common/Exports\";\r\nimport { AudioStreamFormat, AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat\";\r\n\r\nexport class FileAudioSource implements IAudioSource {\r\n\r\n    private privAudioFormatPromise: Promise<AudioStreamFormatImpl>;\r\n\r\n    private privStreams: IStringDictionary<Stream<ArrayBuffer>> = {};\r\n\r\n    private privId: string;\r\n\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n\r\n    private privSource: Blob | Buffer;\r\n\r\n    private privFilename: string;\r\n\r\n    private privHeaderEnd: number = 44;\r\n\r\n    public constructor(file: File | Buffer, filename?: string, audioSourceId?: string) {\r\n        this.privId = audioSourceId ? audioSourceId : createNoDashGuid();\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privSource = file;\r\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && this.privSource instanceof Blob) {\r\n            this.privFilename = (file as File).name;\r\n        } else {\r\n            this.privFilename = filename || \"unknown.wav\";\r\n        }\r\n\r\n        // Read the header.\r\n        this.privAudioFormatPromise = this.readHeader();\r\n    }\r\n\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return this.privAudioFormatPromise;\r\n    }\r\n\r\n    public get blob(): Promise<Blob | Buffer> {\r\n        return Promise.resolve(this.privSource);\r\n    }\r\n\r\n    public turnOn = (): Promise<void> => {\r\n        if (this.privFilename.lastIndexOf(\".wav\") !== this.privFilename.length - 4) {\r\n            const errorMsg = this.privFilename + \" is not supported. Only WAVE files are allowed at the moment.\";\r\n            this.onEvent(new AudioSourceErrorEvent(errorMsg, \"\"));\r\n            return Promise.reject(errorMsg);\r\n        }\r\n\r\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n        return;\r\n    }\r\n\r\n    public id = (): string => {\r\n        return this.privId;\r\n    }\r\n\r\n    public attach = async (audioNodeId: string): Promise<IAudioStreamNode> => {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        const stream: Stream<ArrayBuffer> = await this.upload(audioNodeId);\r\n\r\n        this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n        return Promise.resolve({\r\n            detach: async (): Promise<void> => {\r\n                stream.readEnded();\r\n                delete this.privStreams[audioNodeId];\r\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                await this.turnOff();\r\n            },\r\n            id: () => {\r\n                return audioNodeId;\r\n            },\r\n            read: (): Promise<IStreamChunk<ArrayBuffer>> => {\r\n                return stream.read();\r\n            },\r\n        });\r\n    }\r\n\r\n    public detach = (audioNodeId: string): void => {\r\n        if (audioNodeId && this.privStreams[audioNodeId]) {\r\n            this.privStreams[audioNodeId].close();\r\n            delete this.privStreams[audioNodeId];\r\n            this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n        }\r\n    }\r\n\r\n    public turnOff = (): Promise<void> => {\r\n        for (const streamId in this.privStreams) {\r\n            if (streamId) {\r\n                const stream = this.privStreams[streamId];\r\n                if (stream && !stream.isClosed) {\r\n                    stream.close();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onEvent(new AudioSourceOffEvent(this.privId)); // no stream now\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return this.privAudioFormatPromise.then<ISpeechConfigAudioDevice>((result: AudioStreamFormatImpl) => {\r\n            return Promise.resolve({\r\n                bitspersample: result.bitsPerSample,\r\n                channelcount: result.channels,\r\n                connectivity: connectivity.Unknown,\r\n                manufacturer: \"Speech SDK\",\r\n                model: \"File\",\r\n                samplerate: result.samplesPerSec,\r\n                type: type.File,\r\n            });\r\n        });\r\n    }\r\n\r\n    private readHeader(): Promise<AudioStreamFormatImpl> {\r\n        // Read the wave header.\r\n        const maxHeaderSize: number = 512;\r\n        const header: Blob | Buffer = this.privSource.slice(0, maxHeaderSize);\r\n\r\n        const headerResult: Deferred<AudioStreamFormatImpl> = new Deferred<AudioStreamFormatImpl>();\r\n\r\n        const processHeader = (header: ArrayBuffer): void => {\r\n            const view: DataView = new DataView(header);\r\n\r\n            const getWord = (index: number): string => {\r\n                return String.fromCharCode(view.getUint8(index), view.getUint8(index + 1), view.getUint8(index + 2), view.getUint8(index + 3));\r\n            };\r\n\r\n            // RIFF 4 bytes.\r\n            if (\"RIFF\" !== getWord(0)) {\r\n                headerResult.reject(\"Invalid WAV header in file, RIFF was not found\");\r\n                return;\r\n            }\r\n\r\n            // length, 4 bytes\r\n            // RIFF Type & fmt 8 bytes\r\n            if (\"WAVE\" !== getWord(8) || \"fmt \" !== getWord(12)) {\r\n                headerResult.reject(\"Invalid WAV header in file, WAVEfmt was not found\");\r\n                return;\r\n            }\r\n\r\n            const formatSize: number = view.getInt32(16, true);\r\n            const channelCount: number = view.getUint16(22, true);\r\n            const sampleRate: number = view.getUint32(24, true);\r\n            const bitsPerSample: number = view.getUint16(34, true);\r\n            // Confirm if header is 44 bytes long.\r\n            let pos: number = 36 + Math.max(formatSize - 16, 0);\r\n            for (; getWord(pos) !== \"data\"; pos += 2) {\r\n                if (pos > maxHeaderSize - 8) {\r\n                    headerResult.reject(\"Invalid WAV header in file, data block was not found\");\r\n                    return;\r\n                }\r\n            }\r\n            this.privHeaderEnd = pos + 8;\r\n            headerResult.resolve(AudioStreamFormat.getWaveFormatPCM(sampleRate, bitsPerSample, channelCount) as AudioStreamFormatImpl);\r\n        };\r\n\r\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && header instanceof Blob) {\r\n            const reader: FileReader = new FileReader();\r\n\r\n            reader.onload = (event: Event) => {\r\n                const header: ArrayBuffer = (event.target as FileReader).result as ArrayBuffer;\r\n                processHeader(header);\r\n            };\r\n\r\n            reader.readAsArrayBuffer(header);\r\n        } else {\r\n            const h: Buffer = header as Buffer;\r\n            processHeader(h.buffer.slice(h.byteOffset, h.byteOffset + h.byteLength));\r\n        }\r\n        return headerResult.promise;\r\n    }\r\n\r\n    private async upload(audioNodeId: string): Promise<Stream<ArrayBuffer>> {\r\n        const onerror = (error: string) => {\r\n            const errorMsg = `Error occurred while processing '${this.privFilename}'. ${error}`;\r\n            this.onEvent(new AudioStreamNodeErrorEvent(this.privId, audioNodeId, errorMsg));\r\n            throw new Error(errorMsg);\r\n        };\r\n\r\n        try {\r\n            await this.turnOn();\r\n\r\n            const format: AudioStreamFormatImpl = await this.privAudioFormatPromise;\r\n            const stream = new ChunkedArrayBufferStream(format.avgBytesPerSec / 10, audioNodeId);\r\n\r\n            this.privStreams[audioNodeId] = stream;\r\n            const chunk: Blob | Buffer = this.privSource.slice(this.privHeaderEnd);\r\n\r\n            const processFile = (buff: ArrayBuffer): void => {\r\n                if (stream.isClosed) {\r\n                    return; // output stream was closed (somebody called TurnOff). We're done here.\r\n                }\r\n\r\n                stream.writeStreamChunk({\r\n                    buffer: buff,\r\n                    isEnd: false,\r\n                    timeReceived: Date.now(),\r\n                });\r\n                stream.close();\r\n            };\r\n\r\n            if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && chunk instanceof Blob) {\r\n                const reader: FileReader = new FileReader();\r\n                reader.onerror = (ev: ProgressEvent<FileReader>) => { onerror(ev.toString()); };\r\n\r\n                reader.onload = (event: Event) => {\r\n                    const fileBuffer: ArrayBuffer = (event.target as FileReader).result as ArrayBuffer;\r\n                    processFile(fileBuffer);\r\n                };\r\n\r\n                reader.readAsArrayBuffer(chunk);\r\n            } else {\r\n                const c: Buffer = chunk as Buffer;\r\n                processFile(c.buffer.slice(c.byteOffset, c.byteOffset + c.byteLength));\r\n            }\r\n\r\n            return stream;\r\n        } catch (e) {\r\n            onerror(e);\r\n        }\r\n    }\r\n\r\n    private onEvent = (event: AudioSourceEvent): void => {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n /**\r\n  * An abstract base class that defines callback methods (read() and close()) for\r\n  * custom audio input streams).\r\n  * @class PullAudioInputStreamCallback\r\n  */\r\nexport abstract class PullAudioInputStreamCallback {\r\n\r\n    /**\r\n     * Reads data from audio input stream into the data buffer. The maximal number of bytes\r\n     * to be read is determined by the size of dataBuffer.\r\n     * @member PullAudioInputStreamCallback.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The byte array to store the read data.\r\n     * @returns {number} the number of bytes have been read.\r\n     */\r\n    public abstract read(dataBuffer: ArrayBuffer): number;\r\n\r\n    /**\r\n     * Closes the audio input stream.\r\n     * @member PullAudioInputStreamCallback.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport {\r\n    connectivity,\r\n    ISpeechConfigAudioDevice,\r\n    type,\r\n} from \"../../common.speech/Exports\";\r\nimport {\r\n    AudioSourceEvent,\r\n    AudioSourceInitializingEvent,\r\n    AudioSourceReadyEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    ChunkedArrayBufferStream,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IStreamChunk,\r\n    Stream,\r\n} from \"../../common/Exports\";\r\nimport { createNoDashGuid } from \"../../common/Guid\";\r\nimport { AudioStreamFormat, PullAudioInputStreamCallback } from \"../Exports\";\r\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat\";\r\n\r\n/**\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @class AudioInputStream\r\n */\r\nexport abstract class AudioInputStream {\r\n\r\n    /**\r\n     * Creates and initializes an instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() { }\r\n\r\n    /**\r\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\r\n     * @member AudioInputStream.createPushStream\r\n     * @function\r\n     * @public\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\r\n     *        written to the push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PushAudioInputStream} The audio input stream being created.\r\n     */\r\n    public static createPushStream(format?: AudioStreamFormat): PushAudioInputStream {\r\n        return PushAudioInputStream.create(format);\r\n    }\r\n\r\n    /**\r\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for read()\r\n     * and close() methods.\r\n     * @member AudioInputStream.createPullStream\r\n     * @function\r\n     * @public\r\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object, derived from\r\n     *        PullAudioInputStreamCallback\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be returned from\r\n     *        the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PullAudioInputStream} The audio input stream being created.\r\n     */\r\n    public static createPullStream(callback: PullAudioInputStreamCallback, format?: AudioStreamFormat): PullAudioInputStream {\r\n        return PullAudioInputStream.create(callback, format);\r\n        // throw new Error(\"Oops\");\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioInputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio input stream used for custom audio input configurations.\r\n * @class PushAudioInputStream\r\n */\r\nexport abstract class PushAudioInputStream extends AudioInputStream {\r\n\r\n    /**\r\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\r\n     * @member PushAudioInputStream.create\r\n     * @function\r\n     * @public\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be written to the\r\n     *        push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PushAudioInputStream} The push audio input stream being created.\r\n     */\r\n    public static create(format?: AudioStreamFormat): PushAudioInputStream {\r\n        return new PushAudioInputStreamImpl(format);\r\n    }\r\n\r\n    /**\r\n     * Writes the audio data specified by making an internal copy of the data.\r\n     * @member PushAudioInputStream.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\r\n     */\r\n    public abstract write(dataBuffer: ArrayBuffer): void;\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PushAudioInputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio input stream used for custom audio input configurations.\r\n * @private\r\n * @class PushAudioInputStreamImpl\r\n */\r\nexport class PushAudioInputStreamImpl extends PushAudioInputStream implements IAudioSource {\r\n\r\n    private privFormat: AudioStreamFormatImpl;\r\n    private privId: string;\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n    private privStream: Stream<ArrayBuffer>;\r\n\r\n    /**\r\n     * Creates and initalizes an instance with the given values.\r\n     * @constructor\r\n     * @param {AudioStreamFormat} format - The audio stream format.\r\n     */\r\n    public constructor(format?: AudioStreamFormat) {\r\n        super();\r\n        if (format === undefined) {\r\n            this.privFormat = AudioStreamFormatImpl.getDefaultInputFormat();\r\n        } else {\r\n            this.privFormat = format as AudioStreamFormatImpl;\r\n        }\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privId = createNoDashGuid();\r\n        this.privStream = new ChunkedArrayBufferStream(this.privFormat.avgBytesPerSec / 10);\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return Promise.resolve(this.privFormat);\r\n    }\r\n\r\n    /**\r\n     * Writes the audio data specified by making an internal copy of the data.\r\n     * @member PushAudioInputStreamImpl.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\r\n     */\r\n    public write(dataBuffer: ArrayBuffer): void {\r\n        this.privStream.writeStreamChunk({\r\n            buffer: dataBuffer,\r\n            isEnd: false,\r\n            timeReceived: Date.now()\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PushAudioInputStreamImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        this.privStream.close();\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public get blob(): Promise<Blob | Buffer> {\r\n        return this.attach(\"id\").then<Blob | Buffer>((audioNode: IAudioStreamNode) => {\r\n            const data: ArrayBuffer[] = [];\r\n            let bufferData = Buffer.from(\"\");\r\n            const readCycle = (): Promise<Blob | Buffer> => {\r\n                return audioNode.read().then<Blob | Buffer>((audioStreamChunk: IStreamChunk<ArrayBuffer>) => {\r\n                    if (!audioStreamChunk || audioStreamChunk.isEnd) {\r\n                        if (typeof (XMLHttpRequest) !== \"undefined\" && typeof (Blob) !== \"undefined\") {\r\n                            return Promise.resolve(new Blob(data));\r\n                        } else {\r\n                            return Promise.resolve(Buffer.from(bufferData));\r\n                        }\r\n                    } else {\r\n                        if (typeof (Blob) !== \"undefined\") {\r\n                            data.push(audioStreamChunk.buffer);\r\n                        } else {\r\n                            bufferData = Buffer.concat([bufferData, this.toBuffer(audioStreamChunk.buffer)]);\r\n                        }\r\n                        return readCycle();\r\n                    }\r\n                });\r\n            };\r\n            return readCycle();\r\n        });\r\n    }\r\n\r\n    public turnOn(): Promise<void> {\r\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n        return;\r\n    }\r\n\r\n    public async attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        await this.turnOn();\r\n        const stream = this.privStream;\r\n        this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n        return {\r\n            detach: async () => {\r\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                return this.turnOff();\r\n            },\r\n            id: () => {\r\n                return audioNodeId;\r\n            },\r\n            read: () => {\r\n                return stream.read();\r\n            },\r\n        };\r\n    }\r\n\r\n    public detach(audioNodeId: string): void {\r\n        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n    }\r\n\r\n    public turnOff(): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return Promise.resolve({\r\n            bitspersample: this.privFormat.bitsPerSample,\r\n            channelcount: this.privFormat.channels,\r\n            connectivity: connectivity.Unknown,\r\n            manufacturer: \"Speech SDK\",\r\n            model: \"PushStream\",\r\n            samplerate: this.privFormat.samplesPerSec,\r\n            type: type.Stream,\r\n        });\r\n    }\r\n\r\n    private onEvent = (event: AudioSourceEvent): void => {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private toBuffer(arrayBuffer: ArrayBuffer): Buffer {\r\n        const buf: Buffer = Buffer.alloc(arrayBuffer.byteLength);\r\n        const view: Uint8Array = new Uint8Array(arrayBuffer);\r\n        for (let i = 0; i < buf.length; ++i) {\r\n            buf[i] = view[i];\r\n        }\r\n        return buf;\r\n    }\r\n}\r\n\r\n/*\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @class PullAudioInputStream\r\n */\r\nexport abstract class PullAudioInputStream extends AudioInputStream {\r\n    /**\r\n     * Creates and initializes and instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() { super(); }\r\n\r\n    /**\r\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\r\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\r\n     * @member PullAudioInputStream.create\r\n     * @function\r\n     * @public\r\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\r\n     *        derived from PullAudioInputStreamCustomCallback\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\r\n     *        returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PullAudioInputStream} The push audio input stream being created.\r\n     */\r\n    public static create(callback: PullAudioInputStreamCallback, format?: AudioStreamFormat): PullAudioInputStream {\r\n        return new PullAudioInputStreamImpl(callback, format as AudioStreamFormatImpl);\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member PullAudioInputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n\r\n}\r\n\r\n/**\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @private\r\n * @class PullAudioInputStreamImpl\r\n */\r\nexport class PullAudioInputStreamImpl extends PullAudioInputStream implements IAudioSource {\r\n\r\n    private privCallback: PullAudioInputStreamCallback;\r\n    private privFormat: AudioStreamFormatImpl;\r\n    private privId: string;\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n    private privIsClosed: boolean;\r\n    private privBufferSize: number;\r\n\r\n    /**\r\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\r\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\r\n     * @constructor\r\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\r\n     *        derived from PullAudioInputStreamCustomCallback\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\r\n     *        returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     */\r\n    public constructor(callback: PullAudioInputStreamCallback, format?: AudioStreamFormatImpl) {\r\n        super();\r\n        if (undefined === format) {\r\n            this.privFormat = AudioStreamFormat.getDefaultInputFormat() as AudioStreamFormatImpl;\r\n        } else {\r\n            this.privFormat = format;\r\n        }\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privId = createNoDashGuid();\r\n        this.privCallback = callback;\r\n        this.privIsClosed = false;\r\n        this.privBufferSize = this.privFormat.avgBytesPerSec / 10;\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return Promise.resolve(this.privFormat);\r\n    }\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PullAudioInputStreamImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        this.privIsClosed = true;\r\n        this.privCallback.close();\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public get blob(): Promise<Blob | Buffer> {\r\n        return Promise.reject(\"Not implemented\");\r\n    }\r\n\r\n    public turnOn(): Promise<void> {\r\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n        return;\r\n    }\r\n\r\n    public async attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        await this.turnOn();\r\n        this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n        return {\r\n            detach: () => {\r\n                this.privCallback.close();\r\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                return this.turnOff();\r\n            },\r\n            id: () => {\r\n                return audioNodeId;\r\n            },\r\n            read: (): Promise<IStreamChunk<ArrayBuffer>> => {\r\n                let totalBytes: number = 0;\r\n                let transmitBuff: ArrayBuffer;\r\n                // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\r\n                while (totalBytes < this.privBufferSize) {\r\n                    // Sizing the read buffer to the delta between the perfect size and what's left means we won't ever get too much\r\n                    // data back.\r\n                    const readBuff: ArrayBuffer = new ArrayBuffer(this.privBufferSize - totalBytes);\r\n                    const pulledBytes: number = this.privCallback.read(readBuff);\r\n                    // If there is no return buffer yet defined, set the return buffer to the that was just populated.\r\n                    // This was, if we have enough data there's no copy penalty, but if we don't we have a buffer that's the\r\n                    // preferred size allocated.\r\n                    if (undefined === transmitBuff) {\r\n                        transmitBuff = readBuff;\r\n                    } else {\r\n                        // Not the first bite at the apple, so fill the return buffer with the data we got back.\r\n                        const intView: Int8Array = new Int8Array(transmitBuff);\r\n                        intView.set(new Int8Array(readBuff), totalBytes);\r\n                    }\r\n                    // If there are no bytes to read, just break out and be done.\r\n                    if (0 === pulledBytes) {\r\n                        break;\r\n                    }\r\n                    totalBytes += pulledBytes;\r\n                }\r\n                return Promise.resolve<IStreamChunk<ArrayBuffer>>({\r\n                    buffer: transmitBuff.slice(0, totalBytes),\r\n                    isEnd: this.privIsClosed || totalBytes === 0,\r\n                    timeReceived: Date.now(),\r\n                });\r\n            },\r\n        };\r\n    }\r\n\r\n    public detach(audioNodeId: string): void {\r\n        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n    }\r\n\r\n    public turnOff(): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return Promise.resolve({\r\n            bitspersample: this.privFormat.bitsPerSample,\r\n            channelcount: this.privFormat.channels,\r\n            connectivity: connectivity.Unknown,\r\n            manufacturer: \"Speech SDK\",\r\n            model: \"PullStream\",\r\n            samplerate: this.privFormat.samplesPerSec,\r\n            type: type.Stream,\r\n        });\r\n    }\r\n\r\n    private onEvent = (event: AudioSourceEvent): void => {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ConnectionEvent } from \"./ConnectionEvents\";\r\nimport { ConnectionMessage } from \"./ConnectionMessage\";\r\nimport { ConnectionOpenResponse } from \"./ConnectionOpenResponse\";\r\nimport { EventSource } from \"./EventSource\";\r\n\r\nexport enum ConnectionState {\r\n    None,\r\n    Connected,\r\n    Connecting,\r\n    Disconnected,\r\n}\r\n\r\nexport interface IConnection {\r\n    id: string;\r\n    state(): ConnectionState;\r\n    open(): Promise<ConnectionOpenResponse>;\r\n    send(message: ConnectionMessage): Promise<void>;\r\n    read(): Promise<ConnectionMessage>;\r\n    events: EventSource<ConnectionEvent>;\r\n    dispose(disposing?: string): Promise<void>;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the possible reasons a recognition result might be canceled.\r\n * @class CancellationReason\r\n */\r\nexport enum CancellationReason {\r\n    /**\r\n     * Indicates that an error occurred during speech recognition.\r\n     * @member CancellationReason.Error\r\n     */\r\n    Error,\r\n\r\n    /**\r\n     * Indicates that the end of the audio stream was reached.\r\n     * @member CancellationReason.EndOfStream\r\n     */\r\n    EndOfStream,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n *  Defines error code in case that CancellationReason is Error.\r\n *  Added in version 1.1.0.\r\n */\r\nexport enum CancellationErrorCode {\r\n    /**\r\n     * Indicates that no error occurred during speech recognition.\r\n     */\r\n    NoError,\r\n\r\n    /**\r\n     * Indicates an authentication error.\r\n     */\r\n    AuthenticationFailure,\r\n\r\n    /**\r\n     * Indicates that one or more recognition parameters are invalid.\r\n     */\r\n    BadRequestParameters,\r\n\r\n    /**\r\n     * Indicates that the number of parallel requests exceeded the number of allowed\r\n     * concurrent transcriptions for the subscription.\r\n     */\r\n    TooManyRequests,\r\n\r\n    /**\r\n     * Indicates a connection error.\r\n     */\r\n    ConnectionFailure,\r\n\r\n    /**\r\n     * Indicates a time-out error when waiting for response from service.\r\n     */\r\n    ServiceTimeout,\r\n\r\n    /**\r\n     * Indicates that an error is returned by the service.\r\n     */\r\n    ServiceError,\r\n\r\n    /**\r\n     * Indicates an unexpected runtime error.\r\n     */\r\n    RuntimeError,\r\n\r\n    /**\r\n     * Indicates an quota overrun on existing key.\r\n     */\r\n    Forbidden,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { ConnectionMessage } from \"./ConnectionMessage\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class ServiceEvent extends PlatformEvent {\r\n    private privJsonResult: string;\r\n\r\n    constructor(eventName: string, jsonstring: string, eventType: EventType = EventType.Info) {\r\n      super(eventName, eventType);\r\n      this.privJsonResult = jsonstring;\r\n    }\r\n\r\n    public get jsonString(): string {\r\n        return this.privJsonResult;\r\n    }\r\n}\r\n\r\nexport class ConnectionEvent extends PlatformEvent {\r\n    private privConnectionId: string;\r\n\r\n    constructor(eventName: string, connectionId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n        this.privConnectionId = connectionId;\r\n    }\r\n\r\n    public get connectionId(): string {\r\n        return this.privConnectionId;\r\n    }\r\n}\r\n\r\nexport class ConnectionStartEvent extends ConnectionEvent {\r\n    private privUri: string;\r\n    private privHeaders: IStringDictionary<string>;\r\n\r\n    constructor(connectionId: string, uri: string, headers?: IStringDictionary<string>) {\r\n        super(\"ConnectionStartEvent\", connectionId);\r\n        this.privUri = uri;\r\n        this.privHeaders = headers;\r\n    }\r\n\r\n    public get uri(): string {\r\n        return this.privUri;\r\n    }\r\n\r\n    public get headers(): IStringDictionary<string> {\r\n        return this.privHeaders;\r\n    }\r\n}\r\n\r\nexport class ConnectionEstablishedEvent extends ConnectionEvent {\r\n    constructor(connectionId: string, metadata?: IStringDictionary<string>) {\r\n        super(\"ConnectionEstablishedEvent\", connectionId);\r\n    }\r\n}\r\n\r\nexport class ConnectionClosedEvent extends ConnectionEvent {\r\n    private privReason: string;\r\n    private privStatusCode: number;\r\n\r\n    constructor(connectionId: string, statusCode: number, reason: string) {\r\n        super(\"ConnectionClosedEvent\", connectionId, EventType.Debug);\r\n        this.privReason = reason;\r\n        this.privStatusCode = statusCode;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n}\r\n\r\nexport class ConnectionErrorEvent extends ConnectionEvent {\r\n    private readonly privMessage: string;\r\n    private readonly privType: string;\r\n\r\n    constructor(connectionId: string, message: string, type: string) {\r\n        super(\"ConnectionErrorEvent\", connectionId, EventType.Debug);\r\n        this.privMessage = message;\r\n        this.privType = type;\r\n    }\r\n\r\n    public get message(): string {\r\n        return this.privMessage;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privType;\r\n    }\r\n}\r\n\r\nexport class ConnectionEstablishErrorEvent extends ConnectionEvent {\r\n    private privStatusCode: number;\r\n    private privReason: string;\r\n\r\n    constructor(connectionId: string, statuscode: number, reason: string) {\r\n        super(\"ConnectionEstablishErrorEvent\", connectionId, EventType.Error);\r\n        this.privStatusCode = statuscode;\r\n        this.privReason = reason;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n}\r\n\r\nexport class ConnectionMessageReceivedEvent extends ConnectionEvent {\r\n    private privNetworkReceivedTime: string;\r\n    private privMessage: ConnectionMessage;\r\n\r\n    constructor(connectionId: string, networkReceivedTimeISO: string, message: ConnectionMessage) {\r\n        super(\"ConnectionMessageReceivedEvent\", connectionId);\r\n        this.privNetworkReceivedTime = networkReceivedTimeISO;\r\n        this.privMessage = message;\r\n    }\r\n\r\n    public get networkReceivedTime(): string {\r\n        return this.privNetworkReceivedTime;\r\n    }\r\n\r\n    public get message(): ConnectionMessage {\r\n        return this.privMessage;\r\n    }\r\n}\r\n\r\nexport class ConnectionMessageSentEvent extends ConnectionEvent {\r\n    private privNetworkSentTime: string;\r\n    private privMessage: ConnectionMessage;\r\n\r\n    constructor(connectionId: string, networkSentTimeISO: string, message: ConnectionMessage) {\r\n        super(\"ConnectionMessageSentEvent\", connectionId);\r\n        this.privNetworkSentTime = networkSentTimeISO;\r\n        this.privMessage = message;\r\n    }\r\n\r\n    public get networkSentTime(): string {\r\n        return this.privNetworkSentTime;\r\n    }\r\n\r\n    public get message(): ConnectionMessage {\r\n        return this.privMessage;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SpeechSynthesisResult } from \"./Exports\";\r\n\r\n/**\r\n * Defines contents of speech synthesis events.\r\n * @class SpeechSynthesisEventArgs\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisEventArgs {\r\n    private readonly privResult: SpeechSynthesisResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {SpeechSynthesisResult} result - The speech synthesis result.\r\n     */\r\n    public constructor(result: SpeechSynthesisResult) {\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the synthesis result.\r\n     * @member SpeechSynthesisEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechSynthesisResult} the synthesis result.\r\n     */\r\n    public get result(): SpeechSynthesisResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Define speech synthesis audio output formats.\r\n * @enum SpeechSynthesisOutputFormat\r\n * Updated in version 1.17.0\r\n */\r\nexport enum SpeechSynthesisOutputFormat {\r\n    /**\r\n     * raw-8khz-8bit-mono-mulaw\r\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw,\r\n     */\r\n    Raw8Khz8BitMonoMULaw,\r\n\r\n    /**\r\n     * riff-16khz-16kbps-mono-siren\r\n     * @note Unsupported by the service. Do not use this value.\r\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren\r\n     */\r\n    Riff16Khz16KbpsMonoSiren ,\r\n\r\n    /**\r\n     * audio-16khz-16kbps-mono-siren\r\n     * @note Unsupported by the service. Do not use this value.\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren\r\n     */\r\n    Audio16Khz16KbpsMonoSiren,\r\n\r\n    /**\r\n     * audio-16khz-32kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3\r\n     */\r\n    Audio16Khz32KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-16khz-128kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3\r\n     */\r\n    Audio16Khz128KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-16khz-64kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3\r\n     */\r\n    Audio16Khz64KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-24khz-48kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3\r\n     */\r\n    Audio24Khz48KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-24khz-96kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3\r\n     */\r\n    Audio24Khz96KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-24khz-160kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3\r\n     */\r\n    Audio24Khz160KBitRateMonoMp3,\r\n\r\n    /**\r\n     * raw-16khz-16bit-mono-truesilk\r\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk\r\n     */\r\n    Raw16Khz16BitMonoTrueSilk,\r\n\r\n    /**\r\n     * riff-16khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm\r\n     */\r\n    Riff16Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-8khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm\r\n     */\r\n    Riff8Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-24khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm\r\n     */\r\n    Riff24Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-8khz-8bit-mono-mulaw\r\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw\r\n     */\r\n    Riff8Khz8BitMonoMULaw,\r\n\r\n    /**\r\n     * raw-16khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm\r\n     */\r\n    Raw16Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * raw-24khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm\r\n     */\r\n    Raw24Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * raw-8khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm\r\n     */\r\n    Raw8Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * ogg-16khz-16bit-mono-opus\r\n     * @member SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus\r\n     */\r\n    Ogg16Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * ogg-24khz-16bit-mono-opus\r\n     * @member SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus\r\n     */\r\n    Ogg24Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * raw-48khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm\r\n     */\r\n    Raw48Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-48khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm\r\n     */\r\n\r\n    Riff48Khz16BitMonoPcm,\r\n    /**\r\n     * audio-48khz-96kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3\r\n     */\r\n    Audio48Khz96KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-48khz-192kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3\r\n     */\r\n    Audio48Khz192KBitRateMonoMp3,\r\n\r\n    /**\r\n     * ogg-48khz-16bit-mono-opus\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus\r\n     */\r\n    Ogg48Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * webm-16khz-16bit-mono-opus\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus\r\n     */\r\n    Webm16Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * webm-24khz-16bit-mono-opus\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus\r\n     */\r\n    Webm24Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * raw-24khz-16bit-mono-truesilk\r\n     * Added in version 1.17.0\r\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoTrueSilk\r\n     */\r\n     Raw24Khz16BitMonoTrueSilk,\r\n\r\n    /**\r\n     * raw-8khz-8bit-mono-alaw\r\n     * Added in version 1.17.0\r\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoALaw\r\n     */\r\n     Raw8Khz8BitMonoALaw,\r\n\r\n    /**\r\n     * riff-8khz-8bit-mono-alaw\r\n     * Added in version 1.17.0\r\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoALaw\r\n     */\r\n     Riff8Khz8BitMonoALaw,\r\n\r\n    /**\r\n     * webm-24khz-16bit-24kbps-mono-opus\r\n     * Audio compressed by OPUS codec in a webm container, with bitrate of 24kbps, optimized for IoT scenario.\r\n     * Added in version 1.19.0\r\n     * @member SpeechSynthesisOutputFormat.Webm24Khz16Bit24KbpsMonoOpus\r\n     */\r\n    Webm24Khz16Bit24KbpsMonoOpus,\r\n\r\n    /**\r\n     * audio-16khz-16bit-32kbps-mono-opus\r\n     * Audio compressed by OPUS codec without container, with bitrate of 32kbps.\r\n     * Added in version 1.20.0\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz16Bit32KbpsMonoOpus\r\n     */\r\n    Audio16Khz16Bit32KbpsMonoOpus,\r\n\r\n    /**\r\n     * audio-24khz-16bit-48kbps-mono-opus\r\n     * Audio compressed by OPUS codec without container, with bitrate of 48kbps.\r\n     * Added in version 1.20.0\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz16Bit48KbpsMonoOpus\r\n     */\r\n    Audio24Khz16Bit48KbpsMonoOpus,\r\n\r\n    /**\r\n     * audio-24khz-16bit-24kbps-mono-opus\r\n     * Audio compressed by OPUS codec without container, with bitrate of 24kbps.\r\n     * Added in version 1.20.0\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz16Bit24KbpsMonoOpus\r\n     */\r\n    Audio24Khz16Bit24KbpsMonoOpus\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason } from \"./Exports\";\r\n\r\n/**\r\n * Base class for synthesis results\r\n * @class SynthesisResult\r\n * Added in version 1.20.0\r\n */\r\nexport class SynthesisResult {\r\n    private privResultId: string;\r\n    private privReason: ResultReason;\r\n    private privErrorDetails: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    constructor(resultId?: string, reason?: ResultReason, errorDetails?: string, properties?: PropertyCollection) {\r\n        this.privResultId = resultId;\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privProperties = properties;\r\n    }\r\n\r\n    /**\r\n     * Specifies the result identifier.\r\n     * @member SynthesisResult.prototype.resultId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Specifies the result identifier.\r\n     */\r\n    public get resultId(): string {\r\n        return this.privResultId;\r\n    }\r\n\r\n    /**\r\n     * Specifies status of the result.\r\n     * @member SynthesisResult.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {ResultReason} Specifies status of the result.\r\n     */\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful synthesis, provides details of the occurred error.\r\n     * @member SynthesisResult.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} a brief description of an error.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     *  The set of properties exposed in the result.\r\n     * @member SynthesisResult.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The set of properties exposed in the result.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason, SynthesisResult } from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech synthesis.\r\n * @class SpeechSynthesisResult\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisResult extends SynthesisResult {\r\n    private privAudioData: ArrayBuffer;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {number} audioData - The offset into the stream.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    constructor(resultId?: string, reason?: ResultReason,  audioData?: ArrayBuffer,\r\n                errorDetails?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, errorDetails, properties);\r\n        this.privAudioData = audioData;\r\n    }\r\n\r\n    /**\r\n     * The synthesized audio data\r\n     * @member SpeechSynthesisResult.prototype.audioData\r\n     * @function\r\n     * @public\r\n     * @returns {ArrayBuffer} The synthesized audio data.\r\n     */\r\n    public get audioData(): ArrayBuffer {\r\n        return this.privAudioData;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines contents of speech synthesis word boundary event.\r\n * @class SpeechSynthesisWordBoundaryEventArgs\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisWordBoundaryEventArgs {\r\n    private privAudioOffset: number;\r\n    private privText: string;\r\n    private privWordLength: number;\r\n    private privTextOffset: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {string} text - The text.\r\n     * @param {number} wordLength - The length of the word.\r\n     * @param {number} textOffset - The text offset.\r\n     */\r\n    public constructor(audioOffset: number, text: string, wordLength: number, textOffset: number) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privText = text;\r\n        this.privWordLength = wordLength;\r\n        this.privTextOffset = textOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the text of the word boundary event.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} the text.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n\r\n    /**\r\n     * Specifies the word length\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.wordLength\r\n     * @function\r\n     * @public\r\n     * @returns {number} the word length\r\n     */\r\n    public get wordLength(): number {\r\n        return this.privWordLength;\r\n    }\r\n\r\n    /**\r\n     * Specifies the text offset.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.textOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the text offset.\r\n     */\r\n    public get textOffset(): number {\r\n        return this.privTextOffset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines contents of speech synthesis bookmark event.\r\n * @class SpeechSynthesisBookmarkEventArgs\r\n * Added in version 1.16.0\r\n */\r\nexport class SpeechSynthesisBookmarkEventArgs {\r\n    private privAudioOffset: number;\r\n    private privText: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {string} text - The bookmark text.\r\n     */\r\n    public constructor(audioOffset: number, text: string) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privText = text;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the bookmark.\r\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} the bookmark text.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines contents of speech synthesis viseme event.\r\n * @class SpeechSynthesisVisemeEventArgs\r\n * Added in version 1.16.0\r\n */\r\nexport class SpeechSynthesisVisemeEventArgs {\r\n    private privAudioOffset: number;\r\n    private privVisemeId: number;\r\n    private privAnimation: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {number} visemeId - The viseme ID.\r\n     * @param {string} animation - The animation, could be in svg or other format.\r\n     */\r\n    public constructor(audioOffset: number, visemeId: number, animation: string) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privVisemeId = visemeId;\r\n        this.privAnimation = animation;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisVisemeEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the viseme ID.\r\n     * @member SpeechSynthesisVisemeEventArgs.prototype.visemeId\r\n     * @function\r\n     * @public\r\n     * @returns {number} the viseme ID.\r\n     */\r\n    public get visemeId(): number {\r\n        return this.privVisemeId;\r\n    }\r\n\r\n    /**\r\n     * Specifies the animation.\r\n     * @member SpeechSynthesisVisemeEventArgs.prototype.animation\r\n     * @function\r\n     * @public\r\n     * @returns {string} the animation, could be in svg or other format.\r\n     */\r\n    public get animation(): string {\r\n        return this.privAnimation;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// Make sure not to export internal modules.\r\n//\r\nexport * from \"./CognitiveSubscriptionKeyAuthentication\";\r\nexport * from \"./CognitiveTokenAuthentication\";\r\nexport * from \"./IAuthentication\";\r\nexport * from \"./IConnectionFactory\";\r\nexport * from \"./ISynthesisConnectionFactory\";\r\nexport * from \"./IntentConnectionFactory\";\r\nexport * from \"./RecognitionEvents\";\r\nexport * from \"./ServiceRecognizerBase\";\r\nexport * from \"./RecognizerConfig\";\r\nexport * from \"./SpeechServiceInterfaces\";\r\nexport * from \"./WebsocketMessageFormatter\";\r\nexport * from \"./SpeechConnectionFactory\";\r\nexport * from \"./TranscriberConnectionFactory\";\r\nexport * from \"./TranslationConnectionFactory\";\r\nexport * from \"./SpeechSynthesisConnectionFactory\";\r\nexport * from \"./EnumTranslation\";\r\nexport * from \"./ServiceMessages/Enums\";\r\nexport * from \"./ServiceMessages/TranslationSynthesisEnd\";\r\nexport * from \"./ServiceMessages/TranslationHypothesis\";\r\nexport * from \"./ServiceMessages/TranslationPhrase\";\r\nexport * from \"./TranslationServiceRecognizer\";\r\nexport * from \"./ServiceMessages/SpeechDetected\";\r\nexport * from \"./ServiceMessages/SpeechHypothesis\";\r\nexport * from \"./ServiceMessages/SpeechKeyword\";\r\nexport * from \"./SpeechServiceRecognizer\";\r\nexport * from \"./TranscriptionServiceRecognizer\";\r\nexport * from \"./ServiceMessages/DetailedSpeechPhrase\";\r\nexport * from \"./ServiceMessages/SimpleSpeechPhrase\";\r\nexport * from \"./AddedLmIntent\";\r\nexport * from \"./IntentServiceRecognizer\";\r\nexport * from \"./ServiceMessages/IntentResponse\";\r\nexport * from \"./RequestSession\";\r\nexport * from \"./SpeechContext\";\r\nexport * from \"./DynamicGrammarBuilder\";\r\nexport * from \"./DynamicGrammarInterfaces\";\r\nexport * from \"./DialogServiceAdapter\";\r\nexport * from \"./AgentConfig\";\r\nexport * from \"./Transcription/Exports\";\r\nexport * from \"./ServiceMessages/SynthesisAudioMetadata\";\r\nexport * from \"./SynthesisTurn\";\r\nexport * from \"./SynthesisAdapterBase\";\r\nexport * from \"./SynthesisRestAdapter\";\r\nexport * from \"./SynthesizerConfig\";\r\nexport * from \"./SynthesisContext\";\r\nexport * from \"./SpeakerRecognitionConfig\";\r\nexport * from \"./SpeakerIdMessageAdapter\";\r\n\r\nexport const OutputFormatPropertyName: string = \"OutputFormat\";\r\nexport const CancellationErrorCodePropertyName: string = \"CancellationErrorCode\";\r\nexport const ServicePropertiesPropertyName: string = \"ServiceProperties\";\r\nexport const ForceDictationPropertyName: string = \"ForceDictation\";\r\nexport const AutoDetectSourceLanguagesOpenRangeOptionName: string = \"OpenRange\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { INumberDictionary } from \"../../common/Exports\";\r\nimport { SpeechSynthesisOutputFormat } from \"../SpeechSynthesisOutputFormat\";\r\nimport { AudioFormatTag, AudioStreamFormatImpl } from \"./AudioStreamFormat\";\r\n\r\n/**\r\n * @private\r\n * @class AudioOutputFormatImpl\r\n * Updated in version 1.17.0\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class AudioOutputFormatImpl extends AudioStreamFormatImpl {\r\n    public static SpeechSynthesisOutputFormatToString: INumberDictionary<string> = {\r\n        [SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw]: \"raw-8khz-8bit-mono-mulaw\",\r\n        [SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren]: \"riff-16khz-16kbps-mono-siren\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren]: \"audio-16khz-16kbps-mono-siren\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3]: \"audio-16khz-32kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3]: \"audio-16khz-128kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3]: \"audio-16khz-64kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3]: \"audio-24khz-48kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3]: \"audio-24khz-96kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3]: \"audio-24khz-160kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk]: \"raw-16khz-16bit-mono-truesilk\",\r\n        [SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm]: \"riff-16khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm]: \"riff-8khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm]: \"riff-24khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw]: \"riff-8khz-8bit-mono-mulaw\",\r\n        [SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm]: \"raw-16khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm]: \"raw-24khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm]: \"raw-8khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus]: \"ogg-16khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus]: \"ogg-24khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm]: \"raw-48khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm]: \"riff-48khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3]: \"audio-48khz-96kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3]: \"audio-48khz-192kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus]: \"ogg-48khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus]: \"webm-16khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus]: \"webm-24khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Webm24Khz16Bit24KbpsMonoOpus]: \"webm-24khz-16bit-24kbps-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Raw24Khz16BitMonoTrueSilk]: \"raw-24khz-16bit-mono-truesilk\",\r\n        [SpeechSynthesisOutputFormat.Raw8Khz8BitMonoALaw]: \"raw-8khz-8bit-mono-alaw\",\r\n        [SpeechSynthesisOutputFormat.Riff8Khz8BitMonoALaw]: \"riff-8khz-8bit-mono-alaw\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz16Bit32KbpsMonoOpus]: \"audio-16khz-16bit-32kbps-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz16Bit48KbpsMonoOpus]: \"audio-24khz-16bit-48kbps-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz16Bit24KbpsMonoOpus]: \"audio-24khz-16bit-24kbps-mono-opus\",\r\n    };\r\n    private priAudioFormatString: string;\r\n    /**\r\n     * audio format string for synthesis request, which may differ from priAudioFormatString.\r\n     * e.g. for riff format, we will request raw format and add a header in SDK side.\r\n     */\r\n    private readonly priRequestAudioFormatString: string;\r\n    private readonly priHasHeader: boolean;\r\n\r\n    /**\r\n     * Creates an instance with the given values.\r\n     * @constructor\r\n     * @param formatTag\r\n     * @param {number} channels - Number of channels.\r\n     * @param {number} samplesPerSec - Samples per second.\r\n     * @param {number} avgBytesPerSec - Average bytes per second.\r\n     * @param {number} blockAlign - Block alignment.\r\n     * @param {number} bitsPerSample - Bits per sample.\r\n     * @param {string} audioFormatString - Audio format string\r\n     * @param {string} requestAudioFormatString - Audio format string sent to service.\r\n     * @param {boolean} hasHeader - If the format has header or not.\r\n     */\r\n    public constructor(formatTag: AudioFormatTag,\r\n                       channels: number,\r\n                       samplesPerSec: number,\r\n                       avgBytesPerSec: number,\r\n                       blockAlign: number,\r\n                       bitsPerSample: number,\r\n                       audioFormatString: string,\r\n                       requestAudioFormatString: string,\r\n                       hasHeader: boolean) {\r\n        super(samplesPerSec, bitsPerSample, channels, formatTag);\r\n        this.formatTag = formatTag;\r\n        this.avgBytesPerSec = avgBytesPerSec;\r\n        this.blockAlign = blockAlign;\r\n        this.priAudioFormatString = audioFormatString;\r\n        this.priRequestAudioFormatString = requestAudioFormatString;\r\n        this.priHasHeader = hasHeader;\r\n    }\r\n\r\n    public static fromSpeechSynthesisOutputFormat(speechSynthesisOutputFormat?: SpeechSynthesisOutputFormat): AudioOutputFormatImpl {\r\n        if (speechSynthesisOutputFormat === undefined) {\r\n            return AudioOutputFormatImpl.getDefaultOutputFormat();\r\n        }\r\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(\r\n            AudioOutputFormatImpl.SpeechSynthesisOutputFormatToString[speechSynthesisOutputFormat]);\r\n    }\r\n\r\n    public static fromSpeechSynthesisOutputFormatString(speechSynthesisOutputFormatString: string): AudioOutputFormatImpl {\r\n        switch (speechSynthesisOutputFormatString) {\r\n            case \"raw-8khz-8bit-mono-mulaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MuLaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"riff-16khz-16kbps-mono-siren\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.Siren,\r\n                    1,\r\n                    16000,\r\n                    2000,\r\n                    40,\r\n                    0,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"audio-16khz-16kbps-mono-siren\",\r\n                    true);\r\n            case \"audio-16khz-16kbps-mono-siren\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.Siren,\r\n                    1,\r\n                    16000,\r\n                    2000,\r\n                    40,\r\n                    0,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-32kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    16000,\r\n                    32 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-128kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    16000,\r\n                    128 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-64kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    16000,\r\n                    64 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-48kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    24000,\r\n                    48 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-96kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    24000,\r\n                    96 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-160kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    24000,\r\n                    160 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-16khz-16bit-mono-truesilk\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.SILKSkype,\r\n                    1,\r\n                    16000,\r\n                    32000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n\r\n            case \"riff-8khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    8000,\r\n                    16000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"riff-24khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    24000,\r\n                    48000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-24khz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"riff-8khz-8bit-mono-mulaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MuLaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-8bit-mono-mulaw\",\r\n                    true);\r\n            case \"raw-16khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    16000,\r\n                    32000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-16khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"raw-24khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    24000,\r\n                    48000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-24khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"raw-8khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    8000,\r\n                    16000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"ogg-16khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OGG_OPUS,\r\n                    1,\r\n                    16000,\r\n                    8192,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"ogg-24khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OGG_OPUS,\r\n                    1,\r\n                    24000,\r\n                    8192,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-48khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    48000,\r\n                    96000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-48khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"riff-48khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    48000,\r\n                    96000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-48khz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"audio-48khz-96kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    48000,\r\n                    96 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-48khz-192kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    48000,\r\n                    192 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"ogg-48khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OGG_OPUS,\r\n                    1,\r\n                    48000,\r\n                    12000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"webm-16khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.WEBM_OPUS,\r\n                    1,\r\n                    16000,\r\n                    4000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"webm-24khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.WEBM_OPUS,\r\n                    1,\r\n                    24000,\r\n                    6000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"webm-24khz-16bit-24kbps-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.WEBM_OPUS,\r\n                    1,\r\n                    24000,\r\n                    3000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-16bit-32kbps-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OPUS,\r\n                    1,\r\n                    16000,\r\n                    4000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-16bit-48kbps-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OPUS,\r\n                    1,\r\n                    24000,\r\n                    6000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-16bit-24kbps-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OPUS,\r\n                    1,\r\n                    24000,\r\n                    3000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-16bit-mono-flac\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.FLAC,\r\n                    1,\r\n                    24000,\r\n                    24000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-48khz-16bit-mono-flac\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.FLAC,\r\n                    1,\r\n                    48000,\r\n                    30000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-24khz-16bit-mono-truesilk\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.SILKSkype,\r\n                    1,\r\n                    24000,\r\n                    48000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-8khz-8bit-mono-alaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.ALaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"riff-8khz-8bit-mono-alaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.ALaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-8bit-mono-alaw\",\r\n                    true);\r\n            case \"riff-16khz-16bit-mono-pcm\":\r\n            default:\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    16000,\r\n                    32000,\r\n                    2,\r\n                    16,\r\n                    \"riff-16khz-16bit-mono-pcm\",\r\n                    \"raw-16khz-16bit-mono-pcm\",\r\n                    true);\r\n        }\r\n    }\r\n\r\n    public static getDefaultOutputFormat(): AudioOutputFormatImpl {\r\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(\r\n            (typeof window !== \"undefined\") ? \"audio-24khz-48kbitrate-mono-mp3\" : \"riff-16khz-16bit-mono-pcm\");\r\n    }\r\n\r\n    /**\r\n     * The format tag of the audio\r\n     * @AudioFormatTag AudioOutputFormatImpl.prototype.formatTag\r\n     * @function\r\n     * @public\r\n     */\r\n    public formatTag: AudioFormatTag;\r\n\r\n    /**\r\n     * Specifies if this audio output format has a header\r\n     * @boolean AudioOutputFormatImpl.prototype.hasHeader\r\n     * @function\r\n     * @public\r\n     */\r\n    public get hasHeader(): boolean {\r\n        return this.priHasHeader;\r\n    }\r\n\r\n    /**\r\n     * Specifies the header of this format\r\n     * @ArrayBuffer AudioOutputFormatImpl.prototype.header\r\n     * @function\r\n     * @public\r\n     */\r\n    public get header(): ArrayBuffer {\r\n        if (this.hasHeader) {\r\n            return this.privHeader;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Updates the header based on the audio length\r\n     * @member AudioOutputFormatImpl.updateHeader\r\n     * @function\r\n     * @public\r\n     * @param {number} audioLength - the audio length\r\n     */\r\n    public updateHeader(audioLength: number): void {\r\n        if (this.priHasHeader) {\r\n            const view = new DataView(this.privHeader);\r\n            view.setUint32(40, audioLength, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio format string to be sent to the service\r\n     * @string AudioOutputFormatImpl.prototype.requestAudioFormatString\r\n     * @function\r\n     * @public\r\n     */\r\n    public get requestAudioFormatString(): string {\r\n        return this.priRequestAudioFormatString;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport enum MetadataType {\r\n    WordBoundary = \"WordBoundary\",\r\n    Bookmark = \"Bookmark\",\r\n    Viseme = \"Viseme\"\r\n}\r\n\r\nexport interface ISynthesisMetadata {\r\n    Type: MetadataType;\r\n    Data: {\r\n        Offset: number;\r\n        text: {\r\n            Text: string;\r\n            Length: number;\r\n        };\r\n        Bookmark: string;\r\n        VisemeId: number;\r\n        AnimationChunk: string;\r\n        IsLastAnimation: boolean;\r\n    };\r\n}\r\n\r\n// audio.metadata\r\nexport interface ISynthesisAudioMetadata {\r\n    Metadata: ISynthesisMetadata[];\r\n}\r\n\r\nexport class SynthesisAudioMetadata implements ISynthesisAudioMetadata {\r\n    private privSynthesisAudioMetadata: ISynthesisAudioMetadata;\r\n\r\n    private constructor(json: string) {\r\n        this.privSynthesisAudioMetadata = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): SynthesisAudioMetadata {\r\n        return new SynthesisAudioMetadata(json);\r\n    }\r\n\r\n    public get Metadata(): ISynthesisMetadata[] {\r\n        return this.privSynthesisAudioMetadata.Metadata;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    IAudioDestination,\r\n    IStreamChunk,\r\n    Stream,\r\n} from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    AudioStreamFormat,\r\n    PushAudioOutputStreamCallback\r\n} from \"../Exports\";\r\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat\";\r\n\r\n/**\r\n * Represents audio output stream used for custom audio output configurations.\r\n * @class AudioOutputStream\r\n */\r\nexport abstract class AudioOutputStream {\r\n\r\n    /**\r\n     * Creates and initializes an instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() { }\r\n\r\n    /**\r\n     * Sets the format of the AudioOutputStream\r\n     * Note: the format is set by the synthesizer before writing. Do not set it before passing it to AudioConfig\r\n     * @member AudioOutputStream.prototype.format\r\n     */\r\n    public abstract set format(format: AudioStreamFormat);\r\n\r\n    /**\r\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\r\n     * @member AudioOutputStream.createPullStream\r\n     * @function\r\n     * @public\r\n     * @returns {PullAudioOutputStream} The audio output stream being created.\r\n     */\r\n    public static createPullStream(): PullAudioOutputStream {\r\n        return PullAudioOutputStream.create();\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioOutputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio output stream used for custom audio output configurations.\r\n * @class PullAudioOutputStream\r\n */\r\nexport abstract class PullAudioOutputStream extends AudioOutputStream {\r\n\r\n    /**\r\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\r\n     * @member PullAudioOutputStream.create\r\n     * @function\r\n     * @public\r\n     * @returns {PullAudioOutputStream} The push audio output stream being created.\r\n     */\r\n    public static create(): PullAudioOutputStream {\r\n        return new PullAudioOutputStreamImpl();\r\n    }\r\n\r\n    /**\r\n     * Reads audio data from the internal buffer.\r\n     * @member PullAudioOutputStream.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - An ArrayBuffer to store the read data.\r\n     * @returns {Promise<number>} Audio buffer length has been read.\r\n     */\r\n    public abstract read(dataBuffer: ArrayBuffer): Promise<number>;\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PullAudioOutputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio output stream used for custom audio output configurations.\r\n * @private\r\n * @class PullAudioOutputStreamImpl\r\n */\r\nexport class PullAudioOutputStreamImpl extends PullAudioOutputStream implements IAudioDestination {\r\n    private privFormat: AudioOutputFormatImpl;\r\n    private privId: string;\r\n    private privStream: Stream<ArrayBuffer>;\r\n    private privLastChunkView: Int8Array;\r\n\r\n    /**\r\n     * Creates and initializes an instance with the given values.\r\n     * @constructor\r\n     */\r\n    public constructor() {\r\n        super();\r\n        this.privId = createNoDashGuid();\r\n        this.privStream = new Stream<ArrayBuffer>();\r\n    }\r\n\r\n    /**\r\n     * Sets the format information to the stream. For internal use only.\r\n     * @param {AudioStreamFormat} format - the format to be set.\r\n     */\r\n    public set format(format: AudioStreamFormat) {\r\n        if (format === undefined || format === null) {\r\n            this.privFormat = AudioOutputFormatImpl.getDefaultOutputFormat();\r\n        }\r\n        this.privFormat = format as AudioOutputFormatImpl;\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): AudioStreamFormat {\r\n        return this.privFormat;\r\n    }\r\n\r\n    /**\r\n     * Checks if the stream is closed\r\n     * @member PullAudioOutputStreamImpl.prototype.isClosed\r\n     * @property\r\n     * @public\r\n     */\r\n    public get isClosed(): boolean {\r\n        return this.privStream.isClosed;\r\n    }\r\n\r\n    /**\r\n     * Gets the id of the stream\r\n     * @member PullAudioOutputStreamImpl.prototype.id\r\n     * @property\r\n     * @public\r\n     */\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    /**\r\n     * Reads audio data from the internal buffer.\r\n     * @member PullAudioOutputStreamImpl.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - An ArrayBuffer to store the read data.\r\n     * @returns {Promise<number>} - Audio buffer length has been read.\r\n     */\r\n    public async read(dataBuffer: ArrayBuffer): Promise<number> {\r\n        const intView: Int8Array = new Int8Array(dataBuffer);\r\n        let totalBytes: number = 0;\r\n\r\n        if (this.privLastChunkView !== undefined) {\r\n            if (this.privLastChunkView.length > dataBuffer.byteLength) {\r\n                intView.set(this.privLastChunkView.slice(0, dataBuffer.byteLength));\r\n                this.privLastChunkView = this.privLastChunkView.slice(dataBuffer.byteLength);\r\n                return Promise.resolve(dataBuffer.byteLength);\r\n            }\r\n            intView.set(this.privLastChunkView);\r\n            totalBytes = this.privLastChunkView.length;\r\n            this.privLastChunkView = undefined;\r\n        }\r\n\r\n        // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\r\n        while (totalBytes < dataBuffer.byteLength && !this.privStream.isReadEnded) {\r\n            const chunk: IStreamChunk<ArrayBuffer> = await this.privStream.read();\r\n            if (chunk !== undefined && !chunk.isEnd) {\r\n                let tmpBuffer: ArrayBuffer;\r\n                if (chunk.buffer.byteLength > dataBuffer.byteLength - totalBytes) {\r\n                    tmpBuffer = chunk.buffer.slice(0, dataBuffer.byteLength - totalBytes);\r\n                    this.privLastChunkView = new Int8Array(chunk.buffer.slice(dataBuffer.byteLength - totalBytes));\r\n                } else {\r\n                    tmpBuffer = chunk.buffer;\r\n                }\r\n                intView.set(new Int8Array(tmpBuffer), totalBytes);\r\n                totalBytes += tmpBuffer.byteLength;\r\n            } else {\r\n                await this.privStream.readEnded();\r\n            }\r\n        }\r\n        return totalBytes;\r\n    }\r\n\r\n    /**\r\n     * Writes the audio data specified by making an internal copy of the data.\r\n     * @member PullAudioOutputStreamImpl.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\r\n     */\r\n    public write(dataBuffer: ArrayBuffer): void {\r\n        Contracts.throwIfNullOrUndefined(this.privStream, \"must set format before writing\");\r\n        this.privStream.writeStreamChunk({\r\n            buffer: dataBuffer,\r\n            isEnd: false,\r\n            timeReceived: Date.now()\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PullAudioOutputStreamImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        this.privStream.close();\r\n    }\r\n}\r\n\r\n/*\r\n * Represents audio output stream used for custom audio output configurations.\r\n * @class PushAudioOutputStream\r\n */\r\nexport abstract class PushAudioOutputStream extends AudioOutputStream {\r\n    /**\r\n     * Creates and initializes and instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() { super(); }\r\n\r\n    /**\r\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\r\n     * write() and close() methods.\r\n     * @member PushAudioOutputStream.create\r\n     * @function\r\n     * @public\r\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\r\n     *        derived from PushAudioOutputStreamCallback\r\n     * @returns {PushAudioOutputStream} The push audio output stream being created.\r\n     */\r\n    public static create(callback: PushAudioOutputStreamCallback): PushAudioOutputStream {\r\n        return new PushAudioOutputStreamImpl(callback);\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member PushAudioOutputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n\r\n}\r\n\r\n/**\r\n * Represents audio output stream used for custom audio output configurations.\r\n * @private\r\n * @class PushAudioOutputStreamImpl\r\n */\r\nexport class PushAudioOutputStreamImpl extends PushAudioOutputStream implements IAudioDestination {\r\n    private readonly privId: string;\r\n    private privCallback: PushAudioOutputStreamCallback;\r\n\r\n    /**\r\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\r\n     * read() and close() methods.\r\n     * @constructor\r\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\r\n     *        derived from PushAudioOutputStreamCallback\r\n     */\r\n    public constructor(callback: PushAudioOutputStreamCallback) {\r\n        super();\r\n        this.privId = createNoDashGuid();\r\n        this.privCallback = callback;\r\n    }\r\n\r\n    // tslint:disable-next-line:no-empty\r\n    public set format(format: AudioStreamFormat) { }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        if (!!this.privCallback.write) {\r\n            this.privCallback.write(buffer);\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        if (!!this.privCallback.close) {\r\n            this.privCallback.close();\r\n        }\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { EventType, PlatformEvent } from \"../common/Exports\";\r\n\r\nexport class SpeechSynthesisEvent extends PlatformEvent {\r\n    private privRequestId: string;\r\n\r\n    constructor(eventName: string, requestId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n\r\n        this.privRequestId = requestId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n}\r\n\r\nexport class SynthesisTriggeredEvent extends SpeechSynthesisEvent {\r\n    private privSessionAudioDestinationId: string;\r\n    private privTurnAudioDestinationId: string;\r\n\r\n    constructor(requestId: string, sessionAudioDestinationId: string, turnAudioDestinationId: string) {\r\n        super(\"SynthesisTriggeredEvent\", requestId);\r\n\r\n        this.privSessionAudioDestinationId = sessionAudioDestinationId;\r\n        this.privTurnAudioDestinationId = turnAudioDestinationId;\r\n    }\r\n\r\n    public get audioSessionDestinationId(): string {\r\n        return this.privSessionAudioDestinationId;\r\n    }\r\n\r\n    public get audioTurnDestinationId(): string {\r\n        return this.privTurnAudioDestinationId;\r\n    }\r\n}\r\n\r\nexport class ConnectingToSynthesisServiceEvent extends SpeechSynthesisEvent {\r\n    private privAuthFetchEventId: string;\r\n\r\n    constructor(requestId: string, authFetchEventId: string) {\r\n        super(\"ConnectingToSynthesisServiceEvent\", requestId);\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n\r\nexport class SynthesisStartedEvent extends SpeechSynthesisEvent {\r\n    private privAuthFetchEventId: string;\r\n\r\n    constructor(requestId: string, authFetchEventId: string) {\r\n        super(\"SynthesisStartedEvent\", requestId);\r\n\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events, IAudioDestination\r\n} from \"../common/Exports\";\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport { PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { ISynthesisMetadata } from \"./ServiceMessages/SynthesisAudioMetadata\";\r\nimport { SynthesisAdapterBase } from \"./SynthesisAdapterBase\";\r\nimport {\r\n    ConnectingToSynthesisServiceEvent,\r\n    SpeechSynthesisEvent,\r\n    SynthesisStartedEvent,\r\n    SynthesisTriggeredEvent,\r\n} from \"./SynthesisEvents\";\r\n\r\nexport interface ISynthesisResponseContext {\r\n    serviceTag: string;\r\n}\r\n\r\nexport interface ISynthesisResponseAudio {\r\n    type: string;\r\n    streamId: string;\r\n}\r\n\r\nexport interface ISynthesisResponse {\r\n    context: ISynthesisResponseContext;\r\n    audio: ISynthesisResponseAudio;\r\n}\r\n\r\nexport class SynthesisTurn {\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get streamId(): string {\r\n        return this.privStreamId;\r\n    }\r\n\r\n    public set streamId(value: string) {\r\n        this.privStreamId = value;\r\n    }\r\n\r\n    public get audioOutputFormat(): AudioOutputFormatImpl {\r\n        return this.privAudioOutputFormat;\r\n    }\r\n\r\n    public set audioOutputFormat(format: AudioOutputFormatImpl) {\r\n        this.privAudioOutputFormat = format;\r\n    }\r\n\r\n    public get turnCompletionPromise(): Promise<void> {\r\n        return this.privTurnDeferral.promise;\r\n    }\r\n\r\n    public get isSynthesisEnded(): boolean {\r\n        return this.privIsSynthesisEnded;\r\n    }\r\n\r\n    public get isSynthesizing(): boolean {\r\n        return this.privIsSynthesizing;\r\n    }\r\n\r\n    public get currentTextOffset(): number {\r\n        return this.privTextOffset;\r\n    }\r\n\r\n    // The number of bytes received for current turn\r\n    public get bytesReceived(): number {\r\n        return this.privBytesReceived;\r\n    }\r\n\r\n    private privIsDisposed: boolean = false;\r\n    private privAuthFetchEventId: string;\r\n    private privIsSynthesizing: boolean = false;\r\n    private privIsSynthesisEnded: boolean = false;\r\n    private privBytesReceived: number = 0;\r\n    private privRequestId: string;\r\n    private privStreamId: string;\r\n    private privTurnDeferral: Deferred<void>;\r\n    private privInTurn: boolean = false;\r\n    private privAudioOutputFormat: AudioOutputFormatImpl;\r\n    private privAudioOutputStream: PullAudioOutputStreamImpl;\r\n    private privReceivedAudio: ArrayBuffer;\r\n    private privReceivedAudioWithHeader: ArrayBuffer;\r\n    private privTextOffset: number = 0;\r\n    private privNextSearchTextIndex: number = 0;\r\n    private privPartialVisemeAnimation: string;\r\n    private privRawText: string;\r\n    private privIsSSML: boolean;\r\n    private privTurnAudioDestination: IAudioDestination;\r\n\r\n    constructor() {\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privTurnDeferral = new Deferred<void>();\r\n\r\n        // We're not in a turn, so resolve.\r\n        this.privTurnDeferral.resolve();\r\n    }\r\n\r\n    public async getAllReceivedAudio(): Promise<ArrayBuffer> {\r\n        if (!!this.privReceivedAudio) {\r\n            return Promise.resolve(this.privReceivedAudio);\r\n        }\r\n        if (!this.privIsSynthesisEnded) {\r\n            return null;\r\n        }\r\n        await this.readAllAudioFromStream();\r\n        return Promise.resolve(this.privReceivedAudio);\r\n    }\r\n\r\n    public async getAllReceivedAudioWithHeader(): Promise<ArrayBuffer> {\r\n        if (!!this.privReceivedAudioWithHeader) {\r\n            return this.privReceivedAudioWithHeader;\r\n        }\r\n        if (!this.privIsSynthesisEnded) {\r\n            return null;\r\n        }\r\n        if (this.audioOutputFormat.hasHeader) {\r\n            const audio: ArrayBuffer = await this.getAllReceivedAudio();\r\n            this.privReceivedAudioWithHeader = SynthesisAdapterBase.addHeader(audio, this.audioOutputFormat);\r\n            return this.privReceivedAudioWithHeader;\r\n        } else {\r\n            return this.getAllReceivedAudio();\r\n        }\r\n    }\r\n\r\n    public startNewSynthesis(requestId: string, rawText: string, isSSML: boolean, audioDestination?: IAudioDestination): void {\r\n        this.privIsSynthesisEnded = false;\r\n        this.privIsSynthesizing = true;\r\n        this.privRequestId = requestId;\r\n        this.privRawText = rawText;\r\n        this.privIsSSML = isSSML;\r\n        this.privAudioOutputStream = new PullAudioOutputStreamImpl();\r\n        this.privAudioOutputStream.format = this.privAudioOutputFormat;\r\n        this.privReceivedAudio = null;\r\n        this.privReceivedAudioWithHeader = null;\r\n        this.privBytesReceived = 0;\r\n        this.privTextOffset = 0;\r\n        this.privNextSearchTextIndex = 0;\r\n        this.privPartialVisemeAnimation = \"\";\r\n        if (audioDestination !== undefined) {\r\n            this.privTurnAudioDestination = audioDestination;\r\n            this.privTurnAudioDestination.format = this.privAudioOutputFormat;\r\n        }\r\n        this.onEvent(new SynthesisTriggeredEvent(this.requestId, undefined, audioDestination === undefined ? undefined : audioDestination.id()));\r\n    }\r\n\r\n    public onPreConnectionStart = (authFetchEventId: string, connectionId: string): void => {\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.onEvent(new ConnectingToSynthesisServiceEvent(this.privRequestId, this.privAuthFetchEventId));\r\n    }\r\n\r\n    public onAuthCompleted = (isError: boolean, error?: string): void => {\r\n        if (isError) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onConnectionEstablishCompleted = (statusCode: number, reason?: string): void => {\r\n        if (statusCode === 200) {\r\n            this.onEvent(new SynthesisStartedEvent(this.requestId, this.privAuthFetchEventId));\r\n            this.privBytesReceived = 0;\r\n            return;\r\n        } else if (statusCode === 403) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onServiceResponseMessage = (responseJson: string): void => {\r\n        const response: ISynthesisResponse = JSON.parse(responseJson);\r\n        this.streamId = response.audio.streamId;\r\n    }\r\n\r\n    public onServiceTurnEndResponse = (): void => {\r\n        this.privInTurn = false;\r\n        this.privTurnDeferral.resolve();\r\n        this.onComplete();\r\n    }\r\n\r\n    public onServiceTurnStartResponse = (): void => {\r\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\r\n            // What? How are we starting a turn with another not done?\r\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\r\n            // Avoid UnhandledPromiseRejection if privTurnDeferral is not being awaited\r\n            /* tslint:disable:no-empty */\r\n            this.privTurnDeferral.promise.then().catch(() => { });\r\n        }\r\n        this.privInTurn = true;\r\n        this.privTurnDeferral = new Deferred<void>();\r\n    }\r\n\r\n    public onAudioChunkReceived(data: ArrayBuffer): void {\r\n        if (this.isSynthesizing) {\r\n            this.privAudioOutputStream.write(data);\r\n            this.privBytesReceived += data.byteLength;\r\n            if (this.privTurnAudioDestination !== undefined) {\r\n                this.privTurnAudioDestination.write(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    public onWordBoundaryEvent(text: string): void {\r\n        this.updateTextOffset(text);\r\n    }\r\n\r\n    public onVisemeMetadataReceived(metadata: ISynthesisMetadata): void {\r\n        if (metadata.Data.AnimationChunk !== undefined) {\r\n            this.privPartialVisemeAnimation += metadata.Data.AnimationChunk;\r\n        }\r\n    }\r\n\r\n    public dispose = (error?: string): void => {\r\n        if (!this.privIsDisposed) {\r\n            // we should have completed by now. If we did not its an unknown error.\r\n            this.privIsDisposed = true;\r\n        }\r\n    }\r\n\r\n    public onStopSynthesizing(): void {\r\n        this.onComplete();\r\n    }\r\n\r\n    /**\r\n     * Gets the viseme animation string (merged from animation chunk), and clears the internal\r\n     * partial animation.\r\n     */\r\n    public getAndClearVisemeAnimation(): string {\r\n        const animation: string = this.privPartialVisemeAnimation;\r\n        this.privPartialVisemeAnimation = \"\";\r\n        return animation;\r\n    }\r\n\r\n    protected onEvent = (event: SpeechSynthesisEvent): void => {\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private updateTextOffset(text: string): void {\r\n        if (this.privTextOffset >= 0) {\r\n            this.privTextOffset = this.privRawText.indexOf(text, this.privNextSearchTextIndex);\r\n            if (this.privTextOffset >= 0) {\r\n                this.privNextSearchTextIndex = this.privTextOffset + text.length;\r\n            }\r\n            if (this.privIsSSML) {\r\n                if (this.privRawText.indexOf(\"<\", this.privTextOffset + 1) > this.privRawText.indexOf(\">\", this.privTextOffset + 1)) {\r\n                    this.updateTextOffset(text);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private onComplete = (): void => {\r\n        if (this.privIsSynthesizing) {\r\n            this.privIsSynthesizing = false;\r\n            this.privIsSynthesisEnded = true;\r\n            this.privAudioOutputStream.close();\r\n            this.privInTurn = false;\r\n            if (this.privTurnAudioDestination !== undefined) {\r\n                this.privTurnAudioDestination.close();\r\n                this.privTurnAudioDestination = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    private async readAllAudioFromStream(): Promise<void> {\r\n        if (this.privIsSynthesisEnded) {\r\n            this.privReceivedAudio = new ArrayBuffer(this.bytesReceived);\r\n            try {\r\n                await this.privAudioOutputStream.read(this.privReceivedAudio);\r\n            } catch (e) {\r\n                this.privReceivedAudio = new ArrayBuffer(0);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport { SpeechSynthesizer } from \"../sdk/Exports\";\r\n\r\n/**\r\n * Represents the JSON used in the synthesis.context message sent to the speech service.\r\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\r\n */\r\nexport class SynthesisContext {\r\n    private privContext: { [section: string]: any } = {};\r\n    private privSpeechSynthesizer: SpeechSynthesizer;\r\n    private privAudioOutputFormat: AudioOutputFormatImpl;\r\n\r\n    constructor(speechSynthesizer: SpeechSynthesizer) {\r\n        this.privSpeechSynthesizer = speechSynthesizer;\r\n    }\r\n\r\n    /**\r\n     * Adds a section to the synthesis.context object.\r\n     * @param sectionName Name of the section to add.\r\n     * @param value JSON serializable object that represents the value.\r\n     */\r\n    public setSection(sectionName: string, value: any): void {\r\n        this.privContext[sectionName] = value;\r\n    }\r\n\r\n    /**\r\n     * Sets the audio output format for synthesis context generation.\r\n     * @param format {AudioOutputFormatImpl} the output format\r\n     */\r\n    public set audioOutputFormat(format: AudioOutputFormatImpl) {\r\n        this.privAudioOutputFormat = format;\r\n    }\r\n\r\n    public toJSON(): string {\r\n\r\n        const synthesisSection: ISynthesisSection = this.buildSynthesisContext();\r\n        this.setSection(\"synthesis\", synthesisSection);\r\n\r\n        return JSON.stringify(this.privContext);\r\n    }\r\n\r\n    private buildSynthesisContext(): ISynthesisSection {\r\n        return {\r\n            audio: {\r\n                metadataOptions: {\r\n                    bookmarkEnabled: (!!this.privSpeechSynthesizer.bookmarkReached),\r\n                    sentenceBoundaryEnabled: false,\r\n                    visemeEnabled: (!!this.privSpeechSynthesizer.visemeReceived),\r\n                    wordBoundaryEnabled: (!!this.privSpeechSynthesizer.wordBoundary),\r\n                },\r\n                outputFormat: this.privAudioOutputFormat.requestAudioFormatString,\r\n            },\r\n            language: {\r\n                autoDetection: this.privSpeechSynthesizer.autoDetectSourceLanguage\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\ninterface ISynthesisSection {\r\n    audio: {\r\n        outputFormat: string,\r\n        metadataOptions: {\r\n            bookmarkEnabled: boolean,\r\n            wordBoundaryEnabled: boolean,\r\n            visemeEnabled: boolean,\r\n            sentenceBoundaryEnabled: boolean,\r\n        }\r\n    };\r\n    language: {\r\n        autoDetection: boolean\r\n    };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Represents the JSON used in the agent.config message sent to the speech service.\r\n */\r\nexport class AgentConfig {\r\n    private iPrivConfig: IAgentConfig;\r\n\r\n    public toJsonString(): string {\r\n        return JSON.stringify(this.iPrivConfig);\r\n    }\r\n\r\n    public get(): IAgentConfig {\r\n        return this.iPrivConfig;\r\n    }\r\n\r\n    /**\r\n     * Setter for the agent.config object.\r\n     * @param value a JSON serializable object.\r\n     */\r\n    public set(value: IAgentConfig): void {\r\n        this.iPrivConfig = value;\r\n    }\r\n}\r\n\r\nexport interface IAgentConfig {\r\n    botInfo: {\r\n        commType: string,\r\n        connectionId: string,\r\n        conversationId: string,\r\n        fromId: string\r\n        commandsCulture: string,\r\n        ttsAudioFormat: string\r\n    };\r\n    version: number;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class HeaderNames {\r\n    public static AuthKey: string = \"Ocp-Apim-Subscription-Key\";\r\n    public static ConnectionId: string = \"X-ConnectionId\";\r\n    public static ContentType: string = \"Content-Type\";\r\n    public static CustomCommandsAppId: string = \"X-CommandsAppId\";\r\n    public static Path: string = \"Path\";\r\n    public static RequestId: string = \"X-RequestId\";\r\n    public static RequestStreamId: string = \"X-StreamId\";\r\n    public static RequestTimestamp: string = \"X-Timestamp\";\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError, ConnectionMessage, IStringDictionary, MessageType } from \"../common/Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\n\r\nexport class SpeechConnectionMessage extends ConnectionMessage {\r\n\r\n    private privPath: string;\r\n    private privRequestId: string;\r\n    private privContentType: string;\r\n    private privStreamId: string;\r\n    private privAdditionalHeaders: IStringDictionary<string>;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        path: string,\r\n        requestId: string,\r\n        contentType: string,\r\n        body: any,\r\n        streamId?: string,\r\n        additionalHeaders?: IStringDictionary<string>,\r\n        id?: string) {\r\n\r\n        if (!path) {\r\n            throw new ArgumentNullError(\"path\");\r\n        }\r\n\r\n        if (!requestId) {\r\n            throw new ArgumentNullError(\"requestId\");\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        headers[HeaderNames.Path] = path;\r\n        headers[HeaderNames.RequestId] = requestId;\r\n        headers[HeaderNames.RequestTimestamp] = new Date().toISOString();\r\n        if (contentType) {\r\n            headers[HeaderNames.ContentType] = contentType;\r\n        }\r\n\r\n        if (streamId) {\r\n            headers[HeaderNames.RequestStreamId] = streamId;\r\n        }\r\n\r\n        if (additionalHeaders) {\r\n            for (const headerName in additionalHeaders) {\r\n                if (headerName) {\r\n                    headers[headerName] = additionalHeaders[headerName];\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (id) {\r\n            super(messageType, body, headers, id);\r\n        } else {\r\n            super(messageType, body, headers);\r\n        }\r\n\r\n        this.privPath = path;\r\n        this.privRequestId = requestId;\r\n        this.privContentType = contentType;\r\n        this.privStreamId = streamId;\r\n        this.privAdditionalHeaders = additionalHeaders;\r\n    }\r\n\r\n    public get path(): string {\r\n        return this.privPath;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get contentType(): string {\r\n        return this.privContentType;\r\n    }\r\n\r\n    public get streamId(): string {\r\n        return this.privStreamId;\r\n    }\r\n\r\n    public get additionalHeaders(): IStringDictionary<string> {\r\n        return this.privAdditionalHeaders;\r\n    }\r\n\r\n    public static fromConnectionMessage = (message: ConnectionMessage): SpeechConnectionMessage => {\r\n        let path = null;\r\n        let requestId = null;\r\n        let contentType = null;\r\n        let requestTimestamp = null;\r\n        let streamId = null;\r\n        const additionalHeaders: IStringDictionary<string> = {};\r\n\r\n        if (message.headers) {\r\n            for (const headerName in message.headers) {\r\n                if (headerName) {\r\n                    if (headerName.toLowerCase() === HeaderNames.Path.toLowerCase()) {\r\n                        path = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.RequestId.toLowerCase()) {\r\n                        requestId = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.RequestTimestamp.toLowerCase()) {\r\n                        requestTimestamp = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.ContentType.toLowerCase()) {\r\n                        contentType = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.RequestStreamId.toLowerCase()) {\r\n                        streamId = message.headers[headerName];\r\n                    } else {\r\n                        additionalHeaders[headerName] = message.headers[headerName];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return new SpeechConnectionMessage(\r\n            message.messageType,\r\n            path,\r\n            requestId,\r\n            contentType,\r\n            message.body,\r\n            streamId,\r\n            additionalHeaders,\r\n            message.id);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n    ConnectionClosedEvent,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    EventSource,\r\n    IAudioDestination,\r\n    IConnection,\r\n    IDisposable,\r\n    MessageType,\r\n    ServiceEvent,\r\n} from \"../common/Exports\";\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechSynthesisBookmarkEventArgs,\r\n    SpeechSynthesisEventArgs,\r\n    SpeechSynthesisResult,\r\n    SpeechSynthesisVisemeEventArgs,\r\n    SpeechSynthesisWordBoundaryEventArgs,\r\n    SpeechSynthesizer,\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    AgentConfig,\r\n    CancellationErrorCodePropertyName,\r\n    ISynthesisConnectionFactory,\r\n    MetadataType,\r\n    SynthesisAudioMetadata,\r\n    SynthesisContext,\r\n    SynthesisTurn,\r\n    SynthesizerConfig\r\n} from \"./Exports\";\r\nimport { AuthInfo, IAuthentication } from \"./IAuthentication\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\nexport class SynthesisAdapterBase implements IDisposable {\r\n    protected privSynthesisTurn: SynthesisTurn;\r\n    protected privConnectionId: string;\r\n    protected privSynthesizerConfig: SynthesizerConfig;\r\n    protected privSpeechSynthesizer: SpeechSynthesizer;\r\n    protected privSuccessCallback: (e: SpeechSynthesisResult) => void;\r\n    protected privErrorCallback: (e: string) => void;\r\n\r\n    public get synthesisContext(): SynthesisContext {\r\n        return this.privSynthesisContext;\r\n    }\r\n\r\n    public get agentConfig(): AgentConfig {\r\n        return this.privAgentConfig;\r\n    }\r\n\r\n    public get connectionEvents(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionEvents;\r\n    }\r\n\r\n    public get serviceEvents(): EventSource<ServiceEvent> {\r\n        return this.privServiceEvents;\r\n    }\r\n\r\n    protected speakOverride: (ssml: string, requestId: string, sc: (e: SpeechSynthesisResult) => void, ec: (e: string) => void) => any = undefined;\r\n\r\n    // Called when telemetry data is sent to the service.\r\n    // Used for testing Telemetry capture.\r\n    public static telemetryData: (json: string) => void;\r\n    public static telemetryDataEnabled: boolean = true;\r\n\r\n    public set activityTemplate(messagePayload: string) { this.privActivityTemplate = messagePayload; }\r\n    public get activityTemplate(): string { return this.privActivityTemplate; }\r\n\r\n    protected receiveMessageOverride: () => any = undefined;\r\n\r\n    protected connectImplOverride: (isUnAuthorized: boolean) => any = undefined;\r\n\r\n    protected configConnectionOverride: (connection: IConnection) => any = undefined;\r\n\r\n    public set audioOutputFormat(format: AudioOutputFormatImpl) {\r\n        this.privAudioOutputFormat = format;\r\n        this.privSynthesisTurn.audioOutputFormat = format;\r\n        if (this.privSessionAudioDestination !== undefined) {\r\n            this.privSessionAudioDestination.format = format;\r\n        }\r\n        if (this.synthesisContext !== undefined) {\r\n            this.synthesisContext.audioOutputFormat = format;\r\n        }\r\n    }\r\n    private privAuthentication: IAuthentication;\r\n    private privConnectionFactory: ISynthesisConnectionFactory;\r\n\r\n    // A promise for a configured connection.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionConfigurationPromise: Promise<IConnection>;\r\n\r\n    // A promise for a connection, but one that has not had the speech context sent yet.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionPromise: Promise<IConnection>;\r\n    private privAuthFetchEventId: string;\r\n    private privIsDisposed: boolean;\r\n    private privConnectionEvents: EventSource<ConnectionEvent>;\r\n    private privServiceEvents: EventSource<ServiceEvent>;\r\n    private privSynthesisContext: SynthesisContext;\r\n    private privAgentConfig: AgentConfig;\r\n    private privServiceHasSentMessage: boolean;\r\n    private privActivityTemplate: string;\r\n    private privAudioOutputFormat: AudioOutputFormatImpl;\r\n    private privSessionAudioDestination: IAudioDestination;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        synthesizerConfig: SynthesizerConfig,\r\n        speechSynthesizer: SpeechSynthesizer,\r\n        audioDestination: IAudioDestination) {\r\n\r\n        if (!authentication) {\r\n            throw new ArgumentNullError(\"authentication\");\r\n        }\r\n\r\n        if (!connectionFactory) {\r\n            throw new ArgumentNullError(\"connectionFactory\");\r\n        }\r\n\r\n        if (!synthesizerConfig) {\r\n            throw new ArgumentNullError(\"synthesizerConfig\");\r\n        }\r\n\r\n        this.privAuthentication = authentication;\r\n        this.privConnectionFactory = connectionFactory;\r\n        this.privSynthesizerConfig = synthesizerConfig;\r\n        this.privIsDisposed = false;\r\n        this.privSpeechSynthesizer = speechSynthesizer;\r\n        this.privSessionAudioDestination = audioDestination;\r\n        this.privSynthesisTurn = new SynthesisTurn();\r\n        this.privConnectionEvents = new EventSource<ConnectionEvent>();\r\n        this.privServiceEvents = new EventSource<ServiceEvent>();\r\n        this.privSynthesisContext = new SynthesisContext(this.privSpeechSynthesizer);\r\n        this.privAgentConfig = new AgentConfig();\r\n\r\n        this.connectionEvents.attach((connectionEvent: ConnectionEvent): void => {\r\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                const connectionClosedEvent = connectionEvent as ConnectionClosedEvent;\r\n                if (connectionClosedEvent.statusCode !== 1000) {\r\n                    this.cancelSynthesisLocal(CancellationReason.Error,\r\n                        connectionClosedEvent.statusCode === 1007 ? CancellationErrorCode.BadRequestParameters : CancellationErrorCode.ConnectionFailure,\r\n                        connectionClosedEvent.reason + \" websocket error code: \" + connectionClosedEvent.statusCode);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public static addHeader(audio: ArrayBuffer, format: AudioOutputFormatImpl): ArrayBuffer {\r\n        if (!format.hasHeader) {\r\n            return audio;\r\n        }\r\n        format.updateHeader(audio.byteLength);\r\n        const tmp = new Uint8Array(audio.byteLength + format.header.byteLength);\r\n        tmp.set(new Uint8Array(format.header), 0);\r\n        tmp.set(new Uint8Array(audio), format.header.byteLength);\r\n        return tmp.buffer;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        this.privIsDisposed = true;\r\n        if (this.privSessionAudioDestination !== undefined) {\r\n            this.privSessionAudioDestination.close();\r\n        }\r\n        if (this.privConnectionConfigurationPromise) {\r\n            const connection: IConnection = await this.privConnectionConfigurationPromise;\r\n            await connection.dispose(reason);\r\n        }\r\n    }\r\n\r\n    public async connect(): Promise<void> {\r\n        await this.connectImpl();\r\n    }\r\n\r\n    public async sendNetworkMessage(path: string, payload: string | ArrayBuffer): Promise<void> {\r\n        const type: MessageType = typeof payload === \"string\" ? MessageType.Text : MessageType.Binary;\r\n        const contentType: string = typeof payload === \"string\" ? \"application/json\" : \"\";\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        return connection.send(new SpeechConnectionMessage(type, path, this.privSynthesisTurn.requestId, contentType, payload));\r\n    }\r\n\r\n    public async Speak(\r\n        text: string,\r\n        isSSML: boolean,\r\n        requestId: string,\r\n        successCallback: (e: SpeechSynthesisResult) => void,\r\n        errorCallBack: (e: string) => void,\r\n        audioDestination: IAudioDestination,\r\n    ): Promise<void> {\r\n\r\n        let ssml: string;\r\n\r\n        if (isSSML) {\r\n            ssml = text;\r\n        } else {\r\n            ssml = this.privSpeechSynthesizer.buildSsml(text);\r\n        }\r\n\r\n        if (this.speakOverride !== undefined) {\r\n            return this.speakOverride(ssml, requestId, successCallback, errorCallBack);\r\n        }\r\n\r\n        this.privSuccessCallback = successCallback;\r\n        this.privErrorCallback = errorCallBack;\r\n\r\n        this.privSynthesisTurn.startNewSynthesis(requestId, text, isSSML, audioDestination);\r\n\r\n        try {\r\n            await this.connectImpl();\r\n            const connection: IConnection = await this.fetchConnection();\r\n            await this.sendSynthesisContext(connection);\r\n            await this.sendSsmlMessage(connection, ssml, requestId);\r\n            const synthesisStartEventArgs: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(\r\n                new SpeechSynthesisResult(\r\n                    requestId,\r\n                    ResultReason.SynthesizingAudioStarted,\r\n                )\r\n            );\r\n\r\n            if (!!this.privSpeechSynthesizer.synthesisStarted) {\r\n                this.privSpeechSynthesizer.synthesisStarted(this.privSpeechSynthesizer, synthesisStartEventArgs);\r\n            }\r\n\r\n            const messageRetrievalPromise = this.receiveMessage();\r\n        } catch (e) {\r\n            this.cancelSynthesisLocal(CancellationReason.Error, CancellationErrorCode.ConnectionFailure, e);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    // Cancels synthesis.\r\n    protected cancelSynthesis(\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n        const result: SpeechSynthesisResult = new SpeechSynthesisResult(\r\n            requestId,\r\n            ResultReason.Canceled,\r\n            undefined,\r\n            error,\r\n            properties\r\n        );\r\n\r\n        if (!!this.privSpeechSynthesizer.SynthesisCanceled) {\r\n            const cancelEvent: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(result);\r\n            try {\r\n                this.privSpeechSynthesizer.SynthesisCanceled(this.privSpeechSynthesizer, cancelEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    // Cancels synthesis.\r\n    protected cancelSynthesisLocal(\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        if (!!this.privSynthesisTurn.isSynthesizing) {\r\n            this.privSynthesisTurn.onStopSynthesizing();\r\n\r\n            this.cancelSynthesis(\r\n                this.privSynthesisTurn.requestId,\r\n                cancellationReason,\r\n                errorCode,\r\n                error);\r\n        }\r\n    }\r\n\r\n    protected processTypeSpecificMessages(\r\n        connectionMessage: SpeechConnectionMessage,\r\n        successCallback?: (e: SpeechSynthesisResult) => void,\r\n        errorCallBack?: (e: string) => void): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected async receiveMessage(): Promise<void> {\r\n        try {\r\n            const connection: IConnection = await this.fetchConnection();\r\n            const message: ConnectionMessage = await connection.read();\r\n\r\n            if (this.receiveMessageOverride !== undefined) {\r\n                return this.receiveMessageOverride();\r\n            }\r\n            if (this.privIsDisposed) {\r\n                // We're done.\r\n                return;\r\n            }\r\n\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!message) {\r\n                if (!this.privSynthesisTurn.isSynthesizing) {\r\n                    return;\r\n                } else {\r\n                    return this.receiveMessage();\r\n                }\r\n            }\r\n\r\n            this.privServiceHasSentMessage = true;\r\n\r\n            const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\r\n\r\n            if (connectionMessage.requestId.toLowerCase() === this.privSynthesisTurn.requestId.toLowerCase()) {\r\n                switch (connectionMessage.path.toLowerCase()) {\r\n                    case \"turn.start\":\r\n                        this.privSynthesisTurn.onServiceTurnStartResponse();\r\n                        break;\r\n                    case \"response\":\r\n                        this.privSynthesisTurn.onServiceResponseMessage(connectionMessage.textBody);\r\n                        break;\r\n                    case \"audio\":\r\n                        if (this.privSynthesisTurn.streamId.toLowerCase() === connectionMessage.streamId.toLowerCase()\r\n                            && !!connectionMessage.binaryBody) {\r\n                            this.privSynthesisTurn.onAudioChunkReceived(connectionMessage.binaryBody);\r\n                            if (!!this.privSpeechSynthesizer.synthesizing) {\r\n                                try {\r\n                                    const audioWithHeader = SynthesisAdapterBase.addHeader(connectionMessage.binaryBody, this.privSynthesisTurn.audioOutputFormat);\r\n                                    const ev: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(\r\n                                        new SpeechSynthesisResult(\r\n                                            this.privSynthesisTurn.requestId,\r\n                                            ResultReason.SynthesizingAudio,\r\n                                            audioWithHeader));\r\n                                    this.privSpeechSynthesizer.synthesizing(this.privSpeechSynthesizer, ev);\r\n                                } catch (error) {\r\n                                    // Not going to let errors in the event handler\r\n                                    // trip things up.\r\n                                }\r\n                            }\r\n                            if (this.privSessionAudioDestination !== undefined) {\r\n                                this.privSessionAudioDestination.write(connectionMessage.binaryBody);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"audio.metadata\":\r\n                        const metadataList = SynthesisAudioMetadata.fromJSON(connectionMessage.textBody).Metadata;\r\n                        for (const metadata of metadataList) {\r\n                            switch (metadata.Type) {\r\n                                case MetadataType.WordBoundary:\r\n                                    this.privSynthesisTurn.onWordBoundaryEvent(metadata.Data.text.Text);\r\n\r\n                                    const wordBoundaryEventArgs: SpeechSynthesisWordBoundaryEventArgs = new SpeechSynthesisWordBoundaryEventArgs(\r\n                                        metadata.Data.Offset,\r\n                                        metadata.Data.text.Text,\r\n                                        metadata.Data.text.Length,\r\n                                        this.privSynthesisTurn.currentTextOffset);\r\n\r\n                                    if (!!this.privSpeechSynthesizer.wordBoundary) {\r\n                                        try {\r\n                                            this.privSpeechSynthesizer.wordBoundary(this.privSpeechSynthesizer, wordBoundaryEventArgs);\r\n                                        } catch (error) {\r\n                                            // Not going to let errors in the event handler\r\n                                            // trip things up.\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case MetadataType.Bookmark:\r\n                                    const bookmarkEventArgs: SpeechSynthesisBookmarkEventArgs = new SpeechSynthesisBookmarkEventArgs(\r\n                                        metadata.Data.Offset,\r\n                                        metadata.Data.Bookmark);\r\n\r\n                                    if (!!this.privSpeechSynthesizer.bookmarkReached) {\r\n                                        try {\r\n                                            this.privSpeechSynthesizer.bookmarkReached(this.privSpeechSynthesizer, bookmarkEventArgs);\r\n                                        } catch (error) {\r\n                                            // Not going to let errors in the event handler\r\n                                            // trip things up.\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case MetadataType.Viseme:\r\n\r\n                                    this.privSynthesisTurn.onVisemeMetadataReceived(metadata);\r\n\r\n                                    if (metadata.Data.IsLastAnimation) {\r\n                                        const visemeEventArgs: SpeechSynthesisVisemeEventArgs = new SpeechSynthesisVisemeEventArgs(\r\n                                            metadata.Data.Offset,\r\n                                            metadata.Data.VisemeId,\r\n                                            this.privSynthesisTurn.getAndClearVisemeAnimation());\r\n\r\n                                        if (!!this.privSpeechSynthesizer.visemeReceived) {\r\n                                            try {\r\n                                                this.privSpeechSynthesizer.visemeReceived(this.privSpeechSynthesizer, visemeEventArgs);\r\n                                            } catch (error) {\r\n                                                // Not going to let errors in the event handler\r\n                                                // trip things up.\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"turn.end\":\r\n                        this.privSynthesisTurn.onServiceTurnEndResponse();\r\n                        let result: SpeechSynthesisResult;\r\n                        try {\r\n                            const audioBuffer: ArrayBuffer = await this.privSynthesisTurn.getAllReceivedAudioWithHeader();\r\n                            result = new SpeechSynthesisResult(\r\n                                this.privSynthesisTurn.requestId,\r\n                                ResultReason.SynthesizingAudioCompleted,\r\n                                audioBuffer\r\n                            );\r\n                            if (!!this.privSuccessCallback) {\r\n                                this.privSuccessCallback(result);\r\n                            }\r\n                        } catch (error) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(error);\r\n                            }\r\n                        }\r\n                        if (this.privSpeechSynthesizer.synthesisCompleted) {\r\n                            try {\r\n                                this.privSpeechSynthesizer.synthesisCompleted(\r\n                                    this.privSpeechSynthesizer,\r\n                                    new SpeechSynthesisEventArgs(result)\r\n                                );\r\n                            } catch (e) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n\r\n                        if (!this.processTypeSpecificMessages(connectionMessage)) {\r\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\r\n                            if (!!this.privServiceEvents) {\r\n                                this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\r\n                            }\r\n                        }\r\n\r\n                }\r\n            }\r\n\r\n            return this.receiveMessage();\r\n\r\n        } catch (e) {\r\n            // TODO: What goes here?\r\n        }\r\n    }\r\n\r\n    protected sendSynthesisContext = (connection: IConnection): Promise<void> => {\r\n        const synthesisContextJson = this.synthesisContext.toJSON();\r\n\r\n        if (synthesisContextJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"synthesis.context\",\r\n                this.privSynthesisTurn.requestId,\r\n                \"application/json\",\r\n                synthesisContextJson));\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected connectImpl(isUnAuthorized: boolean = false): Promise<IConnection> {\r\n        if (this.privConnectionPromise) {\r\n            return this.privConnectionPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionPromise = null;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.connectImpl();\r\n                }\r\n                return this.privConnectionPromise;\r\n            }, (error: string): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionPromise = null;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.connectImpl();\r\n            });\r\n        }\r\n        this.privAuthFetchEventId = createNoDashGuid();\r\n        this.privConnectionId = createNoDashGuid();\r\n\r\n        this.privSynthesisTurn.onPreConnectionStart(this.privAuthFetchEventId, this.privConnectionId);\r\n\r\n        const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\r\n\r\n        this.privConnectionPromise = authPromise.then(async (result: AuthInfo) => {\r\n            await this.privSynthesisTurn.onAuthCompleted(false);\r\n\r\n            const connection: IConnection = this.privConnectionFactory.create(this.privSynthesizerConfig, result, this.privConnectionId);\r\n\r\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\r\n            // it'll stop sending events.\r\n            connection.events.attach((event: ConnectionEvent) => {\r\n                this.connectionEvents.onEvent(event);\r\n            });\r\n            const response = await connection.open();\r\n            if (response.statusCode === 200) {\r\n                await this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode);\r\n                return Promise.resolve(connection);\r\n            } else if (response.statusCode === 403 && !isUnAuthorized) {\r\n                return this.connectImpl(true);\r\n            } else {\r\n                await this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode, response.reason);\r\n                return Promise.reject(`Unable to contact server. StatusCode: ${response.statusCode}, ${this.privSynthesizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint)} Reason: ${response.reason}`);\r\n            }\r\n        }, async (error: string): Promise<IConnection> => {\r\n            await this.privSynthesisTurn.onAuthCompleted(true, error);\r\n            throw new Error(error);\r\n        });\r\n\r\n        // Attach an empty handler to allow the promise to run in the background while\r\n        // other startup events happen. It'll eventually be awaited on.\r\n        this.privConnectionPromise.catch(() => { });\r\n\r\n        return this.privConnectionPromise;\r\n    }\r\n    protected sendSpeechServiceConfig = (connection: IConnection, SpeechServiceConfigJson: string): Promise<void> => {\r\n        if (SpeechServiceConfigJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.config\",\r\n                this.privSynthesisTurn.requestId,\r\n                \"application/json\",\r\n                SpeechServiceConfigJson));\r\n        }\r\n    }\r\n\r\n    protected sendSsmlMessage = (connection: IConnection, ssml: string, requestId: string): Promise<void> => {\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"ssml\",\r\n            requestId,\r\n            \"application/ssml+xml\",\r\n            ssml));\r\n    }\r\n\r\n    private async fetchConnection(): Promise<IConnection> {\r\n        if (this.privConnectionConfigurationPromise) {\r\n            return this.privConnectionConfigurationPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionConfigurationPromise = null;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.fetchConnection();\r\n                }\r\n                return this.privConnectionConfigurationPromise;\r\n            }, (error: string): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionConfigurationPromise = null;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.fetchConnection();\r\n            });\r\n        }\r\n        this.privConnectionConfigurationPromise = this.configureConnection();\r\n        return await this.privConnectionConfigurationPromise;\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\r\n    private async configureConnection(): Promise<IConnection> {\r\n        const connection: IConnection = await this.connectImpl();\r\n        if (this.configConnectionOverride !== undefined) {\r\n            return this.configConnectionOverride(connection);\r\n        }\r\n        await this.sendSpeechServiceConfig(connection, this.privSynthesizerConfig.SpeechServiceConfig.serialize());\r\n        return connection;\r\n    }\r\n}\r\n","\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    EventType,\r\n    PlatformEvent\r\n} from \"./Exports\";\r\n\r\nexport class BackgroundEvent extends PlatformEvent {\r\n    private privError: string;\r\n\r\n    constructor(error: string) {\r\n        super(\"BackgroundEvent\", EventType.Error);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Define Speech Recognizer output formats.\r\n * @class OutputFormat\r\n */\r\nexport enum OutputFormat {\r\n    /**\r\n     * @member OutputFormat.Simple\r\n     */\r\n    Simple = 0,\r\n\r\n    /**\r\n     * @member OutputFormat.Detailed\r\n     */\r\n    Detailed,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SynthesisAdapterBase } from \"../../common.speech/Exports\";\r\nimport {\r\n    BackgroundEvent,\r\n    createNoDashGuid,\r\n    Events,\r\n    IAudioDestination,\r\n    INumberDictionary\r\n} from \"../../common/Exports\";\r\nimport { AudioStreamFormat, IPlayer } from \"../Exports\";\r\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat\";\r\nimport { PullAudioOutputStreamImpl } from \"./AudioOutputStream\";\r\nimport { AudioFormatTag } from \"./AudioStreamFormat\";\r\n\r\nconst MediaDurationPlaceholderSeconds = 60 * 30;\r\n\r\nconst AudioFormatToMimeType: INumberDictionary<string> = {\r\n    [AudioFormatTag.PCM]: \"audio/wav\",\r\n    [AudioFormatTag.MuLaw]: \"audio/x-wav\",\r\n    [AudioFormatTag.MP3]: \"audio/mpeg\",\r\n    [AudioFormatTag.OGG_OPUS]: \"audio/ogg\",\r\n    [AudioFormatTag.WEBM_OPUS]: \"audio/webm; codecs=opus\",\r\n    [AudioFormatTag.ALaw]: \"audio/x-wav\",\r\n    [AudioFormatTag.FLAC]: \"audio/flac\",\r\n};\r\n\r\n/**\r\n * Represents the speaker playback audio destination, which only works in browser.\r\n * Note: the SDK will try to use <a href=\"https://www.w3.org/TR/media-source/\">Media Source Extensions</a> to play audio.\r\n * Mp3 format has better supports on Microsoft Edge, Chrome and Safari (desktop), so, it's better to specify mp3 format for playback.\r\n * @class SpeakerAudioDestination\r\n * Updated in version 1.17.0\r\n */\r\nexport class SpeakerAudioDestination implements IAudioDestination, IPlayer {\r\n    private readonly privId: string;\r\n    private privFormat: AudioOutputFormatImpl;\r\n    private privAudio: HTMLAudioElement;\r\n    private privMediaSource: MediaSource;\r\n    private privSourceBuffer: SourceBuffer;\r\n    private privPlaybackStarted: boolean = false;\r\n    private privAudioBuffer: ArrayBuffer[];\r\n    private privAppendingToBuffer: boolean = false;\r\n    private privMediaSourceOpened: boolean = false;\r\n    private privIsClosed: boolean;\r\n    private privIsPaused: boolean;\r\n    private privAudioOutputStream: PullAudioOutputStreamImpl;\r\n    private privBytesReceived: number = 0;\r\n\r\n    public constructor(audioDestinationId?: string) {\r\n        this.privId = audioDestinationId ? audioDestinationId : createNoDashGuid();\r\n        this.privIsPaused = false;\r\n        this.privIsClosed = false;\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer, cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.privAudioBuffer !== undefined) {\r\n            this.privAudioBuffer.push(buffer);\r\n            this.updateSourceBuffer().then(() => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        } else if (this.privAudioOutputStream !== undefined) {\r\n            this.privAudioOutputStream.write(buffer);\r\n            this.privBytesReceived += buffer.byteLength;\r\n        }\r\n    }\r\n\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        this.privIsClosed = true;\r\n        if (this.privSourceBuffer !== undefined) {\r\n            this.handleSourceBufferUpdateEnd().then(() => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        } else if (this.privAudioOutputStream !== undefined) {\r\n            if ((this.privFormat.formatTag === AudioFormatTag.PCM || this.privFormat.formatTag === AudioFormatTag.MuLaw\r\n                || this.privFormat.formatTag === AudioFormatTag.ALaw) && this.privFormat.hasHeader === false) {\r\n                // tslint:disable-next-line:no-console\r\n                console.warn(`Play back is not supported for raw PCM, mulaw or alaw format without header.`);\r\n                if (!!this.onAudioEnd) {\r\n                    this.onAudioEnd(this);\r\n                }\r\n            } else {\r\n                let receivedAudio = new ArrayBuffer(this.privBytesReceived);\r\n                this.privAudioOutputStream.read(receivedAudio).then((_: number): void => {\r\n                    receivedAudio = SynthesisAdapterBase.addHeader(receivedAudio, this.privFormat);\r\n                    const audioBlob = new Blob([receivedAudio], { type: AudioFormatToMimeType[this.privFormat.formatTag] });\r\n                    this.privAudio.src = window.URL.createObjectURL(audioBlob);\r\n                    this.notifyPlayback().then(() => {\r\n                        if (!!cb) {\r\n                            cb();\r\n                        }\r\n                    }, (error: string): void => {\r\n                        if (!!err) {\r\n                            err(error);\r\n                        }\r\n                    });\r\n                }, (error: string): void => {\r\n                    if (!!err) {\r\n                        err(error);\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            // unsupported format, call onAudioEnd directly.\r\n            if (!!this.onAudioEnd) {\r\n                this.onAudioEnd(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    set format(format: AudioStreamFormat) {\r\n        if (typeof (AudioContext) !== \"undefined\" || typeof ((window as any).webkitAudioContext) !== \"undefined\") {\r\n            this.privFormat = format as AudioOutputFormatImpl;\r\n            const mimeType: string = AudioFormatToMimeType[this.privFormat.formatTag];\r\n            if (mimeType === undefined) {\r\n                // tslint:disable-next-line:no-console\r\n                console.warn(\r\n                    `Unknown mimeType for format ${AudioFormatTag[this.privFormat.formatTag]}; playback is not supported.`);\r\n\r\n            } else if (typeof (MediaSource) !== \"undefined\" && MediaSource.isTypeSupported(mimeType)) {\r\n                this.privAudio = new Audio();\r\n                this.privAudioBuffer = [];\r\n                this.privMediaSource = new MediaSource();\r\n                this.privAudio.src = URL.createObjectURL(this.privMediaSource);\r\n                this.privAudio.load();\r\n                this.privMediaSource.onsourceopen = (event: Event): void => {\r\n                    this.privMediaSourceOpened = true;\r\n                    this.privMediaSource.duration = MediaDurationPlaceholderSeconds;\r\n                    this.privSourceBuffer = this.privMediaSource.addSourceBuffer(mimeType);\r\n                    this.privSourceBuffer.onupdate = (_: Event) => {\r\n                        this.updateSourceBuffer().catch((reason: string): void => {\r\n                            Events.instance.onEvent(new BackgroundEvent(reason));\r\n                        });\r\n                    };\r\n                    this.privSourceBuffer.onupdateend = (_: Event) => {\r\n                        this.handleSourceBufferUpdateEnd().catch((reason: string): void => {\r\n                            Events.instance.onEvent(new BackgroundEvent(reason));\r\n                        });\r\n                    };\r\n                    this.privSourceBuffer.onupdatestart = (_: Event) => {\r\n                        this.privAppendingToBuffer = false;\r\n                    };\r\n                };\r\n                this.updateSourceBuffer().catch((reason: string): void => {\r\n                    Events.instance.onEvent(new BackgroundEvent(reason));\r\n                });\r\n\r\n            } else {\r\n                // tslint:disable-next-line:no-console\r\n                console.warn(\r\n                    `Format ${AudioFormatTag[this.privFormat.formatTag]} could not be played by MSE, streaming playback is not enabled.`);\r\n                this.privAudioOutputStream = new PullAudioOutputStreamImpl();\r\n                this.privAudioOutputStream.format = this.privFormat;\r\n                this.privAudio = new Audio();\r\n            }\r\n        }\r\n    }\r\n\r\n    public get volume(): number {\r\n        return this.privAudio.volume;\r\n    }\r\n\r\n    public set volume(volume: number) {\r\n        this.privAudio.volume = volume;\r\n    }\r\n\r\n    public mute(): void {\r\n        this.privAudio.muted = true;\r\n    }\r\n\r\n    public unmute(): void {\r\n        this.privAudio.muted = false;\r\n    }\r\n\r\n    public get isClosed(): boolean {\r\n        return this.privIsClosed;\r\n    }\r\n\r\n    public get currentTime(): number {\r\n        if (this.privAudio !== undefined) {\r\n            return this.privAudio.currentTime;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    public pause(): void {\r\n        if (!this.privIsPaused && this.privAudio !== undefined) {\r\n            this.privAudio.pause();\r\n            this.privIsPaused = true;\r\n        }\r\n    }\r\n\r\n    public resume(cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.privIsPaused && this.privAudio !== undefined) {\r\n            this.privAudio.play().then(() => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n            this.privIsPaused = false;\r\n        }\r\n    }\r\n\r\n    public onAudioStart: (sender: IPlayer) => void;\r\n\r\n    public onAudioEnd: (sender: IPlayer) => void;\r\n\r\n    public get internalAudio(): HTMLAudioElement {\r\n        return this.privAudio;\r\n    }\r\n\r\n    private async updateSourceBuffer(): Promise<void> {\r\n        if (this.privAudioBuffer !== undefined && (this.privAudioBuffer.length > 0) && this.sourceBufferAvailable()) {\r\n            this.privAppendingToBuffer = true;\r\n            const binary = this.privAudioBuffer.shift();\r\n            try {\r\n                this.privSourceBuffer.appendBuffer(binary);\r\n            } catch (error) {\r\n                this.privAudioBuffer.unshift(binary);\r\n                // tslint:disable-next-line:no-console\r\n                console.log(\r\n                    \"buffer filled, pausing addition of binaries until space is made\");\r\n                return;\r\n            }\r\n            await this.notifyPlayback();\r\n        } else if (this.canEndStream()) {\r\n            await this.handleSourceBufferUpdateEnd();\r\n        }\r\n    }\r\n\r\n    private async handleSourceBufferUpdateEnd(): Promise<void> {\r\n        if (this.canEndStream() && this.sourceBufferAvailable()) {\r\n            this.privMediaSource.endOfStream();\r\n            await this.notifyPlayback();\r\n        }\r\n    }\r\n\r\n    private async notifyPlayback(): Promise<void> {\r\n        if (!this.privPlaybackStarted && this.privAudio !== undefined) {\r\n            this.privPlaybackStarted = true;\r\n            if (!!this.onAudioStart) {\r\n                this.onAudioStart(this);\r\n            }\r\n            this.privAudio.onended = (): void => {\r\n                if (!!this.onAudioEnd) {\r\n                    this.onAudioEnd(this);\r\n                }\r\n            };\r\n            if (!this.privIsPaused) {\r\n                await this.privAudio.play();\r\n            }\r\n        }\r\n    }\r\n\r\n    private canEndStream(): boolean {\r\n        return (this.isClosed && this.privSourceBuffer !== undefined && (this.privAudioBuffer.length === 0)\r\n            && this.privMediaSourceOpened && !this.privAppendingToBuffer && this.privMediaSource.readyState === \"open\");\r\n    }\r\n\r\n    private sourceBufferAvailable(): boolean {\r\n        return (this.privSourceBuffer !== undefined && !this.privSourceBuffer.updating);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n/**\r\n * An abstract base class that defines callback methods (write() and close()) for\r\n * custom audio output streams).\r\n * @class PushAudioOutputStreamCallback\r\n */\r\nexport abstract class PushAudioOutputStreamCallback {\r\n\r\n    /**\r\n     * Writes audio data into the data buffer.\r\n     * @member PushAudioOutputStreamCallback.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The byte array that stores the audio data to write.\r\n     */\r\n    public abstract write(dataBuffer: ArrayBuffer): void;\r\n\r\n    /**\r\n     * Closes the audio output stream.\r\n     * @member PushAudioOutputStreamCallback.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport * as fs from \"fs\";\r\nimport { IAudioDestination } from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport { AudioStreamFormat } from \"../Exports\";\r\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat\";\r\n\r\nexport class AudioFileWriter implements IAudioDestination {\r\n    private privAudioFormat: AudioOutputFormatImpl;\r\n    private privFd: number;\r\n    private privId: string;\r\n    private privWriteStream: fs.WriteStream;\r\n\r\n    public constructor(filename: fs.PathLike) {\r\n        Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available, please use Push or PullAudioOutputStream\");\r\n        this.privFd = fs.openSync(filename, \"w\");\r\n    }\r\n\r\n    public set format(format: AudioStreamFormat) {\r\n        Contracts.throwIfNotUndefined(this.privAudioFormat, \"format is already set\");\r\n        this.privAudioFormat = format as AudioOutputFormatImpl;\r\n        let headerOffset: number = 0;\r\n        if (this.privAudioFormat.hasHeader) {\r\n            headerOffset = this.privAudioFormat.header.byteLength;\r\n        }\r\n        if (this.privFd !== undefined) {\r\n            this.privWriteStream = fs.createWriteStream(\"\", {fd: this.privFd, start: headerOffset, autoClose: false});\r\n        }\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        Contracts.throwIfNullOrUndefined(this.privAudioFormat, \"must set format before writing.\");\r\n        if (this.privWriteStream !== undefined) {\r\n            this.privWriteStream.write(new Uint8Array(buffer.slice(0)));\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        if (this.privFd !== undefined) {\r\n            this.privWriteStream.on(\"finish\", () => {\r\n                if (this.privAudioFormat.hasHeader) {\r\n                    this.privAudioFormat.updateHeader(this.privWriteStream.bytesWritten);\r\n                    fs.writeSync(this.privFd,\r\n                        new Int8Array(this.privAudioFormat.header),\r\n                        0,\r\n                        this.privAudioFormat.header.byteLength,\r\n                        0);\r\n                }\r\n                fs.closeSync(this.privFd);\r\n                this.privFd = undefined;\r\n            });\r\n            this.privWriteStream.end();\r\n        }\r\n    }\r\n\r\n    public id = (): string => {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { PathLike } from \"fs\";\r\nimport {\r\n    FileAudioSource,\r\n    MicAudioSource,\r\n    PcmRecorder,\r\n} from \"../../common.browser/Exports\";\r\nimport { ISpeechConfigAudioDevice } from \"../../common.speech/Exports\";\r\nimport {\r\n    AudioSourceEvent,\r\n    Deferred,\r\n    EventSource,\r\n    IAudioDestination,\r\n    IAudioSource,\r\n    IAudioStreamNode\r\n} from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    AudioInputStream,\r\n    AudioOutputStream,\r\n    AudioStreamFormat,\r\n    IPlayer,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    PullAudioInputStreamCallback,\r\n    PullAudioOutputStream,\r\n    PushAudioOutputStream,\r\n    PushAudioOutputStreamCallback,\r\n    SpeakerAudioDestination\r\n} from \"../Exports\";\r\nimport { AudioFileWriter } from \"./AudioFileWriter\";\r\nimport { PullAudioInputStreamImpl, PushAudioInputStreamImpl } from \"./AudioInputStream\";\r\nimport { PullAudioOutputStreamImpl, PushAudioOutputStreamImpl } from \"./AudioOutputStream\";\r\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat\";\r\n\r\n/**\r\n * Represents audio input configuration used for specifying what type of input to use (microphone, file, stream).\r\n * @class AudioConfig\r\n * Updated in version 1.11.0\r\n */\r\nexport abstract class AudioConfig {\r\n    /**\r\n     * Creates an AudioConfig object representing the default microphone on the system.\r\n     * @member AudioConfig.fromDefaultMicrophoneInput\r\n     * @function\r\n     * @public\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromDefaultMicrophoneInput(): AudioConfig {\r\n        const pcmRecorder = new PcmRecorder(true);\r\n        return new AudioConfigImpl(new MicAudioSource(pcmRecorder));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing a microphone with the specified device ID.\r\n     * @member AudioConfig.fromMicrophoneInput\r\n     * @function\r\n     * @public\r\n     * @param {string | undefined} deviceId - Specifies the device ID of the microphone to be used.\r\n     *        Default microphone is used the value is omitted.\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromMicrophoneInput(deviceId?: string): AudioConfig {\r\n        const pcmRecorder = new PcmRecorder(true);\r\n        return new AudioConfigImpl(new MicAudioSource(pcmRecorder, deviceId));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the specified file.\r\n     * @member AudioConfig.fromWavFileInput\r\n     * @function\r\n     * @public\r\n     * @param {File} fileName - Specifies the audio input file. Currently, only WAV / PCM is supported.\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromWavFileInput(file: File | Buffer, name: string = \"unnamedBuffer.wav\"): AudioConfig {\r\n        return new AudioConfigImpl(new FileAudioSource(file, name));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the specified stream.\r\n     * @member AudioConfig.fromStreamInput\r\n     * @function\r\n     * @public\r\n     * @param {AudioInputStream | PullAudioInputStreamCallback | MediaStream} audioStream - Specifies the custom audio input\r\n     *        stream. Currently, only WAV / PCM is supported.\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromStreamInput(audioStream: AudioInputStream | PullAudioInputStreamCallback\r\n        | MediaStream): AudioConfig {\r\n        if (audioStream instanceof PullAudioInputStreamCallback) {\r\n            return new AudioConfigImpl(new PullAudioInputStreamImpl(audioStream as PullAudioInputStreamCallback));\r\n        }\r\n\r\n        if (audioStream instanceof AudioInputStream) {\r\n            return new AudioConfigImpl(audioStream as PushAudioInputStreamImpl);\r\n        }\r\n        if (typeof MediaStream !== \"undefined\" && audioStream instanceof MediaStream) {\r\n            const pcmRecorder = new PcmRecorder(false);\r\n            return new AudioConfigImpl(new MicAudioSource(pcmRecorder, null, null, audioStream));\r\n        }\r\n\r\n        throw new Error(\"Not Supported Type\");\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the default speaker.\r\n     * @member AudioConfig.fromDefaultSpeakerOutput\r\n     * @function\r\n     * @public\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.11.0\r\n     */\r\n    public static fromDefaultSpeakerOutput(): AudioConfig {\r\n        return new AudioOutputConfigImpl(new SpeakerAudioDestination());\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the custom IPlayer object.\r\n     * You can use the IPlayer object to control pause, resume, etc.\r\n     * @member AudioConfig.fromSpeakerOutput\r\n     * @function\r\n     * @public\r\n     * @param {IPlayer} player - the IPlayer object for playback.\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.12.0\r\n     */\r\n    public static fromSpeakerOutput(player?: IPlayer): AudioConfig {\r\n        if (player === undefined) {\r\n            return AudioConfig.fromDefaultSpeakerOutput();\r\n        }\r\n        if (player instanceof SpeakerAudioDestination) {\r\n            return new AudioOutputConfigImpl(player as SpeakerAudioDestination);\r\n        }\r\n\r\n        throw new Error(\"Not Supported Type\");\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing a specified output audio file\r\n     * @member AudioConfig.fromAudioFileOutput\r\n     * @function\r\n     * @public\r\n     * @param {PathLike} filename - the filename of the output audio file\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.11.0\r\n     */\r\n    public static fromAudioFileOutput(filename: PathLike): AudioConfig {\r\n        return new AudioOutputConfigImpl(new AudioFileWriter(filename));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing a specified audio output stream\r\n     * @member AudioConfig.fromStreamOutput\r\n     * @function\r\n     * @public\r\n     * @param {AudioOutputStream | PushAudioOutputStreamCallback} audioStream - Specifies the custom audio output\r\n     *        stream.\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.11.0\r\n     */\r\n    public static fromStreamOutput(audioStream: AudioOutputStream | PushAudioOutputStreamCallback): AudioConfig {\r\n        if (audioStream instanceof PushAudioOutputStreamCallback) {\r\n            return new AudioOutputConfigImpl(new PushAudioOutputStreamImpl(audioStream as PushAudioOutputStreamCallback));\r\n        }\r\n\r\n        if (audioStream instanceof PushAudioOutputStream) {\r\n            return new AudioOutputConfigImpl(audioStream as PushAudioOutputStreamImpl);\r\n        }\r\n\r\n        if (audioStream instanceof PullAudioOutputStream) {\r\n            return new AudioOutputConfigImpl(audioStream as PullAudioOutputStreamImpl);\r\n        }\r\n\r\n        throw new Error(\"Not Supported Type\");\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioConfig.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n\r\n    /**\r\n     * Sets an arbitrary property.\r\n     * @member SpeechConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string, value: string): void;\r\n\r\n    /**\r\n     * Returns the current value of an arbitrary property.\r\n     * @member SpeechConfig.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to query.\r\n     * @param {string} def - The value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public abstract getProperty(name: string, def?: string): string;\r\n\r\n}\r\n\r\n/**\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @private\r\n * @class AudioConfigImpl\r\n */\r\nexport class AudioConfigImpl extends AudioConfig implements IAudioSource {\r\n    private privSource: IAudioSource;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {IAudioSource} source - An audio source.\r\n     */\r\n    public constructor(source: IAudioSource) {\r\n        super();\r\n        this.privSource = source;\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return this.privSource.format;\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        this.privSource.turnOff().then(() => {\r\n            if (!!cb) {\r\n                cb();\r\n            }\r\n        }, (error: string) => {\r\n            if (!!err) {\r\n                err(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.id\r\n     * @function\r\n     * @public\r\n     */\r\n    public id(): string {\r\n        return this.privSource.id();\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.blob\r\n     * @function\r\n     * @public\r\n     */\r\n    public get blob(): Promise<Blob | Buffer> {\r\n        return this.privSource.blob;\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.turnOn\r\n     * @function\r\n     * @public\r\n     * @returns {Promise<void>} A promise.\r\n     */\r\n    public turnOn(): Promise<void> {\r\n        return this.privSource.turnOn();\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.attach\r\n     * @function\r\n     * @public\r\n     * @param {string} audioNodeId - The audio node id.\r\n     * @returns {Promise<IAudioStreamNode>} A promise.\r\n     */\r\n    public attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        return this.privSource.attach(audioNodeId);\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.detach\r\n     * @function\r\n     * @public\r\n     * @param {string} audioNodeId - The audio node id.\r\n     */\r\n    public detach(audioNodeId: string): void {\r\n        return this.privSource.detach(audioNodeId);\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.turnOff\r\n     * @function\r\n     * @public\r\n     * @returns {Promise<void>} A promise.\r\n     */\r\n    public turnOff(): Promise<void> {\r\n        return this.privSource.turnOff();\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.events\r\n     * @function\r\n     * @public\r\n     * @returns {EventSource<AudioSourceEvent>} An event source for audio events.\r\n     */\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privSource.events;\r\n    }\r\n\r\n    public setProperty(name: string, value: string): void {\r\n        Contracts.throwIfNull(value, \"value\");\r\n\r\n        if (undefined !== this.privSource.setProperty) {\r\n            this.privSource.setProperty(name, value);\r\n        } else {\r\n            throw new Error(\"This AudioConfig instance does not support setting properties.\");\r\n        }\r\n\r\n    }\r\n\r\n    public getProperty(name: string, def?: string): string {\r\n        if (undefined !== this.privSource.getProperty) {\r\n            return this.privSource.getProperty(name, def);\r\n        } else {\r\n            throw new Error(\"This AudioConfig instance does not support getting properties.\");\r\n        }\r\n\r\n        return def;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return this.privSource.deviceInfo;\r\n    }\r\n}\r\n\r\nexport class AudioOutputConfigImpl extends AudioConfig implements IAudioDestination {\r\n    private privDestination: IAudioDestination;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {IAudioDestination} destination - An audio destination.\r\n     */\r\n    public constructor(destination: IAudioDestination) {\r\n        super();\r\n        this.privDestination = destination;\r\n    }\r\n\r\n    public set format(format: AudioStreamFormat) {\r\n        this.privDestination.format = format;\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        this.privDestination.write(buffer);\r\n    }\r\n\r\n    public close(): void {\r\n        this.privDestination.close();\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privDestination.id();\r\n    }\r\n\r\n    public setProperty(name: string, value: string): void {\r\n        throw new Error(\"This AudioConfig instance does not support setting properties.\");\r\n    }\r\n\r\n    public getProperty(name: string, def?: string): string {\r\n        throw new Error(\"This AudioConfig instance does not support getting properties.\");\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\n\r\n/**\r\n * Represents a keyword recognition model for recognizing when\r\n * the user says a keyword to initiate further speech recognition.\r\n * @class KeywordRecognitionModel\r\n */\r\nexport class KeywordRecognitionModel {\r\n    private privDisposed: boolean = false;\r\n\r\n    /**\r\n     * Create and initializes a new instance.\r\n     * @constructor\r\n     */\r\n    private constructor() {\r\n    }\r\n\r\n    /**\r\n     * Creates a keyword recognition model using the specified filename.\r\n     * @member KeywordRecognitionModel.fromFile\r\n     * @function\r\n     * @public\r\n     * @param {string} fileName - A string that represents file name for the keyword recognition model.\r\n     *        Note, the file can point to a zip file in which case the model\r\n     *        will be extracted from the zip.\r\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n     */\r\n    public static fromFile(fileName: string): KeywordRecognitionModel {\r\n        Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\r\n\r\n        throw new Error(\"Not yet implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Creates a keyword recognition model using the specified filename.\r\n     * @member KeywordRecognitionModel.fromStream\r\n     * @function\r\n     * @public\r\n     * @param {string} file - A File that represents file for the keyword recognition model.\r\n     *        Note, the file can point to a zip file in which case the model will be extracted from the zip.\r\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n     */\r\n    public static fromStream(file: File): KeywordRecognitionModel {\r\n        Contracts.throwIfNull(file, \"file\");\r\n\r\n        throw new Error(\"Not yet implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member KeywordRecognitionModel.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposed = true;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines content for session events like SessionStarted/Stopped, SoundStarted/Stopped.\r\n * @class SessionEventArgs\r\n */\r\nexport class SessionEventArgs {\r\n    private privSessionId: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(sessionId: string) {\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    /**\r\n     * Represents the session identifier.\r\n     * @member SessionEventArgs.prototype.sessionId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Represents the session identifier.\r\n     */\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SessionEventArgs } from \"./Exports\";\r\n\r\n/**\r\n * Defines payload for session events like Speech Start/End Detected\r\n * @class\r\n */\r\nexport class RecognitionEventArgs extends SessionEventArgs {\r\n    private privOffset: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(offset: number, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privOffset = offset;\r\n    }\r\n\r\n    /**\r\n     * Represents the message offset\r\n     * @member RecognitionEventArgs.prototype.offset\r\n     * @function\r\n     * @public\r\n     */\r\n    public get offset(): number {\r\n        return this.privOffset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IntentRecognitionResult, RecognitionEventArgs } from \"./Exports\";\r\n\r\n/**\r\n * Intent recognition result event arguments.\r\n * @class\r\n */\r\nexport class IntentRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: IntentRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param result - The result of the intent recognition.\r\n     * @param offset - The offset.\r\n     * @param sessionId - The session id.\r\n     */\r\n    public constructor(result: IntentRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Represents the intent recognition result.\r\n     * @member IntentRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {IntentRecognitionResult} Represents the intent recognition result.\r\n     */\r\n    public get result(): IntentRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Profanity option.\r\n * Added in version 1.7.0.\r\n */\r\nexport enum ProfanityOption {\r\n    Masked = 0,\r\n    Removed = 1,\r\n    Raw = 2\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason } from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech recognition.\r\n * @class RecognitionResult\r\n */\r\nexport class RecognitionResult {\r\n    private privResultId: string;\r\n    private privReason: ResultReason;\r\n    private privText: string;\r\n    private privDuration: number;\r\n    private privOffset: number;\r\n    private privLanguage: string;\r\n    private privLanguageDetectionConfidence: string;\r\n    private privErrorDetails: string;\r\n    private privJson: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} language - Primary Language detected, if provided.\r\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    constructor(resultId?: string, reason?: ResultReason, text?: string, duration?: number,\r\n                offset?: number, language?: string, languageDetectionConfidence?: string, errorDetails?: string, json?: string, properties?: PropertyCollection) {\r\n        this.privResultId = resultId;\r\n        this.privReason = reason;\r\n        this.privText = text;\r\n        this.privDuration = duration;\r\n        this.privOffset = offset;\r\n        this.privLanguage = language;\r\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privJson = json;\r\n        this.privProperties = properties;\r\n    }\r\n\r\n    /**\r\n     * Specifies the result identifier.\r\n     * @member RecognitionResult.prototype.resultId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Specifies the result identifier.\r\n     */\r\n    public get resultId(): string {\r\n        return this.privResultId;\r\n    }\r\n\r\n    /**\r\n     * Specifies status of the result.\r\n     * @member RecognitionResult.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {ResultReason} Specifies status of the result.\r\n     */\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * Presents the recognized text in the result.\r\n     * @member RecognitionResult.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} Presents the recognized text in the result.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n\r\n    /**\r\n     * Duration of recognized speech in 100 nano second increments.\r\n     * @member RecognitionResult.prototype.duration\r\n     * @function\r\n     * @public\r\n     * @returns {number} Duration of recognized speech in 100 nano second increments.\r\n     */\r\n    public get duration(): number {\r\n        return this.privDuration;\r\n    }\r\n\r\n    /**\r\n     * Offset of recognized speech in 100 nano second increments.\r\n     * @member RecognitionResult.prototype.offset\r\n     * @function\r\n     * @public\r\n     * @returns {number} Offset of recognized speech in 100 nano second increments.\r\n     */\r\n    public get offset(): number {\r\n        return this.privOffset;\r\n    }\r\n\r\n    /**\r\n     * Primary Language detected.\r\n     * @member RecognitionResult.prototype.language\r\n     * @function\r\n     * @public\r\n     * @returns {string} language detected.\r\n     */\r\n    public get language(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    /**\r\n     * Primary Language detection confidence (Unknown, Low, Medium, High).\r\n     * @member RecognitionResult.prototype.languageDetectionConfidence\r\n     * @function\r\n     * @public\r\n     * @returns {string} detection confidence strength.\r\n     */\r\n    public get languageDetectionConfidence(): string {\r\n        return this.privLanguageDetectionConfidence;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member RecognitionResult.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} a brief description of an error.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     * A string containing Json serialized recognition result as it was received from the service.\r\n     * @member RecognitionResult.prototype.json\r\n     * @function\r\n     * @private\r\n     * @returns {string} Json serialized representation of the result.\r\n     */\r\n    public get json(): string {\r\n        return this.privJson;\r\n    }\r\n\r\n    /**\r\n     *  The set of properties exposed in the result.\r\n     * @member RecognitionResult.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The set of properties exposed in the result.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, RecognitionResult, ResultReason } from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech recognition.\r\n * @class SpeechRecognitionResult\r\n */\r\nexport class SpeechRecognitionResult extends RecognitionResult {\r\n    private readonly privSpeakerId: string;\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @public\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} language - Primary Language detected, if provided.\r\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param {string} speakerId - speaker id for conversation transcription, if provided.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(resultId?: string, reason?: ResultReason, text?: string,\r\n                       duration?: number, offset?: number, language?: string,\r\n                       languageDetectionConfidence?: string, speakerId?: string, errorDetails?: string,\r\n                       json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\r\n        this.privSpeakerId = speakerId;\r\n    }\r\n\r\n    /**\r\n     * speaker id from conversation transcription/id scenarios\r\n     * @member SpeechRecognitionResult.prototype.speakerId\r\n     * @function\r\n     * @public\r\n     * @returns {string} id of speaker in given result\r\n     */\r\n    public get speakerId(): string {\r\n        return this.privSpeakerId;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason, SpeechRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Intent recognition result.\r\n * @class\r\n */\r\nexport class IntentRecognitionResult extends SpeechRecognitionResult {\r\n    private privIntentId: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param intentId - The intent id.\r\n     * @param resultId - The result id.\r\n     * @param reason - The reason.\r\n     * @param text - The recognized text.\r\n     * @param duration - The duration.\r\n     * @param offset - The offset into the stream.\r\n     * @param language - Primary Language detected, if provided.\r\n     * @param languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param errorDetails - Error details, if provided.\r\n     * @param json - Additional Json, if provided.\r\n     * @param properties - Additional properties, if provided.\r\n     */\r\n    constructor(intentId?: string, resultId?: string, reason?: ResultReason, text?: string,\r\n                duration?: number, offset?: number, language?: string, languageDetectionConfidence?: string,\r\n                errorDetails?: string, json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, undefined, errorDetails, json, properties);\r\n\r\n        this.privIntentId = intentId;\r\n    }\r\n\r\n    /**\r\n     * A String that represents the intent identifier being recognized.\r\n     * @member IntentRecognitionResult.prototype.intentId\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the intent identifier being recognized.\r\n     */\r\n    public get intentId(): string {\r\n        return this.privIntentId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\n\r\n/**\r\n * Language understanding model\r\n * @class LanguageUnderstandingModel\r\n */\r\nexport class LanguageUnderstandingModel {\r\n    /**\r\n     * Creates and initializes a new instance\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n    }\r\n\r\n    /**\r\n     * Creates an language understanding model using the specified endpoint.\r\n     * @member LanguageUnderstandingModel.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} uri - A String that represents the endpoint of the language understanding model.\r\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\r\n     */\r\n    public static fromEndpoint(uri: URL): LanguageUnderstandingModel {\r\n        Contracts.throwIfNull(uri, \"uri\");\r\n        Contracts.throwIfNullOrWhitespace(uri.hostname, \"uri\");\r\n\r\n        const langModelImp: LanguageUnderstandingModelImpl = new LanguageUnderstandingModelImpl();\r\n        // Need to extract the app ID from the URL.\r\n        // URL is in the format: https://<region>.api.cognitive.microsoft.com/luis/v2.0/apps/<Guid>?subscription-key=<key>&timezoneOffset=-360\r\n\r\n        // Start tearing the string apart.\r\n\r\n        // region can be extracted from the host name.\r\n        const firstDot: number = uri.host.indexOf(\".\");\r\n        if (-1 === firstDot) {\r\n            throw new Error(\"Could not determine region from endpoint\");\r\n        }\r\n        langModelImp.region = uri.host.substr(0, firstDot);\r\n\r\n        // Now the app ID.\r\n\r\n        const lastSegment: number = uri.pathname.lastIndexOf(\"/\") + 1;\r\n        if (-1 === lastSegment) {\r\n            throw new Error(\"Could not determine appId from endpoint\");\r\n        }\r\n\r\n        langModelImp.appId = uri.pathname.substr(lastSegment);\r\n\r\n        // And finally the key.\r\n        langModelImp.subscriptionKey = uri.searchParams.get(\"subscription-key\");\r\n        if (undefined === langModelImp.subscriptionKey) {\r\n            throw new Error(\"Could not determine subscription key from endpoint\");\r\n        }\r\n\r\n        return langModelImp;\r\n    }\r\n\r\n    /**\r\n     * Creates an language understanding model using the application id of Language Understanding service.\r\n     * @member LanguageUnderstandingModel.fromAppId\r\n     * @function\r\n     * @public\r\n     * @param {string} appId - A String that represents the application id of Language Understanding service.\r\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\r\n     */\r\n    public static fromAppId(appId: string): LanguageUnderstandingModel {\r\n        Contracts.throwIfNullOrWhitespace(appId, \"appId\");\r\n\r\n        const langModelImp: LanguageUnderstandingModelImpl = new LanguageUnderstandingModelImpl();\r\n        langModelImp.appId = appId;\r\n        return langModelImp;\r\n    }\r\n\r\n    /**\r\n     * Creates a language understanding model using hostname, subscription key and application\r\n     * id of Language Understanding service.\r\n     * @member LanguageUnderstandingModel.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param {string} subscriptionKey - A String that represents the subscription key of\r\n     *        Language Understanding service.\r\n     * @param {string} appId - A String that represents the application id of Language\r\n     *        Understanding service.\r\n     * @param {LanguageUnderstandingModel} region - A String that represents the region\r\n     *        of the Language Understanding service (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\r\n     */\r\n    public static fromSubscription(subscriptionKey: string, appId: string, region: string): LanguageUnderstandingModel {\r\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\r\n        Contracts.throwIfNullOrWhitespace(appId, \"appId\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const langModelImp: LanguageUnderstandingModelImpl = new LanguageUnderstandingModelImpl();\r\n        langModelImp.appId = appId;\r\n        langModelImp.region = region;\r\n        langModelImp.subscriptionKey = subscriptionKey;\r\n        return langModelImp;\r\n    }\r\n}\r\n\r\n/**\r\n * @private\r\n * @class LanguageUnderstandingModelImpl\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class LanguageUnderstandingModelImpl extends LanguageUnderstandingModel {\r\n    public appId: string;\r\n    public region: string;\r\n    public subscriptionKey: string;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionEventArgs, SpeechRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Defines contents of speech recognizing/recognized event.\r\n * @class SpeechRecognitionEventArgs\r\n */\r\nexport class SpeechRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: SpeechRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: SpeechRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member SpeechRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): SpeechRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n\r\n/**\r\n * Defines contents of conversation transcribed/transcribing event.\r\n * @class ConversationTranscriptionEventArgs\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class ConversationTranscriptionEventArgs extends SpeechRecognitionEventArgs {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationEventArgs,\r\n    CancellationReason,\r\n    RecognitionEventArgs\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines content of a CancellationEvent.\r\n * @class CancellationEventArgsBase\r\n */\r\nexport class CancellationEventArgsBase extends RecognitionEventArgs implements CancellationEventArgs {\r\n    private privReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {CancellationReason} reason - The cancellation reason.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(reason: CancellationReason, errorDetails: string,\r\n                       errorCode: CancellationErrorCode, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member CancellationEventArgsBase.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful operation.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get errorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful operation, provides details of the occurred error.\r\n     * @member CancellationEventArgsBase.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationEventArgsBase,\r\n} from \"./CancellationEventArgsBase\";\r\n\r\nexport class SpeechRecognitionCanceledEventArgs extends CancellationEventArgsBase {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionEventArgs, TranslationRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Translation text result event arguments.\r\n * @class TranslationRecognitionEventArgs\r\n */\r\nexport class TranslationRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: TranslationRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {TranslationRecognitionResult} result - The translation recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: TranslationRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member TranslationRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {TranslationRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): TranslationRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SessionEventArgs, TranslationSynthesisResult } from \"./Exports\";\r\n\r\n/**\r\n * Translation Synthesis event arguments\r\n * @class TranslationSynthesisEventArgs\r\n */\r\nexport class TranslationSynthesisEventArgs extends SessionEventArgs {\r\n    private privResult: TranslationSynthesisResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {TranslationSynthesisResult} result - The translation synthesis result.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: TranslationSynthesisResult, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the translation synthesis result.\r\n     * @member TranslationSynthesisEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {TranslationSynthesisResult} Specifies the translation synthesis result.\r\n     */\r\n    public get result(): TranslationSynthesisResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason, SpeechRecognitionResult, Translations } from \"./Exports\";\r\n\r\n/**\r\n * Translation text result.\r\n * @class TranslationRecognitionResult\r\n */\r\nexport class TranslationRecognitionResult extends SpeechRecognitionResult {\r\n    private privTranslations: Translations;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {Translations} translations - The translations.\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(translations: Translations, resultId?: string, reason?: ResultReason,\r\n                       text?: string, duration?: number, offset?: number, errorDetails?: string,\r\n                       json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, undefined, undefined, undefined, errorDetails, json, properties);\r\n\r\n        this.privTranslations = translations;\r\n    }\r\n\r\n    /**\r\n     * Presents the translation results. Each item in the dictionary represents\r\n     * a translation result in one of target languages, where the key is the name\r\n     * of the target language, in BCP-47 format, and the value is the translation\r\n     * text in the specified language.\r\n     * @member TranslationRecognitionResult.prototype.translations\r\n     * @function\r\n     * @public\r\n     * @returns {Translations} the current translation map that holds all translations requested.\r\n     */\r\n    public get translations(): Translations {\r\n        return this.privTranslations;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ResultReason } from \"./ResultReason\";\r\n\r\n/**\r\n * Defines translation synthesis result, i.e. the voice output of the translated\r\n * text in the target language.\r\n * @class TranslationSynthesisResult\r\n */\r\nexport class TranslationSynthesisResult {\r\n    private privReason: ResultReason;\r\n    private privAudio: ArrayBuffer;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {ResultReason} reason - The synthesis reason.\r\n     * @param {ArrayBuffer} audio - The audio data.\r\n     */\r\n    constructor(reason: ResultReason, audio: ArrayBuffer) {\r\n        this.privReason = reason;\r\n        this.privAudio = audio;\r\n    }\r\n\r\n    /**\r\n     * Translated text in the target language.\r\n     * @member TranslationSynthesisResult.prototype.audio\r\n     * @function\r\n     * @public\r\n     * @returns {ArrayBuffer} Translated audio in the target language.\r\n     */\r\n    public get audio(): ArrayBuffer {\r\n        return this.privAudio;\r\n    }\r\n\r\n    /**\r\n     * The synthesis status.\r\n     * @member TranslationSynthesisResult.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {ResultReason} The synthesis status.\r\n     */\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ForceDictationPropertyName,\r\n    OutputFormatPropertyName,\r\n    ServicePropertiesPropertyName\r\n} from \"../common.speech/Exports\";\r\nimport {IStringDictionary} from \"../common/Exports\";\r\nimport {Contracts} from \"./Contracts\";\r\nimport {\r\n    OutputFormat,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ServicePropertyChannel,\r\n    SpeechSynthesisOutputFormat,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Speech configuration.\r\n * @class SpeechConfig\r\n */\r\nexport abstract class SpeechConfig {\r\n    /**\r\n     * Creates and initializes an instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() { }\r\n\r\n    /**\r\n     * Static instance of SpeechConfig returned by passing subscriptionKey and service region.\r\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\r\n     * @member SpeechConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param {string} subscriptionKey - The subscription key.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechConfig} The speech factory\r\n     */\r\n    public static fromSubscription(subscriptionKey: string, region: string): SpeechConfig {\r\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_IntentRegion, region);\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech config with specified endpoint and subscription key.\r\n     * This method is intended only for users who use a non-standard service endpoint or parameters.\r\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\r\n     * Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.\r\n     * For example, if language is defined in the uri as query parameter \"language=de-DE\", and also set by\r\n     *              SpeechConfig.speechRecognitionLanguage = \"en-US\", the language setting in uri takes precedence,\r\n     *              and the effective language is \"de-DE\". Only the parameters that are not specified in the\r\n     *              endpoint URL can be set by other APIs.\r\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\r\n     *       fromEndpoint method, and then set authorizationToken=\"token\" on the created SpeechConfig instance to\r\n     *       use the authorization token.\r\n     * @member SpeechConfig.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} endpoint - The service endpoint to connect to.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromEndpoint(endpoint: URL, subscriptionKey?: string): SpeechConfig {\r\n        Contracts.throwIfNull(endpoint, \"endpoint\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech config with specified host and subscription key.\r\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\r\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\r\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\r\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\r\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\r\n     * Note: Added in version 1.9.0.\r\n     * @member SpeechConfig.fromHost\r\n     * @function\r\n     * @public\r\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromHost(hostName: URL, subscriptionKey?: string): SpeechConfig {\r\n        Contracts.throwIfNull(hostName, \"hostName\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech factory with specified initial authorization token and region.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     *       expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key in case you want\r\n     *       to use the Intent recognizer. As configuration values are copied when creating a new recognizer,\r\n     *       the new token value will not apply to recognizers that have already been created. For recognizers\r\n     *       that have been created before, you need to set authorization token of the corresponding recognizer\r\n     *       to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\r\n     * @member SpeechConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} authorizationToken - The initial authorization token.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromAuthorizationToken(authorizationToken: string, region: string): SpeechConfig {\r\n        Contracts.throwIfNull(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_IntentRegion, region);\r\n        speechImpl.authorizationToken = authorizationToken;\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server.\r\n     * @param proxyPort The port number of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number): void;\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\r\n     * @param proxyPort The port number of the proxy server.\r\n     * @param proxyUserName The user name of the proxy server.\r\n     * @param proxyPassword The password of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n\r\n    /**\r\n     * Gets the authorization token.\r\n     * @member SpeechConfig.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract get authorizationToken(): string;\r\n\r\n    /**\r\n     * Gets/Sets the authorization token.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * @member SpeechConfig.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set authorizationToken(value: string);\r\n\r\n    /**\r\n     * Returns the configured language.\r\n     * @member SpeechConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract get speechRecognitionLanguage(): string;\r\n\r\n    /**\r\n     * Gets/Sets the input language.\r\n     * @member SpeechConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set speechRecognitionLanguage(value: string);\r\n\r\n    /**\r\n     * Sets an arbitrary property.\r\n     * @member SpeechConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string, value: string): void;\r\n\r\n    /**\r\n     * Returns the current value of an arbitrary property.\r\n     * @member SpeechConfig.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to query.\r\n     * @param {string} def - The value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public abstract getProperty(name: string, def?: string): string;\r\n\r\n    /**\r\n     * Gets speech recognition output format (simple or detailed).\r\n     * Note: This output format is for speech recognition result, use [SpeechConfig.speechSynthesisOutputFormat] to\r\n     * get synthesized audio output format.\r\n     * @member SpeechConfig.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {OutputFormat} Returns the output format.\r\n     */\r\n    public abstract get outputFormat(): OutputFormat;\r\n\r\n    /**\r\n     * Gets/Sets speech recognition output format (simple or detailed).\r\n     * Note: This output format is for speech recognition result, use [SpeechConfig.speechSynthesisOutputFormat] to\r\n     * set synthesized audio output format.\r\n     * @member SpeechConfig.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract set outputFormat(format: OutputFormat);\r\n\r\n    /**\r\n     * Gets the endpoint ID of a customized speech model that is used for speech recognition.\r\n     * @member SpeechConfig.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @return {string} The endpoint ID\r\n     */\r\n    public abstract get endpointId(): string;\r\n\r\n    /**\r\n     * Gets/Sets the endpoint ID of a customized speech model that is used for speech recognition.\r\n     * @member SpeechConfig.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The endpoint ID\r\n     */\r\n    public abstract set endpointId(value: string);\r\n\r\n    /**\r\n     * Closes the configuration.\r\n     * @member SpeechConfig.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    /* tslint:disable:no-empty */\r\n    public close(): void { }\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.subscriptionKey\r\n     * @function\r\n     * @public\r\n     * @return {string} The subscription key set on the config.\r\n     */\r\n    public abstract get subscriptionKey(): string;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.region\r\n     * @function\r\n     * @public\r\n     * @return {region} The region set on the config.\r\n     */\r\n    public abstract get region(): string;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.setServiceProperty\r\n     * @function\r\n     * @public\r\n     * @param {name} The name of the property.\r\n     * @param {value} Value to set.\r\n     * @param {channel} The channel used to pass the specified property to service.\r\n     * @summary Sets a property value that will be passed to service using the specified channel.\r\n     * Added in version 1.7.0.\r\n     */\r\n    public abstract setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.setProfanity\r\n     * @function\r\n     * @public\r\n     * @param {profanity} Profanity option to set.\r\n     * @summary Sets profanity option.\r\n     * Added in version 1.7.0.\r\n     */\r\n    public abstract setProfanity(profanity: ProfanityOption): void;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.enableAudioLogging\r\n     * @function\r\n     * @public\r\n     * @summary Enable audio logging in service.\r\n     * Added in version 1.7.0.\r\n     */\r\n    public abstract enableAudioLogging(): void;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.requestWordLevelTimestamps\r\n     * @function\r\n     * @public\r\n     * @summary Includes word-level timestamps.\r\n     * Added in version 1.7.0.\r\n     */\r\n    public abstract requestWordLevelTimestamps(): void;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.enableDictation\r\n     * @function\r\n     * @public\r\n     * @summary Enable dictation. Only supported in speech continuous recognition.\r\n     * Added in version 1.7.0.\r\n     */\r\n    public abstract enableDictation(): void;\r\n\r\n    /**\r\n     * Gets the language of the speech synthesizer.\r\n     * @member SpeechConfig.prototype.speechSynthesisLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} Returns the speech synthesis language.\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract get speechSynthesisLanguage(): string;\r\n\r\n    /**\r\n     * Sets the language of the speech synthesizer.\r\n     * @member SpeechConfig.prototype.speechSynthesisLanguage\r\n     * @function\r\n     * @public\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract set speechSynthesisLanguage(language: string);\r\n\r\n    /**\r\n     * Gets the voice of the speech synthesizer.\r\n     * @member SpeechConfig.prototype.speechSynthesisVoiceName\r\n     * @function\r\n     * @public\r\n     * @returns {string} Returns the speech synthesis voice.\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract get speechSynthesisVoiceName(): string;\r\n\r\n    /**\r\n     * Sets the voice of the speech synthesizer. (see <a href=\"https://aka.ms/speech/tts-languages\">available voices</a>).\r\n     * @member SpeechConfig.prototype.speechSynthesisVoiceName\r\n     * @function\r\n     * @public\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract set speechSynthesisVoiceName(voice: string);\r\n\r\n    /**\r\n     * Gets the speech synthesis output format.\r\n     * @member SpeechConfig.prototype.speechSynthesisOutputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechSynthesisOutputFormat} Returns the speech synthesis output format\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract get speechSynthesisOutputFormat(): SpeechSynthesisOutputFormat;\r\n\r\n    /**\r\n     * Sets the speech synthesis output format (e.g. Riff16Khz16BitMonoPcm).\r\n     * @member SpeechConfig.prototype.speechSynthesisOutputFormat\r\n     * @function\r\n     * @public\r\n     * The default format is Audio16Khz64KBitRateMonoMp3 for browser and Riff16Khz16BitMonoPcm for Node.JS\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract set speechSynthesisOutputFormat(format: SpeechSynthesisOutputFormat);\r\n}\r\n\r\n/**\r\n * @public\r\n * @class SpeechConfigImpl\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class SpeechConfigImpl extends SpeechConfig {\r\n\r\n    private privProperties: PropertyCollection;\r\n\r\n    public constructor() {\r\n        super();\r\n        this.privProperties = new PropertyCollection();\r\n        this.speechRecognitionLanguage = \"en-US\"; // Should we have a default?\r\n        this.outputFormat = OutputFormat.Simple;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get endPoint(): URL {\r\n        return new URL(this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Endpoint));\r\n    }\r\n\r\n    public get subscriptionKey(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Key);\r\n    }\r\n\r\n    public get region(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n    }\r\n\r\n    public get authorizationToken(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    public set authorizationToken(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    public set speechRecognitionLanguage(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_RecoLanguage, value);\r\n    }\r\n\r\n    public get autoDetectSourceLanguages(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages);\r\n    }\r\n\r\n    public set autoDetectSourceLanguages(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, value);\r\n    }\r\n\r\n    public get outputFormat(): OutputFormat {\r\n        return (OutputFormat as any)[this.privProperties.getProperty(OutputFormatPropertyName, undefined)];\r\n    }\r\n\r\n    public set outputFormat(value: OutputFormat) {\r\n        this.privProperties.setProperty(OutputFormatPropertyName, OutputFormat[value]);\r\n    }\r\n\r\n    public get endpointId(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_EndpointId);\r\n    }\r\n\r\n    public set endpointId(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_EndpointId, value);\r\n    }\r\n\r\n    public setProperty(name: string | PropertyId, value: string): void {\r\n        Contracts.throwIfNull(value, \"value\");\r\n\r\n        this.privProperties.setProperty(name, value);\r\n    }\r\n\r\n    public getProperty(name: string | PropertyId, def?: string): string {\r\n\r\n        return this.privProperties.getProperty(name, def);\r\n    }\r\n\r\n    public setProxy(proxyHostName: string, proxyPort: number): void;\r\n    public setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n    public setProxy(proxyHostName: any, proxyPort: any, proxyUserName?: any, proxyPassword?: any): void {\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPort], proxyPort);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword);\r\n    }\r\n\r\n    public setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void {\r\n        const currentProperties: IStringDictionary<string> = JSON.parse(this.privProperties.getProperty(ServicePropertiesPropertyName, \"{}\"));\r\n\r\n        currentProperties[name] = value;\r\n\r\n        this.privProperties.setProperty(ServicePropertiesPropertyName, JSON.stringify(currentProperties));\r\n    }\r\n\r\n    public setProfanity(profanity: ProfanityOption): void {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_ProfanityOption, ProfanityOption[profanity]);\r\n    }\r\n\r\n    public enableAudioLogging(): void {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\r\n    }\r\n    public requestWordLevelTimestamps(): void {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\r\n    }\r\n    public enableDictation(): void {\r\n        this.privProperties.setProperty(ForceDictationPropertyName, \"true\");\r\n    }\r\n\r\n    public clone(): SpeechConfigImpl {\r\n        const ret: SpeechConfigImpl = new SpeechConfigImpl();\r\n        ret.privProperties = this.privProperties.clone();\r\n        return ret;\r\n    }\r\n\r\n    public get speechSynthesisLanguage(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage);\r\n    }\r\n\r\n    public set speechSynthesisLanguage(language: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthLanguage, language);\r\n    }\r\n\r\n    public get speechSynthesisVoiceName(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice);\r\n    }\r\n\r\n    public set speechSynthesisVoiceName(voice: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthVoice, voice);\r\n    }\r\n\r\n    public get speechSynthesisOutputFormat(): SpeechSynthesisOutputFormat {\r\n        return (SpeechSynthesisOutputFormat as any)[this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)];\r\n    }\r\n\r\n    public set speechSynthesisOutputFormat(format: SpeechSynthesisOutputFormat) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, SpeechSynthesisOutputFormat[format]);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ForceDictationPropertyName,\r\n    OutputFormatPropertyName,\r\n    ServicePropertiesPropertyName\r\n} from \"../common.speech/Exports\";\r\nimport { IStringDictionary } from \"../common/Exports\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    OutputFormat,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ServicePropertyChannel,\r\n    SpeechConfig, SpeechSynthesisOutputFormat,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Speech translation configuration.\r\n * @class SpeechTranslationConfig\r\n */\r\nexport abstract class SpeechTranslationConfig extends SpeechConfig {\r\n\r\n    /**\r\n     * Creates an instance of recognizer config.\r\n     */\r\n    protected constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Static instance of SpeechTranslationConfig returned by passing a subscription key and service region.\r\n     * @member SpeechTranslationConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param {string} subscriptionKey - The subscription key.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechTranslationConfig} The speech translation config.\r\n     */\r\n    public static fromSubscription(subscriptionKey: string, region: string): SpeechTranslationConfig {\r\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const ret: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Static instance of SpeechTranslationConfig returned by passing authorization token and service region.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     *       expires, the caller needs to refresh it by setting the property authorizationToken with a new\r\n     *       valid token. Otherwise, all the recognizers created by this SpeechTranslationConfig instance\r\n     *       will encounter errors during recognition.\r\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply\r\n     * to recognizers that have already been created.\r\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\r\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\r\n     * @member SpeechTranslationConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} authorizationToken - The authorization token.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechTranslationConfig} The speech translation config.\r\n     */\r\n    public static fromAuthorizationToken(authorizationToken: string, region: string): SpeechTranslationConfig {\r\n        Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const ret: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        ret.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech config with specified host and subscription key.\r\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\r\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\r\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\r\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\r\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\r\n     * Note: Added in version 1.9.0.\r\n     * @member SpeechConfig.fromHost\r\n     * @function\r\n     * @public\r\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromHost(hostName: URL, subscriptionKey?: string): SpeechConfig {\r\n        Contracts.throwIfNull(hostName, \"hostName\");\r\n\r\n        const speechImpl: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech translation config with specified endpoint and subscription key.\r\n     * This method is intended only for users who use a non-standard service endpoint or paramters.\r\n     * Note: The query properties specified in the endpoint URL are not changed, even if they are\r\n     *       set by any other APIs. For example, if language is defined in the uri as query parameter\r\n     *       \"language=de-DE\", and also set by the speechRecognitionLanguage property, the language\r\n     *       setting in uri takes precedence, and the effective language is \"de-DE\".\r\n     * Only the properties that are not specified in the endpoint URL can be set by other APIs.\r\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\r\n     *       fromEndpoint method, and then set authorizationToken=\"token\" on the created SpeechConfig instance to\r\n     *       use the authorization token.\r\n     * @member SpeechTranslationConfig.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} endpoint - The service endpoint to connect to.\r\n     * @param {string} subscriptionKey - The subscription key.\r\n     * @returns {SpeechTranslationConfig} A speech config instance.\r\n     */\r\n    public static fromEndpoint(endpoint: URL, subscriptionKey: string): SpeechTranslationConfig {\r\n        Contracts.throwIfNull(endpoint, \"endpoint\");\r\n        Contracts.throwIfNull(subscriptionKey, \"subscriptionKey\");\r\n\r\n        const ret: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * @member SpeechTranslationConfig.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set authorizationToken(value: string);\r\n\r\n    /**\r\n     * Gets/Sets the speech recognition language.\r\n     * @member SpeechTranslationConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set speechRecognitionLanguage(value: string);\r\n\r\n    /**\r\n     * Add a (text) target language to translate into.\r\n     * @member SpeechTranslationConfig.prototype.addTargetLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public abstract addTargetLanguage(value: string): void;\r\n\r\n    /**\r\n     * Gets the (text) target language to translate into.\r\n     * @member SpeechTranslationConfig.prototype.targetLanguages\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public abstract get targetLanguages(): string[];\r\n\r\n    /**\r\n     * Gets the selected voice name.\r\n     * @member SpeechTranslationConfig.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @returns {string} The voice name.\r\n     */\r\n    public abstract get voiceName(): string;\r\n\r\n    /**\r\n     * Gets/Sets voice of the translated language, enable voice synthesis output.\r\n     * @member SpeechTranslationConfig.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The name of the voice.\r\n     */\r\n    public abstract set voiceName(value: string);\r\n\r\n    /**\r\n     * Sets a named property as value\r\n     * @member SpeechTranslationConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property.\r\n     * @param {string} value - The value.\r\n     */\r\n    public abstract setProperty(name: string, value: string): void;\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member SpeechTranslationConfig.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * @private\r\n * @class SpeechTranslationConfigImpl\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class SpeechTranslationConfigImpl extends SpeechTranslationConfig {\r\n\r\n    private privSpeechProperties: PropertyCollection;\r\n\r\n    public constructor() {\r\n        super();\r\n        this.privSpeechProperties = new PropertyCollection();\r\n        this.outputFormat = OutputFormat.Simple;\r\n    }\r\n    /**\r\n     * Gets/Sets the authorization token.\r\n     * If this is set, subscription key is ignored.\r\n     * User needs to make sure the provided authorization token is valid and not expired.\r\n     * @member SpeechTranslationConfigImpl.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public set authorizationToken(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    /**\r\n     * Sets the speech recognition language.\r\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public set speechRecognitionLanguage(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_RecoLanguage, value);\r\n    }\r\n\r\n    /**\r\n     * Gets the speech recognition language.\r\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @return {string} The speechRecognitionLanguage.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n    }\r\n\r\n    /**\r\n     * @member SpeechTranslationConfigImpl.prototype.subscriptionKey\r\n     * @function\r\n     * @public\r\n     */\r\n    public get subscriptionKey(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Key]);\r\n    }\r\n\r\n    /**\r\n     * Gets the output format\r\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     */\r\n    public get outputFormat(): OutputFormat {\r\n        return (OutputFormat as any)[this.privSpeechProperties.getProperty(OutputFormatPropertyName, undefined)];\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the output format\r\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     */\r\n    public set outputFormat(value: OutputFormat) {\r\n        this.privSpeechProperties.setProperty(OutputFormatPropertyName, OutputFormat[value]);\r\n    }\r\n\r\n    /**\r\n     * Gets the endpoint id.\r\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     */\r\n    public get endpointId(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_EndpointId);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the endpoint id.\r\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     */\r\n    public set endpointId(value: string) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_EndpointId, value);\r\n    }\r\n\r\n    /**\r\n     * Add a (text) target language to translate into.\r\n     * @member SpeechTranslationConfigImpl.prototype.addTargetLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public addTargetLanguage(value: string): void {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n\r\n        const languages: string[] = this.targetLanguages;\r\n        languages.push(value);\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\r\n    }\r\n\r\n    /**\r\n     * Gets the (text) target language to translate into.\r\n     * @member SpeechTranslationConfigImpl.prototype.targetLanguages\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public get targetLanguages(): string[] {\r\n\r\n        if (this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\r\n            return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n        } else {\r\n            return [];\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Gets the voice name.\r\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     */\r\n    public get voiceName(): string {\r\n        return this.getProperty(PropertyId[PropertyId.SpeechServiceConnection_TranslationVoice]);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the voice of the translated language, enable voice synthesis output.\r\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The name of the voice.\r\n     */\r\n    public set voiceName(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_TranslationVoice, value);\r\n    }\r\n\r\n    /**\r\n     * Provides the region.\r\n     * @member SpeechTranslationConfigImpl.prototype.region\r\n     * @function\r\n     * @public\r\n     * @returns {string} The region.\r\n     */\r\n    public get region(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n    }\r\n\r\n    public setProxy(proxyHostName: string, proxyPort: number): void;\r\n    public setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n    public setProxy(proxyHostName: any, proxyPort: any, proxyUserName?: any, proxyPassword?: any): void {\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPort], proxyPort);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword);\r\n    }\r\n\r\n    /**\r\n     * Gets an arbitrary property value.\r\n     * @member SpeechTranslationConfigImpl.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property.\r\n     * @param {string} def - The default value of the property in case it is not set.\r\n     * @returns {string} The value of the property.\r\n     */\r\n    public getProperty(name: string, def?: string): string {\r\n        return this.privSpeechProperties.getProperty(name, def);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets an arbitrary property value.\r\n     * @member SpeechTranslationConfigImpl.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property.\r\n     * @param {string} value - The value of the property.\r\n     */\r\n    public setProperty(name: string | PropertyId, value: string): void {\r\n        this.privSpeechProperties.setProperty(name, value);\r\n    }\r\n\r\n    /**\r\n     * Provides access to custom properties.\r\n     * @member SpeechTranslationConfigImpl.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The properties.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privSpeechProperties;\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member SpeechTranslationConfigImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        return;\r\n    }\r\n\r\n    public setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void {\r\n        const currentProperties: IStringDictionary<string> = JSON.parse(this.privSpeechProperties.getProperty(ServicePropertiesPropertyName, \"{}\"));\r\n\r\n        currentProperties[name] = value;\r\n\r\n        this.privSpeechProperties.setProperty(ServicePropertiesPropertyName, JSON.stringify(currentProperties));\r\n    }\r\n\r\n    public setProfanity(profanity: ProfanityOption): void {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceResponse_ProfanityOption, ProfanityOption[profanity]);\r\n    }\r\n\r\n    public enableAudioLogging(): void {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\r\n    }\r\n    public requestWordLevelTimestamps(): void {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\r\n    }\r\n    public enableDictation(): void {\r\n        this.privSpeechProperties.setProperty(ForceDictationPropertyName, \"true\");\r\n    }\r\n\r\n    public get speechSynthesisLanguage(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage);\r\n    }\r\n\r\n    public set speechSynthesisLanguage(language: string) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_SynthLanguage, language);\r\n    }\r\n\r\n    public get speechSynthesisVoiceName(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice);\r\n    }\r\n\r\n    public set speechSynthesisVoiceName(voice: string) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_SynthVoice, voice);\r\n    }\r\n\r\n    public get speechSynthesisOutputFormat(): SpeechSynthesisOutputFormat {\r\n        return (SpeechSynthesisOutputFormat as any)[this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)];\r\n    }\r\n\r\n    public set speechSynthesisOutputFormat(format: SpeechSynthesisOutputFormat) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, SpeechSynthesisOutputFormat[format]);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AudioStreamFormatImpl } from \"../../src/sdk/Audio/AudioStreamFormat\";\r\nimport {\r\n    IAudioStreamNode,\r\n    IStreamChunk,\r\n} from \"../common/Exports\";\r\n\r\nexport class ReplayableAudioNode implements IAudioStreamNode {\r\n    private privAudioNode: IAudioStreamNode;\r\n    private privBytesPerSecond: number;\r\n    private privBuffers: BufferEntry[] = [];\r\n    private privReplayOffset: number = 0;\r\n    private privLastShrinkOffset: number = 0;\r\n    private privBufferStartOffset: number = 0;\r\n    private privBufferSerial: number = 0;\r\n    private privBufferedBytes: number = 0;\r\n    private privReplay: boolean = false;\r\n    private privLastChunkAcquiredTime: number = 0;\r\n\r\n    public constructor(audioSource: IAudioStreamNode, bytesPerSecond: number) {\r\n        this.privAudioNode = audioSource;\r\n        this.privBytesPerSecond = bytesPerSecond;\r\n    }\r\n\r\n    public id = (): string => {\r\n        return this.privAudioNode.id();\r\n    }\r\n\r\n    // Reads and returns the next chunk of audio buffer.\r\n    // If replay of existing buffers are needed, read() will first seek and replay\r\n    // existing content, and upoin completion it will read new content from the underlying\r\n    // audio node, saving that content into the replayable buffers.\r\n    public read(): Promise<IStreamChunk<ArrayBuffer>> {\r\n        // if there is a replay request to honor.\r\n        if (!!this.privReplay && this.privBuffers.length !== 0) {\r\n            // Find the start point in the buffers.\r\n            // Offsets are in 100ns increments.\r\n            // So how many bytes do we need to seek to get the right offset?\r\n            const offsetToSeek: number = this.privReplayOffset - this.privBufferStartOffset;\r\n\r\n            let bytesToSeek: number = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\r\n            if (0 !== (bytesToSeek % 2)) {\r\n                bytesToSeek++;\r\n            }\r\n\r\n            let i: number = 0;\r\n\r\n            while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\r\n                bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\r\n            }\r\n\r\n            if (i < this.privBuffers.length) {\r\n                const retVal: ArrayBuffer = this.privBuffers[i].chunk.buffer.slice(bytesToSeek);\r\n\r\n                this.privReplayOffset += (retVal.byteLength / this.privBytesPerSecond) * 1e+7;\r\n\r\n                // If we've reached the end of the buffers, stop replaying.\r\n                if (i === this.privBuffers.length - 1) {\r\n                    this.privReplay = false;\r\n                }\r\n\r\n                return Promise.resolve<IStreamChunk<ArrayBuffer>>({\r\n                    buffer: retVal,\r\n                    isEnd: false,\r\n                    timeReceived: this.privBuffers[i].chunk.timeReceived,\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.privAudioNode.read()\r\n            .then((result: IStreamChunk<ArrayBuffer>) => {\r\n                if (result && result.buffer) {\r\n                    this.privBuffers.push(new BufferEntry(result, this.privBufferSerial++, this.privBufferedBytes));\r\n                    this.privBufferedBytes += result.buffer.byteLength;\r\n                }\r\n                return result;\r\n            });\r\n    }\r\n\r\n    public detach(): Promise<void> {\r\n        this.privBuffers = undefined;\r\n        return this.privAudioNode.detach();\r\n    }\r\n\r\n    public replay(): void {\r\n        if (this.privBuffers && 0 !== this.privBuffers.length) {\r\n            this.privReplay = true;\r\n            this.privReplayOffset = this.privLastShrinkOffset;\r\n        }\r\n    }\r\n\r\n    // Shrinks the existing audio buffers to start at the new offset, or at the\r\n    // beginning of the buffer closest to the requested offset.\r\n    // A replay request will start from the last shrink point.\r\n    public shrinkBuffers(offset: number): void {\r\n        if (this.privBuffers === undefined || this.privBuffers.length === 0) {\r\n            return;\r\n        }\r\n\r\n        this.privLastShrinkOffset = offset;\r\n\r\n        // Find the start point in the buffers.\r\n        // Offsets are in 100ns increments.\r\n        // So how many bytes do we need to seek to get the right offset?\r\n        const offsetToSeek: number = offset - this.privBufferStartOffset;\r\n\r\n        let bytesToSeek: number = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\r\n\r\n        let i: number = 0;\r\n\r\n        while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\r\n            bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\r\n        }\r\n        this.privBufferStartOffset = Math.round(offset - ((bytesToSeek / this.privBytesPerSecond) * 1e+7));\r\n        this.privBuffers = this.privBuffers.slice(i);\r\n    }\r\n\r\n    // Finds the time a buffer of audio was first seen by offset.\r\n    public findTimeAtOffset(offset: number): number {\r\n        if (offset < this.privBufferStartOffset || this.privBuffers === undefined) {\r\n            return 0;\r\n        }\r\n\r\n        for (const value of this.privBuffers) {\r\n            const startOffset: number = (value.byteOffset / this.privBytesPerSecond) * 1e7;\r\n            const endOffset: number = startOffset + ((value.chunk.buffer.byteLength / this.privBytesPerSecond) * 1e7);\r\n\r\n            if (offset >= startOffset && offset <= endOffset) {\r\n                return value.chunk.timeReceived;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n}\r\n\r\n// Primary use of this class is to help debugging problems with the replay\r\n// code. If the memory cost of alloc / dealloc gets too much, drop it and just use\r\n// the ArrayBuffer directly.\r\n// tslint:disable-next-line:max-classes-per-file\r\nclass BufferEntry {\r\n    public chunk: IStreamChunk<ArrayBuffer>;\r\n    public serial: number;\r\n    public byteOffset: number;\r\n\r\n    public constructor(chunk: IStreamChunk<ArrayBuffer>, serial: number, byteOffset: number) {\r\n        this.chunk = chunk;\r\n        this.serial = serial;\r\n        this.byteOffset = byteOffset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\ntype TWorkerMessage = ICallNotification | IClearResponse | IErrorNotification | IErrorResponse;\r\n\r\ninterface IClearResponse {\r\n    error: null;\r\n    id: number;\r\n}\r\n\r\ninterface IErrorNotification {\r\n    error: {\r\n        message: string;\r\n    };\r\n    id: null;\r\n    result: null;\r\n}\r\n\r\ninterface IErrorResponse {\r\n    error: {\r\n        message: string;\r\n    };\r\n    id: number;\r\n    result: null;\r\n}\r\n\r\ninterface ICallNotification {\r\n    id: null;\r\n    method: \"call\";\r\n    params: {\r\n        timerId: number;\r\n    };\r\n}\r\n\r\ninterface ISetNotification {\r\n    id: null;\r\n    method: \"set\";\r\n    params: {\r\n        delay: number;\r\n        now: number;\r\n        timerId: number;\r\n    };\r\n}\r\n\r\ninterface IClearRequest {\r\n    id: number;\r\n    method: \"clear\";\r\n    params: {\r\n        timerId: number;\r\n    };\r\n}\r\n\r\ninterface IWorkerEvent extends Event {\r\n    data: TWorkerMessage;\r\n}\r\n\r\ninterface IWorkerTimers {\r\n    clearTimeout: (timerId: number) => void;\r\n    setTimeout: (func: () => any, delay: number) => number;\r\n}\r\n\r\ndeclare type Func = () => any;\r\n\r\nexport class Timeout {\r\n\r\n    private static workerTimers: null | IWorkerTimers = null;\r\n\r\n    public static clearTimeout: IWorkerTimers[\"clearTimeout\"] = (timerId) => Timeout.timers().clearTimeout(timerId);\r\n\r\n    public static setTimeout: IWorkerTimers[\"setTimeout\"] = (func, delay) => Timeout.timers().setTimeout(func, delay);\r\n\r\n    public static load = (url: string) => {\r\n        // Prefilling the Maps with a function indexed by zero is necessary to be compliant with the specification.\r\n        const scheduledTimeoutFunctions: Map<number, number | Func> = new Map([[0, () => { }]]); // tslint:disable-line no-empty\r\n        const unhandledRequests: Map<number, number> = new Map();\r\n\r\n        const worker = new Worker(url);\r\n\r\n        worker.addEventListener(\"message\", ({ data }: IWorkerEvent) => {\r\n            if (Timeout.isCallNotification(data)) {\r\n                const {\r\n                    params: { timerId }\r\n                } = data;\r\n\r\n                const idOrFunc = scheduledTimeoutFunctions.get(timerId);\r\n\r\n                if (typeof idOrFunc === \"number\") {\r\n                    const unhandledTimerId = unhandledRequests.get(idOrFunc);\r\n\r\n                    if (\r\n                        unhandledTimerId === undefined ||\r\n                        unhandledTimerId !== timerId\r\n                    ) {\r\n                        throw new Error(\"The timer is in an undefined state.\");\r\n                    }\r\n                } else if (typeof idOrFunc !== \"undefined\") {\r\n                    idOrFunc();\r\n\r\n                    // A timeout can be safely deleted because it is only called once.\r\n                    scheduledTimeoutFunctions.delete(timerId);\r\n                } else {\r\n                    throw new Error(\"The timer is in an undefined state.\");\r\n                }\r\n            } else if (Timeout.isClearResponse(data)) {\r\n                const { id } = data;\r\n\r\n                const unhandledTimerId = unhandledRequests.get(id);\r\n\r\n                if (unhandledTimerId === undefined) {\r\n                    throw new Error(\"The timer is in an undefined state.\");\r\n                }\r\n\r\n                unhandledRequests.delete(id);\r\n\r\n                scheduledTimeoutFunctions.delete(unhandledTimerId);\r\n            } else {\r\n                const {\r\n                    error: { message }\r\n                } = data;\r\n\r\n                throw new Error(message);\r\n            }\r\n        });\r\n\r\n        const clearTimeout = (timerId: number) => {\r\n            const id = Math.random();\r\n\r\n            unhandledRequests.set(id, timerId);\r\n            scheduledTimeoutFunctions.set(timerId, id);\r\n\r\n            worker.postMessage({\r\n                id,\r\n                method: \"clear\",\r\n                params: { timerId }\r\n            } as IClearRequest);\r\n        };\r\n\r\n        const setTimeout = (func: () => void, delay: number) => {\r\n            const timerId = Math.random();\r\n\r\n            scheduledTimeoutFunctions.set(timerId, func);\r\n\r\n            worker.postMessage({\r\n                id: null,\r\n                method: \"set\",\r\n                params: {\r\n                    delay,\r\n                    now: performance.now(),\r\n                    timerId\r\n                }\r\n            } as ISetNotification);\r\n\r\n            return timerId;\r\n        };\r\n\r\n        return {\r\n            clearTimeout,\r\n            setTimeout\r\n        };\r\n    }\r\n\r\n    private static loadWorkerTimers = () => {\r\n        const worker = `!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=14)}([function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return i})),n.d(t,\"b\",(function(){return u})),n.d(t,\"c\",(function(){return a})),n.d(t,\"d\",(function(){return d}));const r=new Map,o=new Map,i=e=>{const t=r.get(e);if(void 0===t)throw new Error('There is no interval scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),r.delete(e)},u=e=>{const t=o.get(e);if(void 0===t)throw new Error('There is no timeout scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),o.delete(e)},f=(e,t)=>{let n,r;if(\"performance\"in self){const o=performance.now();n=o,r=e-Math.max(0,o-t)}else n=Date.now(),r=e;return{expected:n+r,remainingDelay:r}},c=(e,t,n,r)=>{const o=\"performance\"in self?performance.now():Date.now();o>n?postMessage({id:null,method:\"call\",params:{timerId:t}}):e.set(t,setTimeout(c,n-o,e,t,n))},a=(e,t,n)=>{const{expected:o,remainingDelay:i}=f(e,n);r.set(t,setTimeout(c,i,r,t,o))},d=(e,t,n)=>{const{expected:r,remainingDelay:i}=f(e,n);o.set(t,setTimeout(c,i,o,t,r))}},function(e,t,n){\"use strict\";n.r(t);var r=n(2);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(3);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(4);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o);var f=n(5);for(var o in f)\"default\"!==o&&function(e){n.d(t,e,(function(){return f[e]}))}(o);var c=n(6);for(var o in c)\"default\"!==o&&function(e){n.d(t,e,(function(){return c[e]}))}(o);var a=n(7);for(var o in a)\"default\"!==o&&function(e){n.d(t,e,(function(){return a[e]}))}(o);var d=n(8);for(var o in d)\"default\"!==o&&function(e){n.d(t,e,(function(){return d[e]}))}(o);var s=n(9);for(var o in s)\"default\"!==o&&function(e){n.d(t,e,(function(){return s[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(11);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(12);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(13);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(0),o=n(1);for(var i in o)\"default\"!==i&&function(e){n.d(t,e,(function(){return o[e]}))}(i);var u=n(10);for(var i in u)\"default\"!==i&&function(e){n.d(t,e,(function(){return u[e]}))}(i);addEventListener(\"message\",({data:e})=>{try{if(\"clear\"===e.method){const{id:t,params:{timerId:n}}=e;Object(r.b)(n),postMessage({error:null,id:t})}else{if(\"set\"!==e.method)throw new Error('The given method \"'.concat(e.method,'\" is not supported'));{const{params:{delay:t,now:n,timerId:o}}=e;Object(r.d)(t,o,n)}}}catch(t){postMessage({error:{message:t.message},id:e.id,result:null})}})}]);`; // tslint:disable-line:max-line-length\r\n        return () => {\r\n            if (Timeout.workerTimers !== null) {\r\n                return Timeout.workerTimers;\r\n            }\r\n\r\n            const blob = new Blob([worker], { type: \"application/javascript; charset=utf-8\" });\r\n            const url = URL.createObjectURL(blob);\r\n\r\n            Timeout.workerTimers = Timeout.load(url);\r\n\r\n            // Edge doesn't like the URL to be revoked directly.\r\n            Timeout.workerTimers.setTimeout(() => URL.revokeObjectURL(url), 0);\r\n\r\n            return Timeout.workerTimers as IWorkerTimers;\r\n        };\r\n    }\r\n\r\n    public static timers: () => IWorkerTimers = Timeout.loadWorkerTimers();\r\n\r\n    private static isCallNotification = (message: TWorkerMessage): message is ICallNotification => {\r\n        return (message as ICallNotification).method !== undefined && (message as ICallNotification).method === \"call\";\r\n    }\r\n\r\n    private static isClearResponse = (message: TWorkerMessage): message is IClearResponse => {\r\n        return (message as IClearResponse).error === null && typeof message.id === \"number\";\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { EventType, PlatformEvent } from \"../common/Exports\";\r\n\r\nexport class SpeechRecognitionEvent extends PlatformEvent {\r\n    private privRequestId: string;\r\n    private privSessionId: string;\r\n\r\n    constructor(eventName: string, requestId: string, sessionId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n\r\n        this.privRequestId = requestId;\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n\r\nexport class RecognitionTriggeredEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    constructor(requestId: string, sessionId: string, audioSourceId: string, audioNodeId: string) {\r\n        super(\"RecognitionTriggeredEvent\", requestId, sessionId);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class ListeningStartedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    constructor(requestId: string, sessionId: string, audioSourceId: string, audioNodeId: string) {\r\n        super(\"ListeningStartedEvent\", requestId, sessionId);\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class ConnectingToServiceEvent extends SpeechRecognitionEvent {\r\n    private privAuthFetchEventid: string;\r\n\r\n    constructor(requestId: string, authFetchEventid: string, sessionId: string) {\r\n        super(\"ConnectingToServiceEvent\", requestId, sessionId);\r\n        this.privAuthFetchEventid = authFetchEventid;\r\n    }\r\n\r\n    public get authFetchEventid(): string {\r\n        return this.privAuthFetchEventid;\r\n    }\r\n}\r\n\r\nexport class RecognitionStartedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAuthFetchEventId: string;\r\n\r\n    constructor(requestId: string, audioSourceId: string, audioNodeId: string, authFetchEventId: string, sessionId: string) {\r\n        super(\"RecognitionStartedEvent\", requestId, sessionId);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n\r\nexport enum RecognitionCompletionStatus {\r\n    Success,\r\n    AudioSourceError,\r\n    AudioSourceTimeout,\r\n    AuthTokenFetchError,\r\n    AuthTokenFetchTimeout,\r\n    UnAuthorized,\r\n    ConnectTimeout,\r\n    ConnectError,\r\n    ClientRecognitionActivityTimeout,\r\n    UnknownError,\r\n}\r\n\r\nexport class RecognitionEndedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAuthFetchEventId: string;\r\n    private privServiceTag: string;\r\n    private privStatus: RecognitionCompletionStatus;\r\n    private privError: string;\r\n\r\n    constructor(\r\n        requestId: string,\r\n        audioSourceId: string,\r\n        audioNodeId: string,\r\n        authFetchEventId: string,\r\n        sessionId: string,\r\n        serviceTag: string,\r\n        status: RecognitionCompletionStatus,\r\n        error: string) {\r\n\r\n        super(\"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? EventType.Info : EventType.Error);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.privStatus = status;\r\n        this.privError = error;\r\n        this.privServiceTag = serviceTag;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n\r\n    public get serviceTag(): string {\r\n        return this.privServiceTag;\r\n    }\r\n\r\n    public get status(): RecognitionCompletionStatus {\r\n        return this.privStatus;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport {\r\n    AudioSourceErrorEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    AudioStreamNodeErrorEvent,\r\n    ConnectionEstablishedEvent,\r\n    ConnectionEstablishErrorEvent,\r\n    ConnectionMessageReceivedEvent,\r\n    ConnectionStartEvent,\r\n    IEventListener,\r\n    IStringDictionary,\r\n    PlatformEvent,\r\n} from \"../common/Exports\";\r\nimport { ConnectingToServiceEvent, RecognitionTriggeredEvent } from \"./RecognitionEvents\";\r\n\r\nexport interface ITelemetry {\r\n    Metrics: IMetric[];\r\n    ReceivedMessages: IStringDictionary<string[]>;\r\n}\r\n\r\nexport interface IMetric {\r\n    End?: string;\r\n    Error?: string;\r\n    Id?: string;\r\n    Name?: string;\r\n    Start?: string;\r\n    PhraseLatencyMs?: number[];\r\n    FirstHypothesisLatencyMs?: number[];\r\n}\r\n\r\nexport class ServiceTelemetryListener implements IEventListener<PlatformEvent> {\r\n    private privIsDisposed: boolean = false;\r\n\r\n    private privRequestId: string;\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    private privListeningTriggerMetric: IMetric = null;\r\n    private privMicMetric: IMetric = null;\r\n    private privConnectionEstablishMetric: IMetric = null;\r\n\r\n    private privMicStartTime: string;\r\n\r\n    private privConnectionId: string;\r\n    private privConnectionStartTime: string;\r\n\r\n    private privReceivedMessages: IStringDictionary<string[]>;\r\n    private privPhraseLatencies: number[];\r\n    private privHypothesisLatencies: number[];\r\n\r\n    constructor(requestId: string, audioSourceId: string, audioNodeId: string) {\r\n        this.privRequestId = requestId;\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n\r\n        this.privReceivedMessages = {};\r\n        this.privPhraseLatencies = [];\r\n        this.privHypothesisLatencies = [];\r\n    }\r\n\r\n    public phraseReceived(audioReceivedTime: number): void {\r\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\r\n            this.privPhraseLatencies.push(Date.now() - audioReceivedTime);\r\n        }\r\n    }\r\n\r\n    public hypothesisReceived(audioReceivedTime: number): void {\r\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\r\n            this.privHypothesisLatencies.push(Date.now() - audioReceivedTime);\r\n        }\r\n    }\r\n\r\n    public onEvent = (e: PlatformEvent): void => {\r\n        if (this.privIsDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (e instanceof RecognitionTriggeredEvent && e.requestId === this.privRequestId) {\r\n            this.privListeningTriggerMetric = {\r\n                End: e.eventTime,\r\n                Name: \"ListeningTrigger\",\r\n                Start: e.eventTime,\r\n            };\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeAttachingEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            this.privMicStartTime = e.eventTime;\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeAttachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            this.privMicStartTime = e.eventTime;\r\n        }\r\n\r\n        if (e instanceof AudioSourceErrorEvent && e.audioSourceId === this.privAudioSourceId) {\r\n            if (!this.privMicMetric) {\r\n                this.privMicMetric = {\r\n                    End: e.eventTime,\r\n                    Error: e.error,\r\n                    Name: \"Microphone\",\r\n                    Start: this.privMicStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeErrorEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            if (!this.privMicMetric) {\r\n                this.privMicMetric = {\r\n                    End: e.eventTime,\r\n                    Error: e.error,\r\n                    Name: \"Microphone\",\r\n                    Start: this.privMicStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeDetachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            if (!this.privMicMetric) {\r\n                this.privMicMetric = {\r\n                    End: e.eventTime,\r\n                    Name: \"Microphone\",\r\n                    Start: this.privMicStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof ConnectingToServiceEvent && e.requestId === this.privRequestId) {\r\n            this.privConnectionId = e.sessionId;\r\n        }\r\n\r\n        if (e instanceof ConnectionStartEvent && e.connectionId === this.privConnectionId) {\r\n            this.privConnectionStartTime = e.eventTime;\r\n        }\r\n\r\n        if (e instanceof ConnectionEstablishedEvent && e.connectionId === this.privConnectionId) {\r\n            if (!this.privConnectionEstablishMetric) {\r\n                this.privConnectionEstablishMetric = {\r\n                    End: e.eventTime,\r\n                    Id: this.privConnectionId,\r\n                    Name: \"Connection\",\r\n                    Start: this.privConnectionStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof ConnectionEstablishErrorEvent && e.connectionId === this.privConnectionId) {\r\n            if (!this.privConnectionEstablishMetric) {\r\n                this.privConnectionEstablishMetric = {\r\n                    End: e.eventTime,\r\n                    Error: this.getConnectionError(e.statusCode),\r\n                    Id: this.privConnectionId,\r\n                    Name: \"Connection\",\r\n                    Start: this.privConnectionStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof ConnectionMessageReceivedEvent && e.connectionId === this.privConnectionId) {\r\n            if (e.message && e.message.headers && e.message.headers.path) {\r\n                if (!this.privReceivedMessages[e.message.headers.path]) {\r\n                    this.privReceivedMessages[e.message.headers.path] = new Array<string>();\r\n                }\r\n                const maxMessagesToSend = 50;\r\n                if (this.privReceivedMessages[e.message.headers.path].length < maxMessagesToSend) {\r\n                    this.privReceivedMessages[e.message.headers.path].push(e.networkReceivedTime);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public getTelemetry = (): string => {\r\n        const metrics = new Array<IMetric>();\r\n\r\n        if (this.privListeningTriggerMetric) {\r\n            metrics.push(this.privListeningTriggerMetric);\r\n        }\r\n\r\n        if (this.privMicMetric) {\r\n            metrics.push(this.privMicMetric);\r\n        }\r\n\r\n        if (this.privConnectionEstablishMetric) {\r\n            metrics.push(this.privConnectionEstablishMetric);\r\n        }\r\n\r\n        if (this.privPhraseLatencies.length > 0) {\r\n            metrics.push({\r\n                PhraseLatencyMs: this.privPhraseLatencies,\r\n            });\r\n        }\r\n\r\n        if (this.privHypothesisLatencies.length > 0) {\r\n            metrics.push({\r\n                FirstHypothesisLatencyMs: this.privHypothesisLatencies,\r\n            });\r\n        }\r\n\r\n        const telemetry: ITelemetry = {\r\n            Metrics: metrics,\r\n            ReceivedMessages: this.privReceivedMessages,\r\n        };\r\n\r\n        const json = JSON.stringify(telemetry);\r\n\r\n        // We dont want to send the same telemetry again. So clean those out.\r\n        this.privReceivedMessages = {};\r\n        this.privListeningTriggerMetric = null;\r\n        this.privMicMetric = null;\r\n        this.privConnectionEstablishMetric = null;\r\n        this.privPhraseLatencies = [];\r\n        this.privHypothesisLatencies = [];\r\n        return json;\r\n    }\r\n\r\n    // Determines if there are any telemetry events to send to the service.\r\n    public get hasTelemetry(): boolean {\r\n        return (Object.keys(this.privReceivedMessages).length !== 0 ||\r\n            this.privListeningTriggerMetric !== null ||\r\n            this.privMicMetric !== null ||\r\n            this.privConnectionEstablishMetric !== null ||\r\n            this.privPhraseLatencies.length !== 0 ||\r\n            this.privHypothesisLatencies.length !== 0);\r\n    }\r\n\r\n    public dispose = (): void => {\r\n        this.privIsDisposed = true;\r\n    }\r\n\r\n    private getConnectionError = (statusCode: number): string => {\r\n        /*\r\n        -- Websocket status codes --\r\n        NormalClosure = 1000,\r\n        EndpointUnavailable = 1001,\r\n        ProtocolError = 1002,\r\n        InvalidMessageType = 1003,\r\n        Empty = 1005,\r\n        InvalidPayloadData = 1007,\r\n        PolicyViolation = 1008,\r\n        MessageTooBig = 1009,\r\n        MandatoryExtension = 1010,\r\n        InternalServerError = 1011\r\n        */\r\n\r\n        switch (statusCode) {\r\n            case 400:\r\n            case 1002:\r\n            case 1003:\r\n            case 1005:\r\n            case 1007:\r\n            case 1008:\r\n            case 1009: return \"BadRequest\";\r\n            case 401: return \"Unauthorized\";\r\n            case 403: return \"Forbidden\";\r\n            case 503:\r\n            case 1001: return \"ServerUnavailable\";\r\n            case 500:\r\n            case 1011: return \"ServerError\";\r\n            case 408:\r\n            case 504: return \"Timeout\";\r\n            default: return \"statuscode:\" + statusCode.toString();\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Z_NO_COMPRESSION } from \"zlib\";\r\nimport { ReplayableAudioNode } from \"../common.browser/Exports\";\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    IDetachable,\r\n    IEventSource,\r\n    PlatformEvent\r\n} from \"../common/Exports\";\r\nimport {\r\n    ConnectingToServiceEvent,\r\n    ListeningStartedEvent,\r\n    RecognitionStartedEvent,\r\n    RecognitionTriggeredEvent,\r\n    SpeechRecognitionEvent,\r\n} from \"./RecognitionEvents\";\r\nimport { ServiceTelemetryListener } from \"./ServiceTelemetryListener.Internal\";\r\n\r\nexport class RequestSession {\r\n    private privIsDisposed: boolean = false;\r\n    private privServiceTelemetryListener: ServiceTelemetryListener;\r\n    private privDetachables: IDetachable[] = new Array<IDetachable>();\r\n    private privRequestId: string;\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAudioNode: ReplayableAudioNode;\r\n    private privAuthFetchEventId: string;\r\n    private privIsAudioNodeDetached: boolean = false;\r\n    private privIsRecognizing: boolean = false;\r\n    private privIsSpeechEnded: boolean = false;\r\n    private privTurnStartAudioOffset: number = 0;\r\n    private privLastRecoOffset: number = 0;\r\n    private privHypothesisReceived: boolean = false;\r\n    private privBytesSent: number = 0;\r\n    private privRecogNumber: number = 0;\r\n    private privSessionId: string;\r\n    private privTurnDeferral: Deferred<void>;\r\n    private privInTurn: boolean = false;\r\n    private privConnectionAttempts: number = 0;\r\n\r\n    constructor(audioSourceId: string) {\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privAudioNodeId = createNoDashGuid();\r\n        this.privTurnDeferral = new Deferred<void>();\r\n\r\n        // We're not in a turn, so resolve.\r\n        this.privTurnDeferral.resolve();\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get turnCompletionPromise(): Promise<void> {\r\n        return this.privTurnDeferral.promise;\r\n    }\r\n\r\n    public get isSpeechEnded(): boolean {\r\n        return this.privIsSpeechEnded;\r\n    }\r\n\r\n    public get isRecognizing(): boolean {\r\n        return this.privIsRecognizing;\r\n    }\r\n\r\n    public get currentTurnAudioOffset(): number {\r\n        return this.privTurnStartAudioOffset;\r\n    }\r\n\r\n    public get recogNumber(): number {\r\n        return this.privRecogNumber;\r\n    }\r\n\r\n    public get numConnectionAttempts(): number {\r\n        return this.privConnectionAttempts;\r\n    }\r\n\r\n    // The number of bytes sent for the current connection.\r\n    // Counter is reset to 0 each time a connection is established.\r\n    public get bytesSent(): number {\r\n        return this.privBytesSent;\r\n    }\r\n    public listenForServiceTelemetry(eventSource: IEventSource<PlatformEvent>): void {\r\n        if (!!this.privServiceTelemetryListener) {\r\n            this.privDetachables.push(eventSource.attachListener(this.privServiceTelemetryListener));\r\n        }\r\n    }\r\n\r\n    public startNewRecognition(): void {\r\n        this.privIsSpeechEnded = false;\r\n        this.privIsRecognizing = true;\r\n        this.privTurnStartAudioOffset = 0;\r\n        this.privLastRecoOffset = 0;\r\n        this.privRecogNumber++;\r\n        this.privServiceTelemetryListener = new ServiceTelemetryListener(this.privRequestId, this.privAudioSourceId, this.privAudioNodeId);\r\n        this.onEvent(new RecognitionTriggeredEvent(this.requestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\r\n    }\r\n\r\n    public async onAudioSourceAttachCompleted(audioNode: ReplayableAudioNode, isError: boolean, error?: string): Promise<void> {\r\n        this.privAudioNode = audioNode;\r\n        this.privIsAudioNodeDetached = false;\r\n\r\n        if (isError) {\r\n            await this.onComplete();\r\n        } else {\r\n            this.onEvent(new ListeningStartedEvent(this.privRequestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\r\n        }\r\n    }\r\n\r\n    public onPreConnectionStart = (authFetchEventId: string, connectionId: string): void => {\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.privSessionId = connectionId;\r\n        this.onEvent(new ConnectingToServiceEvent(this.privRequestId, this.privAuthFetchEventId, this.privSessionId));\r\n    }\r\n\r\n    public async onAuthCompleted(isError: boolean, error?: string): Promise<void> {\r\n        if (isError) {\r\n            await this.onComplete();\r\n        }\r\n    }\r\n\r\n    public async onConnectionEstablishCompleted(statusCode: number, reason?: string): Promise<void> {\r\n        if (statusCode === 200) {\r\n            this.onEvent(new RecognitionStartedEvent(this.requestId, this.privAudioSourceId, this.privAudioNodeId, this.privAuthFetchEventId, this.privSessionId));\r\n            if (!!this.privAudioNode) {\r\n                this.privAudioNode.replay();\r\n            }\r\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\r\n            this.privBytesSent = 0;\r\n            return;\r\n        } else if (statusCode === 403) {\r\n            await this.onComplete();\r\n        }\r\n    }\r\n\r\n    public async onServiceTurnEndResponse(continuousRecognition: boolean): Promise<void> {\r\n        this.privTurnDeferral.resolve();\r\n\r\n        if (!continuousRecognition || this.isSpeechEnded) {\r\n            await this.onComplete();\r\n            this.privInTurn = false;\r\n        } else {\r\n            // Start a new request set.\r\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\r\n            this.privAudioNode.replay();\r\n        }\r\n    }\r\n\r\n    public onSpeechContext = (): void => {\r\n        this.privRequestId = createNoDashGuid();\r\n    }\r\n\r\n    public onServiceTurnStartResponse = (): void => {\r\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\r\n            // What? How are we starting a turn with another not done?\r\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\r\n            // Avoid UnhandledPromiseRejection if privTurnDeferral is not being awaited\r\n            /* tslint:disable:no-empty */\r\n            this.privTurnDeferral.promise.then().catch(() => { });\r\n        }\r\n        this.privInTurn = true;\r\n        this.privTurnDeferral = new Deferred<void>();\r\n    }\r\n\r\n    public onHypothesis(offset: number): void {\r\n        if (!this.privHypothesisReceived) {\r\n            this.privHypothesisReceived = true;\r\n            this.privServiceTelemetryListener.hypothesisReceived(this.privAudioNode.findTimeAtOffset(offset));\r\n        }\r\n    }\r\n\r\n    public onPhraseRecognized(offset: number): void {\r\n        this.privServiceTelemetryListener.phraseReceived(this.privAudioNode.findTimeAtOffset(offset));\r\n        this.onServiceRecognized(offset);\r\n    }\r\n\r\n    public onServiceRecognized(offset: number): void {\r\n        this.privLastRecoOffset = offset;\r\n        this.privHypothesisReceived = false;\r\n        this.privAudioNode.shrinkBuffers(offset);\r\n        this.privConnectionAttempts = 0;\r\n    }\r\n\r\n    public onAudioSent(bytesSent: number): void {\r\n        this.privBytesSent += bytesSent;\r\n    }\r\n\r\n    public onRetryConnection(): void {\r\n        this.privConnectionAttempts++;\r\n    }\r\n\r\n    public async dispose(error?: string): Promise<void> {\r\n        if (!this.privIsDisposed) {\r\n            // we should have completed by now. If we did not its an unknown error.\r\n            this.privIsDisposed = true;\r\n            for (const detachable of this.privDetachables) {\r\n                await detachable.detach();\r\n            }\r\n\r\n            this.privServiceTelemetryListener?.dispose();\r\n            this.privIsRecognizing = false;\r\n        }\r\n    }\r\n\r\n    public getTelemetry = (): string => {\r\n        if (this.privServiceTelemetryListener.hasTelemetry) {\r\n            return this.privServiceTelemetryListener.getTelemetry();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public async onStopRecognizing(): Promise<void> {\r\n        await this.onComplete();\r\n    }\r\n\r\n    // Should be called with the audioNode for this session has indicated that it is out of speech.\r\n    public onSpeechEnded(): void {\r\n        this.privIsSpeechEnded = true;\r\n    }\r\n\r\n    protected onEvent = (event: SpeechRecognitionEvent): void => {\r\n        if (!!this.privServiceTelemetryListener) {\r\n            this.privServiceTelemetryListener.onEvent(event);\r\n        }\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private async onComplete(): Promise<void> {\r\n        if (!!this.privIsRecognizing) {\r\n            this.privIsRecognizing = false;\r\n            await this.detachAudioNode();\r\n        }\r\n    }\r\n\r\n    private async detachAudioNode(): Promise<void> {\r\n        if (!this.privIsAudioNodeDetached) {\r\n            this.privIsAudioNodeDetached = true;\r\n            if (this.privAudioNode) {\r\n                await this.privAudioNode.detach();\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IDynamicGrammar,\r\n    IDynamicGrammarGeneric,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Responsible for building the object to be sent to the speech service to support dynamic grammars.\r\n * @class DynamicGrammarBuilder\r\n */\r\nexport class DynamicGrammarBuilder {\r\n\r\n    private privPhrases: string[];\r\n    private privGrammars: string[];\r\n\r\n    // Adds one more reference phrases to the dynamic grammar to send.\r\n    // All added phrases are generic phrases.\r\n    public addPhrase(phrase: string | string[]): void {\r\n        if (!this.privPhrases) {\r\n            this.privPhrases = [];\r\n        }\r\n\r\n        if (phrase instanceof Array) {\r\n            this.privPhrases = this.privPhrases.concat(phrase as string[]);\r\n        } else {\r\n            this.privPhrases.push(phrase as string);\r\n        }\r\n    }\r\n\r\n    // Clears all phrases stored in the current object.\r\n    public clearPhrases(): void {\r\n        this.privPhrases = undefined;\r\n    }\r\n\r\n    // Adds one or more reference grammars to the current grammar.\r\n    public addReferenceGrammar(grammar: string | string[]): void {\r\n        if (!this.privGrammars) {\r\n            this.privGrammars = [];\r\n        }\r\n\r\n        if (grammar instanceof Array) {\r\n            this.privGrammars = this.privGrammars.concat(grammar as string[]);\r\n        } else {\r\n            this.privGrammars.push(grammar as string);\r\n        }\r\n    }\r\n\r\n    // clears all grammars stored on the recognizer.\r\n    public clearGrammars(): void {\r\n        this.privGrammars = undefined;\r\n    }\r\n\r\n    // Generates an object that represents the dynamic grammar used by the Speech Service.\r\n    // This is done by building an object with the correct layout based on the phrases and reference grammars added to this instance\r\n    // of a DynamicGrammarBuilder\r\n    public generateGrammarObject(): IDynamicGrammar {\r\n        if (this.privGrammars === undefined && this.privPhrases === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        const retObj: IDynamicGrammar = {};\r\n        retObj.ReferenceGrammars = this.privGrammars;\r\n\r\n        if (undefined !== this.privPhrases && 0 !== this.privPhrases.length) {\r\n            const retPhrases: IDynamicGrammarGeneric[] = [];\r\n\r\n            this.privPhrases.forEach((value: string, index: number, array: string[]): void => {\r\n                retPhrases.push({\r\n                    Text: value,\r\n                });\r\n            });\r\n\r\n            retObj.Groups = [{ Type: \"Generic\", Items: retPhrases }];\r\n        }\r\n\r\n        return retObj;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    IDynamicGrammar,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Represents the JSON used in the speech.context message sent to the speech service.\r\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\r\n */\r\nexport class SpeechContext {\r\n    private privContext: { [section: string]: any } = {};\r\n    private privDynamicGrammar: DynamicGrammarBuilder;\r\n\r\n    constructor(dynamicGrammar: DynamicGrammarBuilder) {\r\n        this.privDynamicGrammar = dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Adds a section to the speech.context object.\r\n     * @param sectionName Name of the section to add.\r\n     * @param value JSON serializable object that represents the value.\r\n     */\r\n    public setSection(sectionName: string, value: any): void {\r\n        this.privContext[sectionName] = value;\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * This is only used by pronunciation assessment config.\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public setPronunciationAssessmentParams(params: string): void {\r\n        if (this.privContext.phraseDetection === undefined) {\r\n            this.privContext.phraseDetection = {\r\n                enrichment: {\r\n                    pronunciationAssessment: {}\r\n                }\r\n            };\r\n        }\r\n        this.privContext.phraseDetection.enrichment.pronunciationAssessment = JSON.parse(params);\r\n        if (this.privContext.phraseOutput === undefined) {\r\n            this.privContext.phraseOutput = {\r\n                detailed: {\r\n                    options: []\r\n                },\r\n                format: {}\r\n            };\r\n        }\r\n        this.privContext.phraseOutput.format = \"Detailed\";\r\n        this.privContext.phraseOutput.detailed.options.push(\"PronunciationAssessment\");\r\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"WordTimings\") === -1) {\r\n            this.privContext.phraseOutput.detailed.options.push(\"WordTimings\");\r\n        }\r\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"SNR\") === -1) {\r\n            this.privContext.phraseOutput.detailed.options.push(\"SNR\");\r\n        }\r\n    }\r\n\r\n    public toJSON(): string {\r\n\r\n        const dgi: IDynamicGrammar = this.privDynamicGrammar.generateGrammarObject();\r\n        this.setSection(\"dgi\", dgi);\r\n\r\n        const ret: string = JSON.stringify(this.privContext);\r\n        return ret;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// speech.endDetected\r\nexport interface ISpeechDetected {\r\n    Offset: number;\r\n}\r\n\r\nexport class SpeechDetected implements ISpeechDetected {\r\n    private privSpeechStartDetected: ISpeechDetected;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechStartDetected = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechDetected {\r\n        return new SpeechDetected(json);\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechStartDetected.Offset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ReplayableAudioNode } from \"../common.browser/Exports\";\r\nimport { ConnectionOpenResponse } from \"../common/ConnectionOpenResponse\";\r\nimport {\r\n    ArgumentNullError,\r\n    ConnectionClosedEvent,\r\n    ConnectionEvent,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IConnection,\r\n    IDisposable,\r\n    IStreamChunk,\r\n    MessageType,\r\n    ServiceEvent,\r\n    Timeout\r\n} from \"../common/Exports\";\r\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyId,\r\n    RecognitionEventArgs,\r\n    Recognizer,\r\n    SessionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"../sdk/Exports\";\r\nimport { Callback } from \"../sdk/Transcription/IConversation\";\r\nimport {\r\n    AgentConfig,\r\n    DynamicGrammarBuilder,\r\n    ISpeechConfigAudioDevice,\r\n    RecognitionMode,\r\n    RequestSession,\r\n    SpeechContext,\r\n    SpeechDetected,\r\n    type\r\n} from \"./Exports\";\r\nimport {\r\n    AuthInfo,\r\n    IAuthentication,\r\n} from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\nexport abstract class ServiceRecognizerBase implements IDisposable {\r\n    private privAuthentication: IAuthentication;\r\n    private privConnectionFactory: IConnectionFactory;\r\n\r\n    // A promise for a configured connection.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionConfigurationPromise: Promise<IConnection>;\r\n\r\n    // A promise for a connection, but one that has not had the speech context sent yet.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionPromise: Promise<IConnection>;\r\n    private privAuthFetchEventId: string;\r\n    private privIsDisposed: boolean;\r\n    private privMustReportEndOfStream: boolean;\r\n    private privConnectionEvents: EventSource<ConnectionEvent>;\r\n    private privServiceEvents: EventSource<ServiceEvent>;\r\n    private privDynamicGrammar: DynamicGrammarBuilder;\r\n    private privAgentConfig: AgentConfig;\r\n    private privServiceHasSentMessage: boolean;\r\n    private privActivityTemplate: string;\r\n    private privSetTimeout: (cb: () => void, delay: number) => number = setTimeout;\r\n    private privAudioSource: IAudioSource;\r\n    private privIsLiveAudio: boolean = false;\r\n    protected privSpeechContext: SpeechContext;\r\n    protected privRequestSession: RequestSession;\r\n    protected privConnectionId: string;\r\n    protected privRecognizerConfig: RecognizerConfig;\r\n    protected privRecognizer: Recognizer;\r\n    protected privSuccessCallback: (e: SpeechRecognitionResult) => void;\r\n    protected privErrorCallback: (e: string) => void;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        recognizer: Recognizer) {\r\n\r\n        if (!authentication) {\r\n            throw new ArgumentNullError(\"authentication\");\r\n        }\r\n\r\n        if (!connectionFactory) {\r\n            throw new ArgumentNullError(\"connectionFactory\");\r\n        }\r\n\r\n        if (!audioSource) {\r\n            throw new ArgumentNullError(\"audioSource\");\r\n        }\r\n\r\n        if (!recognizerConfig) {\r\n            throw new ArgumentNullError(\"recognizerConfig\");\r\n        }\r\n\r\n        this.privMustReportEndOfStream = false;\r\n        this.privAuthentication = authentication;\r\n        this.privConnectionFactory = connectionFactory;\r\n        this.privAudioSource = audioSource;\r\n        this.privRecognizerConfig = recognizerConfig;\r\n        this.privIsDisposed = false;\r\n        this.privRecognizer = recognizer;\r\n        this.privRequestSession = new RequestSession(this.privAudioSource.id());\r\n        this.privConnectionEvents = new EventSource<ConnectionEvent>();\r\n        this.privServiceEvents = new EventSource<ServiceEvent>();\r\n        this.privDynamicGrammar = new DynamicGrammarBuilder();\r\n        this.privSpeechContext = new SpeechContext(this.privDynamicGrammar);\r\n        this.privAgentConfig = new AgentConfig();\r\n        if (typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") {\r\n            this.privSetTimeout = Timeout.setTimeout;\r\n        }\r\n\r\n        this.connectionEvents.attach(async (connectionEvent: ConnectionEvent): Promise<void> => {\r\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                const connectionClosedEvent = connectionEvent as ConnectionClosedEvent;\r\n                if (connectionClosedEvent.statusCode === 1003 ||\r\n                    connectionClosedEvent.statusCode === 1007 ||\r\n                    connectionClosedEvent.statusCode === 1002 ||\r\n                    connectionClosedEvent.statusCode === 4000 ||\r\n                    this.privRequestSession.numConnectionAttempts > this.privRecognizerConfig.maxRetryCount\r\n                ) {\r\n                    await this.cancelRecognitionLocal(CancellationReason.Error,\r\n                        connectionClosedEvent.statusCode === 1007 ? CancellationErrorCode.BadRequestParameters : CancellationErrorCode.ConnectionFailure,\r\n                        connectionClosedEvent.reason + \" websocket error code: \" + connectionClosedEvent.statusCode);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public get audioSource(): IAudioSource {\r\n        return this.privAudioSource;\r\n    }\r\n\r\n    public get speechContext(): SpeechContext {\r\n        return this.privSpeechContext;\r\n    }\r\n\r\n    public get dynamicGrammar(): DynamicGrammarBuilder {\r\n        return this.privDynamicGrammar;\r\n    }\r\n\r\n    public get agentConfig(): AgentConfig {\r\n        return this.privAgentConfig;\r\n    }\r\n\r\n    public set conversationTranslatorToken(token: string) {\r\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.ConversationTranslator_Token, token);\r\n    }\r\n\r\n    public set authentication(auth: IAuthentication) {\r\n        this.privAuthentication = this.authentication;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        this.privIsDisposed = true;\r\n        if (this.privConnectionConfigurationPromise) {\r\n            try {\r\n                const connection: IConnection = await this.privConnectionConfigurationPromise;\r\n                await connection.dispose(reason);\r\n            } catch (error) {\r\n                // The connection is in a bad state. But we're trying to kill it, so...\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    public get connectionEvents(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionEvents;\r\n    }\r\n\r\n    public get serviceEvents(): EventSource<ServiceEvent> {\r\n        return this.privServiceEvents;\r\n    }\r\n\r\n    public get recognitionMode(): RecognitionMode {\r\n        return this.privRecognizerConfig.recognitionMode;\r\n    }\r\n\r\n    protected recognizeOverride: (recoMode: RecognitionMode, sc: (e: SpeechRecognitionResult) => void, ec: (e: string) => void) => any = undefined;\r\n\r\n    public async recognize(\r\n        recoMode: RecognitionMode,\r\n        successCallback: (e: SpeechRecognitionResult) => void,\r\n        errorCallBack: (e: string) => void,\r\n    ): Promise<void> {\r\n\r\n        if (this.recognizeOverride !== undefined) {\r\n            return this.recognizeOverride(recoMode, successCallback, errorCallBack);\r\n        }\r\n        // Clear the existing configuration promise to force a re-transmission of config and context.\r\n        this.privConnectionConfigurationPromise = null;\r\n        this.privRecognizerConfig.recognitionMode = recoMode;\r\n\r\n        this.privSuccessCallback = successCallback;\r\n        this.privErrorCallback = errorCallBack;\r\n\r\n        this.privRequestSession.startNewRecognition();\r\n        this.privRequestSession.listenForServiceTelemetry(this.privAudioSource.events);\r\n\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n        let audioNode: ReplayableAudioNode;\r\n\r\n        try {\r\n            const audioStreamNode: IAudioStreamNode = await this.audioSource.attach(this.privRequestSession.audioNodeId);\r\n            const format: AudioStreamFormatImpl = await this.audioSource.format;\r\n            const deviceInfo: ISpeechConfigAudioDevice = await this.audioSource.deviceInfo;\r\n            this.privIsLiveAudio = deviceInfo.type && deviceInfo.type === type.Microphones;\r\n\r\n            audioNode = new ReplayableAudioNode(audioStreamNode, format.avgBytesPerSec);\r\n            await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\r\n            this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\r\n\r\n        } catch (error) {\r\n            await this.privRequestSession.onStopRecognizing();\r\n            throw error;\r\n        }\r\n\r\n        try {\r\n            await conPromise;\r\n        } catch (error) {\r\n            await this.cancelRecognitionLocal(CancellationReason.Error, CancellationErrorCode.ConnectionFailure, error);\r\n            return;\r\n        }\r\n\r\n        const sessionStartEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n\r\n        if (!!this.privRecognizer.sessionStarted) {\r\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\r\n        }\r\n\r\n        const messageRetrievalPromise = this.receiveMessage();\r\n        const audioSendPromise = this.sendAudio(audioNode);\r\n\r\n        audioSendPromise.catch(async (error: string) => {\r\n            await this.cancelRecognitionLocal(CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n        });\r\n\r\n        return;\r\n    }\r\n\r\n    public async stopRecognizing(): Promise<void> {\r\n        if (this.privRequestSession.isRecognizing) {\r\n            try {\r\n                await this.audioSource.turnOff();\r\n                await this.sendFinalAudio();\r\n                await this.privRequestSession.onStopRecognizing();\r\n                await this.privRequestSession.turnCompletionPromise;\r\n            } finally {\r\n                await this.privRequestSession.dispose();\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    public async connect(): Promise<void> {\r\n        await this.connectImpl();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public connectAsync(cb?: Callback, err?: Callback): void {\r\n        this.connectImpl().then((connection: IConnection): void => {\r\n            try {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }\r\n        }, (reason: any): void => {\r\n            try {\r\n                if (!!err) {\r\n                    err(reason);\r\n                }\r\n                /* tslint:disable:no-empty */\r\n            } catch (error) {\r\n            }\r\n        });\r\n    }\r\n\r\n    protected disconnectOverride: () => Promise<void> = undefined;\r\n\r\n    public async disconnect(): Promise<void> {\r\n        await this.cancelRecognitionLocal(CancellationReason.Error,\r\n            CancellationErrorCode.NoError,\r\n            \"Disconnecting\");\r\n\r\n        if (this.disconnectOverride !== undefined) {\r\n            await this.disconnectOverride();\r\n        }\r\n\r\n        try {\r\n            await (await this.privConnectionPromise).dispose();\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        this.privConnectionPromise = null;\r\n    }\r\n\r\n    // Called when telemetry data is sent to the service.\r\n    // Used for testing Telemetry capture.\r\n    public static telemetryData: (json: string) => void;\r\n    public static telemetryDataEnabled: boolean = true;\r\n\r\n    public sendMessage(message: string): void { }\r\n\r\n    public async sendNetworkMessage(path: string, payload: string | ArrayBuffer): Promise<void> {\r\n        const type: MessageType = typeof payload === \"string\" ? MessageType.Text : MessageType.Binary;\r\n        const contentType: string = typeof payload === \"string\" ? \"application/json\" : \"\";\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        return connection.send(new SpeechConnectionMessage(type, path, this.privRequestSession.requestId, contentType, payload));\r\n    }\r\n\r\n    public set activityTemplate(messagePayload: string) { this.privActivityTemplate = messagePayload; }\r\n    public get activityTemplate(): string { return this.privActivityTemplate; }\r\n\r\n    protected abstract processTypeSpecificMessages(\r\n        connectionMessage: SpeechConnectionMessage,\r\n        successCallback?: (e: SpeechRecognitionResult) => void,\r\n        errorCallBack?: (e: string) => void): Promise<boolean>;\r\n\r\n    protected async sendTelemetryData(): Promise<void> {\r\n        const telemetryData = this.privRequestSession.getTelemetry();\r\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true ||\r\n            this.privIsDisposed ||\r\n            null === telemetryData) {\r\n            return;\r\n        }\r\n\r\n        if (!!ServiceRecognizerBase.telemetryData) {\r\n            try {\r\n                ServiceRecognizerBase.telemetryData(telemetryData);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"telemetry\",\r\n            this.privRequestSession.requestId,\r\n            \"application/json\",\r\n            telemetryData));\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected abstract cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void;\r\n\r\n    // Cancels recognition.\r\n    protected async cancelRecognitionLocal(\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): Promise<void> {\r\n\r\n        if (!!this.privRequestSession.isRecognizing) {\r\n            await this.privRequestSession.onStopRecognizing();\r\n\r\n            this.cancelRecognition(\r\n                this.privRequestSession.sessionId,\r\n                this.privRequestSession.requestId,\r\n                cancellationReason,\r\n                errorCode,\r\n                error);\r\n        }\r\n    }\r\n\r\n    protected receiveMessageOverride: () => Promise<void> = undefined;\r\n\r\n    protected async receiveMessage(): Promise<void> {\r\n        try {\r\n            if (this.privIsDisposed) {\r\n                // We're done.\r\n                return;\r\n            }\r\n\r\n            let connection = await this.fetchConnection();\r\n            const message = await connection.read();\r\n\r\n            if (this.receiveMessageOverride !== undefined) {\r\n                return this.receiveMessageOverride();\r\n            }\r\n\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!message) {\r\n                if (!this.privRequestSession.isRecognizing) {\r\n                    return;\r\n                } else {\r\n                    return this.receiveMessage();\r\n                }\r\n            }\r\n\r\n            this.privServiceHasSentMessage = true;\r\n            const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\r\n\r\n            if (connectionMessage.requestId.toLowerCase() === this.privRequestSession.requestId.toLowerCase()) {\r\n                switch (connectionMessage.path.toLowerCase()) {\r\n                    case \"turn.start\":\r\n                        this.privMustReportEndOfStream = true;\r\n                        this.privRequestSession.onServiceTurnStartResponse();\r\n                        break;\r\n\r\n                    case \"speech.startdetected\":\r\n                        const speechStartDetected: SpeechDetected = SpeechDetected.fromJSON(connectionMessage.textBody);\r\n                        const speechStartEventArgs = new RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\r\n                        if (!!this.privRecognizer.speechStartDetected) {\r\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\r\n                        }\r\n                        break;\r\n\r\n                    case \"speech.enddetected\":\r\n                        let json: string;\r\n                        if (connectionMessage.textBody.length > 0) {\r\n                            json = connectionMessage.textBody;\r\n                        } else {\r\n                            // If the request was empty, the JSON returned is empty.\r\n                            json = \"{ Offset: 0 }\";\r\n                        }\r\n                        const speechStopDetected: SpeechDetected = SpeechDetected.fromJSON(json);\r\n                        // Only shrink the buffers for continuous recognition.\r\n                        // For single shot, the speech.phrase message will come after the speech.end and it should own buffer shrink.\r\n                        if (this.privRecognizerConfig.isContinuousRecognition) {\r\n                            this.privRequestSession.onServiceRecognized(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset);\r\n                        }\r\n                        const speechStopEventArgs = new RecognitionEventArgs(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\r\n                        if (!!this.privRecognizer.speechEndDetected) {\r\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\r\n                        }\r\n                        break;\r\n\r\n                    case \"turn.end\":\r\n                        await this.sendTelemetryData();\r\n                        if (this.privRequestSession.isSpeechEnded && this.privMustReportEndOfStream) {\r\n                            this.privMustReportEndOfStream = false;\r\n                            await this.cancelRecognitionLocal(CancellationReason.EndOfStream, CancellationErrorCode.NoError, undefined);\r\n                        }\r\n                        const sessionStopEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n                        await this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition);\r\n                        if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\r\n                            if (!!this.privRecognizer.sessionStopped) {\r\n                                this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\r\n                            }\r\n                            return;\r\n                        } else {\r\n                            connection = await this.fetchConnection();\r\n                            await this.sendPrePayloadJSON(connection);\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        if (!await this.processTypeSpecificMessages(connectionMessage)) {\r\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\r\n                            if (!!this.privServiceEvents) {\r\n                                this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\r\n                            }\r\n                        }\r\n                }\r\n            }\r\n            return this.receiveMessage();\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected sendSpeechContext = (connection: IConnection): Promise<void> => {\r\n        const speechContextJson = this.speechContext.toJSON();\r\n        this.privRequestSession.onSpeechContext();\r\n\r\n        if (speechContextJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.context\",\r\n                this.privRequestSession.requestId,\r\n                \"application/json\",\r\n                speechContextJson));\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected sendPrePayloadJSONOverride: (connection: IConnection) => Promise<void> = undefined;\r\n\r\n    // Encapsulated for derived service recognizers that need to send additional JSON\r\n    protected async sendPrePayloadJSON(connection: IConnection): Promise<void> {\r\n        if (this.sendPrePayloadJSONOverride !== undefined) {\r\n            return this.sendPrePayloadJSONOverride(connection);\r\n        }\r\n\r\n        await this.sendSpeechContext(connection);\r\n        await this.sendWaveHeader(connection);\r\n        return;\r\n    }\r\n\r\n    protected async sendWaveHeader(connection: IConnection): Promise<void> {\r\n        const format: AudioStreamFormatImpl = await this.audioSource.format;\r\n        // this.writeBufferToConsole(format.header);\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Binary,\r\n            \"audio\",\r\n            this.privRequestSession.requestId,\r\n            \"audio/x-wav\",\r\n            format.header\r\n        ));\r\n    }\r\n\r\n    protected postConnectImplOverride: (connection: Promise<IConnection>) => Promise<IConnection> = undefined;\r\n\r\n    // Establishes a websocket connection to the end point.\r\n    protected connectImpl(): Promise<IConnection> {\r\n        if (this.privConnectionPromise) {\r\n            return this.privConnectionPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionPromise = null;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.connectImpl();\r\n                }\r\n                return this.privConnectionPromise;\r\n            }, (error: string): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionPromise = null;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.connectImpl();\r\n            });\r\n        }\r\n\r\n        this.privConnectionPromise = this.retryableConnect();\r\n\r\n        // Attach an empty handler to allow the promise to run in the background while\r\n        // other startup events happen. It'll eventually be awaited on.\r\n        this.privConnectionPromise.catch(() => { });\r\n\r\n        if (this.postConnectImplOverride !== undefined) {\r\n            return this.postConnectImplOverride(this.privConnectionPromise);\r\n        }\r\n\r\n        return this.privConnectionPromise;\r\n    }\r\n\r\n    protected configConnectionOverride: (connection: IConnection) => Promise<IConnection> = undefined;\r\n\r\n    protected sendSpeechServiceConfig = (connection: IConnection, requestSession: RequestSession, SpeechServiceConfigJson: string): Promise<void> => {\r\n        // filter out anything that is not required for the service to work.\r\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true) {\r\n            const withTelemetry = JSON.parse(SpeechServiceConfigJson);\r\n\r\n            const replacement: any = {\r\n                context: {\r\n                    system: withTelemetry.context.system,\r\n                },\r\n            };\r\n\r\n            SpeechServiceConfigJson = JSON.stringify(replacement);\r\n        }\r\n\r\n        if (this.privRecognizerConfig.parameters.getProperty(\"TranscriptionService_SingleChannel\", \"false\").toLowerCase() === \"true\") {\r\n            const json: { context: any } = JSON.parse(SpeechServiceConfigJson);\r\n            json.context.DisableReferenceChannel = \"True\";\r\n            json.context.MicSpec = \"1_0_0\";\r\n            SpeechServiceConfigJson = JSON.stringify(json);\r\n        }\r\n\r\n        if (SpeechServiceConfigJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.config\",\r\n                requestSession.requestId,\r\n                \"application/json\",\r\n                SpeechServiceConfigJson));\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    protected async fetchConnection(): Promise<IConnection> {\r\n        if (this.privConnectionConfigurationPromise) {\r\n            return this.privConnectionConfigurationPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionConfigurationPromise = null;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.fetchConnection();\r\n                }\r\n                return this.privConnectionConfigurationPromise;\r\n            }, (error: string): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionConfigurationPromise = null;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.fetchConnection();\r\n            });\r\n        }\r\n\r\n        this.privConnectionConfigurationPromise = this.configureConnection();\r\n        return await this.privConnectionConfigurationPromise;\r\n    }\r\n\r\n    protected async sendAudio(audioStreamNode: IAudioStreamNode): Promise<void> {\r\n        const audioFormat: AudioStreamFormatImpl = await this.audioSource.format;\r\n\r\n        // The time we last sent data to the service.\r\n        let nextSendTime: number = Date.now();\r\n\r\n        // Max amount to send before we start to throttle\r\n        const fastLaneSizeMs: string = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-TransmitLengthBeforThrottleMs\", \"5000\");\r\n        const maxSendUnthrottledBytes: number = audioFormat.avgBytesPerSec / 1000 * parseInt(fastLaneSizeMs, 10);\r\n        const startRecogNumber: number = this.privRequestSession.recogNumber;\r\n\r\n        const readAndUploadCycle = async (): Promise<void> => {\r\n            // If speech is done, stop sending audio.\r\n            if (!this.privIsDisposed &&\r\n                !this.privRequestSession.isSpeechEnded &&\r\n                this.privRequestSession.isRecognizing &&\r\n                this.privRequestSession.recogNumber === startRecogNumber) {\r\n\r\n                const connection: IConnection = await this.fetchConnection();\r\n                const audioStreamChunk: IStreamChunk<ArrayBuffer> = await audioStreamNode.read();\r\n                // we have a new audio chunk to upload.\r\n                if (this.privRequestSession.isSpeechEnded) {\r\n                    // If service already recognized audio end then don't send any more audio\r\n                    return;\r\n                }\r\n\r\n                let payload: ArrayBuffer;\r\n                let sendDelay: number;\r\n\r\n                if (!audioStreamChunk || audioStreamChunk.isEnd) {\r\n                    payload = null;\r\n                    sendDelay = 0;\r\n                } else {\r\n                    payload = audioStreamChunk.buffer;\r\n\r\n                    this.privRequestSession.onAudioSent(payload.byteLength);\r\n\r\n                    if (maxSendUnthrottledBytes >= this.privRequestSession.bytesSent) {\r\n                        sendDelay = 0;\r\n                    } else {\r\n                        sendDelay = Math.max(0, nextSendTime - Date.now());\r\n                    }\r\n                }\r\n\r\n                if (0 !== sendDelay) {\r\n                    await this.delay(sendDelay);\r\n                }\r\n\r\n                if (payload !== null) {\r\n                    nextSendTime = Date.now() + (payload.byteLength * 1000 / (audioFormat.avgBytesPerSec * 2));\r\n                }\r\n\r\n                // Are we still alive?\r\n                if (!this.privIsDisposed &&\r\n                    !this.privRequestSession.isSpeechEnded &&\r\n                    this.privRequestSession.isRecognizing &&\r\n                    this.privRequestSession.recogNumber === startRecogNumber) {\r\n                    connection.send(\r\n                        new SpeechConnectionMessage(MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, payload)\r\n                    ).catch(() => {\r\n                        this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition).catch(() => { });\r\n                    });\r\n\r\n                    if (!audioStreamChunk?.isEnd) {\r\n                        // this.writeBufferToConsole(payload);\r\n                        // Regardless of success or failure, schedule the next upload.\r\n                        // If the underlying connection was broken, the next cycle will\r\n                        // get a new connection and re-transmit missing audio automatically.\r\n                        return readAndUploadCycle();\r\n                    } else {\r\n                        // the audio stream has been closed, no need to schedule next\r\n                        // read-upload cycle.\r\n                        if (!this.privIsLiveAudio) {\r\n                            this.privRequestSession.onSpeechEnded();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        return readAndUploadCycle();\r\n    }\r\n\r\n    private async retryableConnect(): Promise<IConnection> {\r\n        let isUnAuthorized: boolean = false;\r\n\r\n        this.privAuthFetchEventId = createNoDashGuid();\r\n        const sessionId: string = this.privRequestSession.sessionId;\r\n        this.privConnectionId = (sessionId !== undefined) ? sessionId : createNoDashGuid();\r\n\r\n        this.privRequestSession.onPreConnectionStart(this.privAuthFetchEventId, this.privConnectionId);\r\n        let lastStatusCode: number = 0;\r\n        let lastReason: string = \"\";\r\n\r\n        while (this.privRequestSession.numConnectionAttempts <= this.privRecognizerConfig.maxRetryCount) {\r\n\r\n            // Get the auth information for the connection. This is a bit of overkill for the current API surface, but leaving the plumbing in place to be able to raise a developer-customer\r\n            // facing event when a connection fails to let them try and provide new auth information.\r\n            const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\r\n            const auth: AuthInfo = await authPromise;\r\n\r\n            await this.privRequestSession.onAuthCompleted(false);\r\n\r\n            // Create the connection\r\n            const connection: IConnection = this.privConnectionFactory.create(this.privRecognizerConfig, auth, this.privConnectionId);\r\n            // Attach the telemetry handlers.\r\n            this.privRequestSession.listenForServiceTelemetry(connection.events);\r\n\r\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\r\n            // it'll stop sending events.\r\n            connection.events.attach((event: ConnectionEvent) => {\r\n                this.connectionEvents.onEvent(event);\r\n            });\r\n\r\n            const response: ConnectionOpenResponse = await connection.open();\r\n            // 200 == everything is fine.\r\n            if (response.statusCode === 200) {\r\n                await this.privRequestSession.onConnectionEstablishCompleted(response.statusCode);\r\n                return Promise.resolve(connection);\r\n            } else if (response.statusCode === 1006) {\r\n                isUnAuthorized = true;\r\n            }\r\n\r\n            lastStatusCode = response.statusCode;\r\n            lastReason = response.reason;\r\n\r\n            this.privRequestSession.onRetryConnection();\r\n        }\r\n\r\n        await this.privRequestSession.onConnectionEstablishCompleted(lastStatusCode, lastReason);\r\n        return Promise.reject(`Unable to contact server. StatusCode: ${lastStatusCode}, ${this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint)} Reason: ${lastReason}`);\r\n    }\r\n\r\n    private delay(delayMs: number): Promise<void> {\r\n        return new Promise((resolve: () => void, reject: (error: string) => void) => {\r\n            this.privSetTimeout(resolve, delayMs);\r\n        });\r\n    }\r\n\r\n    private writeBufferToConsole(buffer: ArrayBuffer): void {\r\n        let out: string = \"Buffer Size: \";\r\n        if (null === buffer) {\r\n            out += \"null\";\r\n        } else {\r\n            const readView: Uint8Array = new Uint8Array(buffer);\r\n            out += buffer.byteLength + \"\\r\\n\";\r\n            for (let i: number = 0; i < buffer.byteLength; i++) {\r\n                out += readView[i].toString(16).padStart(2, \"0\") + \" \";\r\n            }\r\n        }\r\n        // tslint:disable-next-line:no-console\r\n        console.info(out);\r\n    }\r\n\r\n    private async sendFinalAudio(): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await connection.send(new SpeechConnectionMessage(MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, null));\r\n        return;\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\r\n    private async configureConnection(): Promise<IConnection> {\r\n        const connection: IConnection = await this.connectImpl();\r\n        if (this.configConnectionOverride !== undefined) {\r\n            return this.configConnectionOverride(connection);\r\n        }\r\n        await this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\r\n        await this.sendPrePayloadJSON(connection);\r\n        return connection;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport interface IAuthentication {\r\n    fetch(authFetchEventId: string): Promise<AuthInfo>;\r\n    fetchOnExpiry(authFetchEventId: string): Promise<AuthInfo>;\r\n}\r\n\r\nexport class AuthInfo {\r\n    private privHeaderName: string;\r\n    private privToken: string;\r\n\r\n    public constructor(headerName: string, token: string) {\r\n        this.privHeaderName = headerName;\r\n        this.privToken = token;\r\n    }\r\n\r\n    public get headerName(): string {\r\n        return this.privHeaderName;\r\n    }\r\n\r\n    public get token(): string {\r\n        return this.privToken;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n} from \"../common/Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport {\r\n    AuthInfo,\r\n    IAuthentication\r\n} from \"./IAuthentication\";\r\n\r\n/**\r\n * @class\r\n */\r\nexport class CognitiveSubscriptionKeyAuthentication implements IAuthentication {\r\n    private privAuthInfo: AuthInfo;\r\n\r\n    /**\r\n     * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\r\n     * @constructor\r\n     * @param {string} subscriptionKey - The subscription key\r\n     */\r\n    constructor(subscriptionKey: string) {\r\n        if (!subscriptionKey) {\r\n            throw new ArgumentNullError(\"subscriptionKey\");\r\n        }\r\n\r\n        this.privAuthInfo = new AuthInfo(HeaderNames.AuthKey, subscriptionKey);\r\n    }\r\n\r\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\r\n    public fetch = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return Promise.resolve(this.privAuthInfo);\r\n    }\r\n\r\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\r\n    public fetchOnExpiry = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return Promise.resolve(this.privAuthInfo);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError } from \"../common/Exports\";\r\nimport { AuthInfo, IAuthentication } from \"./IAuthentication\";\r\n\r\nconst AuthHeader: string = \"Authorization\";\r\n\r\nexport class CognitiveTokenAuthentication implements IAuthentication {\r\n    private static privTokenPrefix: string = \"bearer \";\r\n    private privFetchCallback: (authFetchEventId: string) => Promise<string>;\r\n    private privFetchOnExpiryCallback: (authFetchEventId: string) => Promise<string>;\r\n\r\n    constructor(fetchCallback: (authFetchEventId: string) => Promise<string>, fetchOnExpiryCallback: (authFetchEventId: string) => Promise<string>) {\r\n        if (!fetchCallback) {\r\n            throw new ArgumentNullError(\"fetchCallback\");\r\n        }\r\n\r\n        if (!fetchOnExpiryCallback) {\r\n            throw new ArgumentNullError(\"fetchOnExpiryCallback\");\r\n        }\r\n\r\n        this.privFetchCallback = fetchCallback;\r\n        this.privFetchOnExpiryCallback = fetchOnExpiryCallback;\r\n    }\r\n\r\n    public fetch = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return this.privFetchCallback(authFetchEventId).then((token: string) => new AuthInfo(AuthHeader, CognitiveTokenAuthentication.privTokenPrefix + token));\r\n    }\r\n\r\n    public fetchOnExpiry = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return this.privFetchOnExpiryCallback(authFetchEventId).then((token: string) => new AuthInfo(AuthHeader, CognitiveTokenAuthentication.privTokenPrefix + token));\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CognitiveSubscriptionKeyAuthentication,\r\n    CognitiveTokenAuthentication,\r\n    Context,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    OS,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    Deferred,\r\n    marshalPromiseToCallbacks\r\n} from \"../common/Exports\";\r\nimport {\r\n    Contracts\r\n} from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    Connection,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    RecognitionEventArgs,\r\n    SessionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines the base class Recognizer which mainly contains common event handlers.\r\n * @class Recognizer\r\n */\r\nexport abstract class Recognizer {\r\n    private privDisposed: boolean;\r\n    protected audioConfig: AudioConfig;\r\n    protected privReco: ServiceRecognizerBase;\r\n    protected privProperties: PropertyCollection;\r\n    private privConnectionFactory: IConnectionFactory;\r\n\r\n    /**\r\n     * Creates and initializes an instance of a Recognizer\r\n     * @constructor\r\n     * @param {AudioConfig} audioInput - An optional audio input stream associated with the recognizer\r\n     */\r\n    protected constructor(audioConfig: AudioConfig, properties: PropertyCollection, connectionFactory: IConnectionFactory) {\r\n        this.audioConfig = (audioConfig !== undefined) ? audioConfig : AudioConfig.fromDefaultMicrophoneInput();\r\n        this.privDisposed = false;\r\n        this.privProperties = properties.clone();\r\n        this.privConnectionFactory = connectionFactory;\r\n        this.implCommonRecognizerSetup();\r\n    }\r\n\r\n    /**\r\n     * Defines event handler for session started events.\r\n     * @member Recognizer.prototype.sessionStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStarted: (sender: Recognizer, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for session stopped events.\r\n     * @member Recognizer.prototype.sessionStopped\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStopped: (sender: Recognizer, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for speech started events.\r\n     * @member Recognizer.prototype.speechStartDetected\r\n     * @function\r\n     * @public\r\n     */\r\n    public speechStartDetected: (sender: Recognizer, event: RecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for speech stopped events.\r\n     * @member Recognizer.prototype.speechEndDetected\r\n     * @function\r\n     * @public\r\n     */\r\n    public speechEndDetected: (sender: Recognizer, event: RecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member Recognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * Internal data member to support fromRecognizer* pattern methods on other classes.\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public get internalData(): object {\r\n        return this.privReco;\r\n    }\r\n\r\n    /**\r\n     * This method performs cleanup of resources.\r\n     * The Boolean parameter disposing indicates whether the method is called\r\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\r\n     * Derived classes should override this method to dispose resource if needed.\r\n     * @member Recognizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - Flag to request disposal.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposed = true;\r\n\r\n        if (disposing) {\r\n            if (this.privReco) {\r\n                await this.privReco.audioSource.turnOff();\r\n                await this.privReco.dispose();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method returns the current state of the telemetry setting.\r\n     * @member Recognizer.prototype.telemetryEnabled\r\n     * @function\r\n     * @public\r\n     * @returns true if the telemetry is enabled, false otherwise.\r\n     */\r\n    public static get telemetryEnabled(): boolean {\r\n        return ServiceRecognizerBase.telemetryDataEnabled;\r\n    }\r\n\r\n    /**\r\n     * This method globally enables or disables telemetry.\r\n     * @member Recognizer.prototype.enableTelemetry\r\n     * @function\r\n     * @public\r\n     * @param enabled - Global setting for telemetry collection.\r\n     * If set to true, telemetry information like microphone errors,\r\n     * recognition errors are collected and sent to Microsoft.\r\n     * If set to false, no telemetry is sent to Microsoft.\r\n     */\r\n    /* tslint:disable:member-ordering */\r\n    public static enableTelemetry(enabled: boolean): void {\r\n        ServiceRecognizerBase.telemetryDataEnabled = enabled;\r\n    }\r\n\r\n    //\r\n    // ################################################################################################################\r\n    // IMPLEMENTATION.\r\n    // Move to independent class\r\n    // ################################################################################################################\r\n    //\r\n    protected abstract createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig;\r\n\r\n    // Creates the correct service recognizer for the type\r\n    protected abstract createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase;\r\n\r\n    // Does the generic recognizer setup that is common across all recognizer types.\r\n    protected implCommonRecognizerSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const recognizerConfig = this.createRecognizerConfig(\r\n            new SpeechServiceConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion))));\r\n\r\n        this.privReco = this.createServiceRecognizer(\r\n            Recognizer.getAuthFromProperties(this.privProperties),\r\n            this.privConnectionFactory,\r\n            this.audioConfig,\r\n            recognizerConfig);\r\n    }\r\n\r\n    protected async recognizeOnceAsyncImpl(recognitionMode: RecognitionMode): Promise<SpeechRecognitionResult> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        const ret: Deferred<SpeechRecognitionResult> = new Deferred<SpeechRecognitionResult>();\r\n\r\n        await this.implRecognizerStop();\r\n        await this.privReco.recognize(recognitionMode, ret.resolve, ret.reject);\r\n        const result: SpeechRecognitionResult = await ret.promise;\r\n        await this.implRecognizerStop();\r\n\r\n        return result;\r\n\r\n    }\r\n\r\n    protected async startContinuousRecognitionAsyncImpl(recognitionMode: RecognitionMode): Promise<void> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n\r\n        await this.implRecognizerStop();\r\n        await this.privReco.recognize(recognitionMode, undefined, undefined);\r\n    }\r\n\r\n    protected async stopContinuousRecognitionAsyncImpl(): Promise<void> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        await this.implRecognizerStop();\r\n    }\r\n\r\n    protected async implRecognizerStop(): Promise<void> {\r\n        if (this.privReco) {\r\n            await this.privReco.stopRecognizing();\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected static getAuthFromProperties(properties: PropertyCollection): IAuthentication {\r\n        const subscriptionKey = properties.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\r\n        const authentication = (subscriptionKey && subscriptionKey !== \"\") ?\r\n            new CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\r\n            new CognitiveTokenAuthentication(\r\n                (authFetchEventId: string): Promise<string> => {\r\n                    const authorizationToken = properties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                },\r\n                (authFetchEventId: string): Promise<string> => {\r\n                    const authorizationToken = properties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                });\r\n\r\n        return authentication;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class ConnectionOpenResponse {\r\n    private privStatusCode: number;\r\n    private privReason: string;\r\n\r\n    constructor(statusCode: number, reason: string) {\r\n        this.privStatusCode = statusCode;\r\n        this.privReason = reason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { MessageType } from \"./ConnectionMessage\";\r\nimport { ArgumentNullError, InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\n\r\nexport class RawWebsocketMessage {\r\n    private privMessageType: MessageType;\r\n    private privPayload: any = null;\r\n    private privId: string;\r\n\r\n    public constructor(messageType: MessageType, payload: any, id?: string) {\r\n        if (!payload) {\r\n            throw new ArgumentNullError(\"payload\");\r\n        }\r\n\r\n        if (messageType === MessageType.Binary && payload.__proto__.constructor.name !== \"ArrayBuffer\") {\r\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\r\n        }\r\n\r\n        if (messageType === MessageType.Text && !(typeof (payload) === \"string\")) {\r\n            throw new InvalidOperationError(\"Payload must be a string\");\r\n        }\r\n\r\n        this.privMessageType = messageType;\r\n        this.privPayload = payload;\r\n        this.privId = id ? id : createNoDashGuid();\r\n    }\r\n\r\n    public get messageType(): MessageType {\r\n        return this.privMessageType;\r\n    }\r\n\r\n    public get payload(): any {\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get textContent(): string {\r\n        if (this.privMessageType === MessageType.Binary) {\r\n            throw new InvalidOperationError(\"Not supported for binary message\");\r\n        }\r\n\r\n        return this.privPayload as string;\r\n    }\r\n\r\n    public get binaryContent(): ArrayBuffer {\r\n        if (this.privMessageType === MessageType.Text) {\r\n            throw new InvalidOperationError(\"Not supported for text message\");\r\n        }\r\n\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class OCSPEvent extends PlatformEvent {\r\n    private privSignature: string;\r\n\r\n    constructor(eventName: string, eventType: EventType, signature: string) {\r\n        super(eventName, eventType);\r\n\r\n        this.privSignature = signature;\r\n    }\r\n}\r\n\r\nexport class OCSPMemoryCacheHitEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPMemoryCacheHitEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheMissEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPCacheMissEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPDiskCacheHitEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPDiskCacheHitEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheUpdateNeededEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPCacheUpdateNeededEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPMemoryCacheStoreEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPMemoryCacheStoreEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPDiskCacheStoreEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPDiskCacheStoreEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheUpdateCompleteEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPCacheUpdateCompleteEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPStapleReceivedEvent extends OCSPEvent {\r\n    constructor() {\r\n        super(\"OCSPStapleReceivedEvent\", EventType.Debug, \"\");\r\n    }\r\n}\r\n\r\nexport class OCSPWSUpgradeStartedEvent extends OCSPEvent {\r\n    constructor(serialNumber: string) {\r\n        super(\"OCSPWSUpgradeStartedEvent\", EventType.Debug, serialNumber);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheEntryExpiredEvent extends OCSPEvent {\r\n    private privExpireTime: number;\r\n\r\n    constructor(serialNumber: string, expireTime: number) {\r\n        super(\"OCSPCacheEntryExpiredEvent\", EventType.Debug, serialNumber);\r\n        this.privExpireTime = expireTime;\r\n    }\r\n}\r\n\r\nexport class OCSPCacheEntryNeedsRefreshEvent extends OCSPEvent {\r\n    private privExpireTime: number;\r\n    private privStartTime: number;\r\n\r\n    constructor(serialNumber: string, startTime: number, expireTime: number) {\r\n        super(\"OCSPCacheEntryNeedsRefreshEvent\", EventType.Debug, serialNumber);\r\n        this.privExpireTime = expireTime;\r\n        this.privStartTime = startTime;\r\n    }\r\n}\r\n\r\nexport class OCSPCacheHitEvent extends OCSPEvent {\r\n    private privExpireTime: number;\r\n    private privStartTime: number;\r\n    private privExpireTimeString: string;\r\n    private privStartTimeString: string;\r\n\r\n    constructor(serialNumber: string, startTime: number, expireTime: number) {\r\n        super(\"OCSPCacheHitEvent\", EventType.Debug, serialNumber);\r\n        this.privExpireTime = expireTime;\r\n        this.privExpireTimeString = new Date(expireTime).toLocaleDateString();\r\n        this.privStartTime = startTime;\r\n        this.privStartTimeString = new Date(startTime).toLocaleTimeString();\r\n    }\r\n}\r\n\r\nexport class OCSPVerificationFailedEvent extends OCSPEvent {\r\n    private privError: string;\r\n\r\n    constructor(serialNumber: string, error: string) {\r\n        super(\"OCSPVerificationFailedEvent\", EventType.Debug, serialNumber);\r\n        this.privError = error;\r\n    }\r\n}\r\n\r\nexport class OCSPCacheFetchErrorEvent extends OCSPEvent {\r\n    private privError: string;\r\n\r\n    constructor(serialNumber: string, error: string) {\r\n        super(\"OCSPCacheFetchErrorEvent\", EventType.Debug, serialNumber);\r\n        this.privError = error;\r\n    }\r\n}\r\n\r\nexport class OCSPResponseRetrievedEvent extends OCSPEvent {\r\n    constructor(serialNumber: string) {\r\n        super(\"OCSPResponseRetrievedEvent\", EventType.Debug, serialNumber);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheUpdateErrorEvent extends OCSPEvent {\r\n    private privError: string;\r\n\r\n    constructor(serialNumber: string, error: string) {\r\n        super(\"OCSPCacheUpdateErrorEvent\", EventType.Debug, serialNumber);\r\n        this.privError = error;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport * as http from \"http\";\r\nimport * as tls from \"tls\";\r\nimport * as parse from \"url-parse\";\r\nimport * as ocsp from \"../../external/ocsp/ocsp\";\r\nimport {\r\n    Events,\r\n    OCSPCacheEntryExpiredEvent,\r\n    OCSPCacheEntryNeedsRefreshEvent,\r\n    OCSPCacheFetchErrorEvent,\r\n    OCSPCacheHitEvent,\r\n    OCSPCacheMissEvent,\r\n    OCSPCacheUpdateCompleteEvent,\r\n    OCSPCacheUpdateNeededEvent,\r\n    OCSPDiskCacheHitEvent,\r\n    OCSPDiskCacheStoreEvent,\r\n    OCSPEvent,\r\n    OCSPMemoryCacheHitEvent,\r\n    OCSPMemoryCacheStoreEvent,\r\n    OCSPResponseRetrievedEvent,\r\n    OCSPStapleReceivedEvent,\r\n    OCSPVerificationFailedEvent,\r\n} from \"../common/Exports\";\r\nimport { IStringDictionary } from \"../common/IDictionary\";\r\nimport { ProxyInfo } from \"./ProxyInfo\";\r\n\r\nimport Agent from \"agent-base\";\r\n\r\n// @ts-ignore\r\nimport Cache from \"async-disk-cache\";\r\nimport HttpsProxyAgent from \"https-proxy-agent\";\r\nimport * as net from \"net\";\r\nimport { OCSPCacheUpdateErrorEvent } from \"../common/OCSPEvents\";\r\n\r\nexport class CertCheckAgent {\r\n\r\n    // Test hook to enable forcing expiration / refresh to happen.\r\n    public static testTimeOffset: number = 0;\r\n\r\n    // Test hook to disable stapling for cache testing.\r\n    public static forceDisableOCSPStapling: boolean = false;\r\n\r\n    // An in memory cache for recived responses.\r\n    private static privMemCache: IStringDictionary<Buffer> = {};\r\n\r\n    // The on disk cache.\r\n    private static privDiskCache: Cache;\r\n\r\n    private privProxyInfo: ProxyInfo;\r\n\r\n    constructor(proxyInfo?: ProxyInfo) {\r\n        if (!!proxyInfo) {\r\n            this.privProxyInfo = proxyInfo;\r\n        }\r\n\r\n        // Initialize this here to allow tests to set the env variable before the cache is constructed.\r\n        if (!CertCheckAgent.privDiskCache) {\r\n            CertCheckAgent.privDiskCache = new Cache(\"microsoft-cognitiveservices-speech-sdk-cache\", { supportBuffer: true, location: (typeof process !== \"undefined\" && !!process.env.SPEECH_OCSP_CACHE_ROOT) ? process.env.SPEECH_OCSP_CACHE_ROOT : undefined });\r\n        }\r\n    }\r\n\r\n    // Test hook to force the disk cache to be recreated.\r\n    public static forceReinitDiskCache(): void {\r\n        CertCheckAgent.privDiskCache = undefined;\r\n        CertCheckAgent.privMemCache = {};\r\n    }\r\n\r\n    public GetAgent(disableStapling?: boolean): http.Agent {\r\n        const agent: any = new Agent.Agent(this.CreateConnection);\r\n\r\n        if (this.privProxyInfo !== undefined &&\r\n            this.privProxyInfo.HostName !== undefined &&\r\n            this.privProxyInfo.Port > 0) {\r\n            const proxyName: string = \"privProxyInfo\";\r\n            agent[proxyName] = this.privProxyInfo;\r\n        }\r\n\r\n        return agent;\r\n    }\r\n\r\n    private static GetProxyAgent(proxyInfo: ProxyInfo): HttpsProxyAgent {\r\n        const httpProxyOptions: HttpsProxyAgent.HttpsProxyAgentOptions = {\r\n            host: proxyInfo.HostName,\r\n            port: proxyInfo.Port,\r\n        };\r\n\r\n        if (!!proxyInfo.UserName) {\r\n            httpProxyOptions.headers = {\r\n                \"Proxy-Authentication\": \"Basic \" + new Buffer(proxyInfo.UserName + \":\" + (proxyInfo.Password === undefined) ? \"\" : proxyInfo.Password).toString(\"base64\"),\r\n            };\r\n        } else {\r\n            httpProxyOptions.headers = {};\r\n        }\r\n\r\n        httpProxyOptions.headers.requestOCSP = \"true\";\r\n\r\n        const httpProxyAgent: HttpsProxyAgent = new HttpsProxyAgent(httpProxyOptions);\r\n        return httpProxyAgent;\r\n    }\r\n\r\n    private static async OCSPCheck(socketPromise: Promise<net.Socket>, proxyInfo: ProxyInfo): Promise<net.Socket> {\r\n        let ocspRequest: ocsp.Request;\r\n        let stapling: Buffer;\r\n        let resolved: boolean = false;\r\n\r\n        const socket: net.Socket = await socketPromise;\r\n        socket.cork();\r\n\r\n        const tlsSocket: tls.TLSSocket = socket as tls.TLSSocket;\r\n\r\n        return new Promise<net.Socket>((resolve: (value: net.Socket) => void, reject: (error: string | Error) => void) => {\r\n            socket.on(\"OCSPResponse\", (data: Buffer): void => {\r\n                if (!!data) {\r\n                    this.onEvent(new OCSPStapleReceivedEvent());\r\n                    stapling = data;\r\n                }\r\n            });\r\n\r\n            socket.on(\"error\", (error: Error) => {\r\n                if (!resolved) {\r\n                    resolved = true;\r\n                    socket.destroy();\r\n                    reject(error);\r\n                }\r\n            });\r\n\r\n            tlsSocket.on(\"secure\", async () => {\r\n                const peer: tls.DetailedPeerCertificate = tlsSocket.getPeerCertificate(true);\r\n                try {\r\n                    const issuer: tls.DetailedPeerCertificate = await this.GetIssuer(peer);\r\n\r\n                    // We always need a request to verify the response.\r\n                    ocspRequest = ocsp.request.generate(peer.raw, issuer.raw);\r\n\r\n                    // Do we have a result for this certificate in our memory cache?\r\n                    const sig: string = ocspRequest.id.toString(\"hex\");\r\n\r\n                    // Stapled response trumps cached response.\r\n                    if (!stapling) {\r\n                        const cacheEntry: Buffer = await CertCheckAgent.GetResponseFromCache(sig, ocspRequest, proxyInfo);\r\n                        stapling = cacheEntry;\r\n                    }\r\n\r\n                    await this.VerifyOCSPResponse(stapling, ocspRequest, proxyInfo);\r\n\r\n                    socket.uncork();\r\n                    resolved = true;\r\n                    resolve(socket);\r\n                } catch (e) {\r\n                    socket.destroy();\r\n                    resolved = true;\r\n                    reject(e);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private static GetIssuer(peer: tls.DetailedPeerCertificate): Promise<tls.DetailedPeerCertificate> {\r\n        if (peer.issuerCertificate) {\r\n            return Promise.resolve(peer.issuerCertificate);\r\n        }\r\n\r\n        return new Promise<tls.DetailedPeerCertificate>((resolve: (value: tls.DetailedPeerCertificate) => void, reject: (reason: string) => void) => {\r\n            const ocspAgent: ocsp.Agent = new ocsp.Agent({});\r\n            ocspAgent.fetchIssuer(peer, null, (error: string, value: tls.DetailedPeerCertificate): void => {\r\n                if (!!error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                resolve(value);\r\n            });\r\n        });\r\n    }\r\n\r\n    private static async GetResponseFromCache(signature: string, ocspRequest: ocsp.Request, proxyInfo: ProxyInfo): Promise<Buffer> {\r\n        let cachedResponse: Buffer = CertCheckAgent.privMemCache[signature];\r\n\r\n        if (!!cachedResponse) {\r\n            this.onEvent(new OCSPMemoryCacheHitEvent(signature));\r\n        }\r\n\r\n        // Do we have a result for this certificate on disk in %TMP%?\r\n        if (!cachedResponse) {\r\n            try {\r\n                const diskCacheResponse: any = await CertCheckAgent.privDiskCache.get(signature);\r\n                if (!!diskCacheResponse.isCached) {\r\n                    CertCheckAgent.onEvent(new OCSPDiskCacheHitEvent(signature));\r\n                    CertCheckAgent.StoreMemoryCacheEntry(signature, diskCacheResponse.value);\r\n                    cachedResponse = diskCacheResponse.value;\r\n                }\r\n            } catch (error) {\r\n                cachedResponse = null;\r\n            }\r\n        }\r\n\r\n        if (!cachedResponse) {\r\n            return cachedResponse;\r\n        }\r\n\r\n        try {\r\n            const cachedOcspResponse: ocsp.Response = ocsp.utils.parseResponse(cachedResponse);\r\n            const tbsData = cachedOcspResponse.value.tbsResponseData;\r\n            if (tbsData.responses.length < 1) {\r\n                this.onEvent(new OCSPCacheFetchErrorEvent(signature, \"Not enough data in cached response\"));\r\n                return;\r\n            }\r\n\r\n            const cachedStartTime: number = tbsData.responses[0].thisUpdate;\r\n            const cachedNextTime: number = tbsData.responses[0].nextUpdate;\r\n\r\n            if (cachedNextTime < (Date.now() + this.testTimeOffset - 60000)) {\r\n                // Cached entry has expired.\r\n                this.onEvent(new OCSPCacheEntryExpiredEvent(signature, cachedNextTime));\r\n                cachedResponse = null;\r\n            } else {\r\n                // If we're within one day of the next update, or 50% of the way through the validity period,\r\n                // background an update to the cache.\r\n\r\n                const minUpdate: number = Math.min(24 * 60 * 60 * 1000, (cachedNextTime - cachedStartTime) / 2);\r\n\r\n                if ((cachedNextTime - (Date.now() + this.testTimeOffset)) < minUpdate) {\r\n                    this.onEvent(new OCSPCacheEntryNeedsRefreshEvent(signature, cachedStartTime, cachedNextTime));\r\n                    this.UpdateCache(ocspRequest, proxyInfo).catch((error: string) => {\r\n                        // Well, not much we can do here.\r\n                        this.onEvent(new OCSPCacheUpdateErrorEvent(signature, error.toString()));\r\n                    });\r\n                } else {\r\n                    this.onEvent(new OCSPCacheHitEvent(signature, cachedStartTime, cachedNextTime));\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this.onEvent(new OCSPCacheFetchErrorEvent(signature, error));\r\n            cachedResponse = null;\r\n        }\r\n        if (!cachedResponse) {\r\n            this.onEvent(new OCSPCacheMissEvent(signature));\r\n        }\r\n        return cachedResponse;\r\n    }\r\n\r\n    private static async VerifyOCSPResponse(cacheValue: Buffer, ocspRequest: ocsp.Request, proxyInfo: ProxyInfo): Promise<void> {\r\n        let ocspResponse: Buffer = cacheValue;\r\n        const sig: string = ocspRequest.certID.toString(\"hex\");\r\n\r\n        // Do we have a valid response?\r\n        if (!ocspResponse) {\r\n            ocspResponse = await CertCheckAgent.GetOCSPResponse(ocspRequest, proxyInfo);\r\n        }\r\n\r\n        return new Promise<void>((resolve: () => void, reject: (error: string | Error) => void) => {\r\n            ocsp.verify({ request: ocspRequest, response: ocspResponse }, (error: string, result: any): void => {\r\n                if (!!error) {\r\n                    CertCheckAgent.onEvent(new OCSPVerificationFailedEvent(ocspRequest.id.toString(\"hex\"), error));\r\n\r\n                    // Bad Cached Value? One more try without the cache.\r\n                    if (!!cacheValue) {\r\n                        this.VerifyOCSPResponse(null, ocspRequest, proxyInfo).then(() => {\r\n                            resolve();\r\n                        }, (error: Error) => {\r\n                            reject(error);\r\n                        });\r\n                    } else {\r\n                        reject(error);\r\n                    }\r\n                } else {\r\n                    if (!cacheValue) {\r\n                        CertCheckAgent.StoreCacheEntry(ocspRequest.id.toString(\"hex\"), ocspResponse);\r\n                    }\r\n                    resolve();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private static async UpdateCache(req: ocsp.Request, proxyInfo: ProxyInfo): Promise<void> {\r\n        const signature: string = req.id.toString(\"hex\");\r\n        this.onEvent(new OCSPCacheUpdateNeededEvent(signature));\r\n\r\n        const rawResponse: Buffer = await this.GetOCSPResponse(req, proxyInfo);\r\n        this.StoreCacheEntry(signature, rawResponse);\r\n        this.onEvent(new OCSPCacheUpdateCompleteEvent(req.id.toString(\"hex\")));\r\n\r\n    }\r\n\r\n    private static StoreCacheEntry(sig: string, rawResponse: Buffer): void {\r\n        this.StoreMemoryCacheEntry(sig, rawResponse);\r\n        this.StoreDiskCacheEntry(sig, rawResponse);\r\n    }\r\n\r\n    private static StoreMemoryCacheEntry(sig: string, rawResponse: Buffer): void {\r\n        this.privMemCache[sig] = rawResponse;\r\n        this.onEvent(new OCSPMemoryCacheStoreEvent(sig));\r\n    }\r\n\r\n    private static StoreDiskCacheEntry(sig: string, rawResponse: Buffer): void {\r\n        this.privDiskCache.set(sig, rawResponse).then(() => {\r\n            this.onEvent(new OCSPDiskCacheStoreEvent(sig));\r\n        });\r\n    }\r\n\r\n    private static GetOCSPResponse(req: ocsp.Request, proxyInfo: ProxyInfo): Promise<Buffer> {\r\n\r\n        const ocspMethod: string = \"1.3.6.1.5.5.7.48.1\";\r\n        let options: http.RequestOptions = {};\r\n\r\n        if (!!proxyInfo) {\r\n            const agent: HttpsProxyAgent = CertCheckAgent.GetProxyAgent(proxyInfo);\r\n            options.agent = agent;\r\n        }\r\n\r\n        return new Promise<Buffer>((resolve: (value: Buffer) => void, reject: (error: string | Error) => void) => {\r\n            ocsp.utils.getAuthorityInfo(req.cert, ocspMethod, (error: string, uri: string): void => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                const parsedUri: {[k: string]: any} = parse.default(uri);\r\n                parsedUri.path = parsedUri.pathname;\r\n                options = { ...options, ...parsedUri };\r\n\r\n                ocsp.utils.getResponse(options, req.data, (error: string, raw: Buffer): void => {\r\n                    if (error) {\r\n                        reject(error);\r\n                        return;\r\n                    }\r\n\r\n                    this.onEvent(new OCSPResponseRetrievedEvent(req.certID.toString(\"hex\")));\r\n                    resolve(raw);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    private static onEvent = (event: OCSPEvent): void => {\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private CreateConnection(request: Agent.ClientRequest, options: Agent.RequestOptions): Promise<net.Socket> {\r\n        const enableOCSP: boolean = (typeof process !== \"undefined\" && process.env.NODE_TLS_REJECT_UNAUTHORIZED !== \"0\" && process.env.SPEECH_CONDUCT_OCSP_CHECK !== \"0\") && options.secureEndpoint;\r\n        let socketPromise: Promise<net.Socket>;\r\n\r\n        options = {\r\n            ...options,\r\n            ...{\r\n                requestOCSP: !CertCheckAgent.forceDisableOCSPStapling,\r\n                servername: options.host\r\n            }\r\n        };\r\n\r\n        if (!!this.privProxyInfo) {\r\n            const httpProxyAgent: HttpsProxyAgent = CertCheckAgent.GetProxyAgent(this.privProxyInfo);\r\n            const baseAgent: Agent.Agent = httpProxyAgent as unknown as Agent.Agent;\r\n\r\n            socketPromise = new Promise<net.Socket>((resolve: (value: net.Socket) => void, reject: (error: string | Error) => void) => {\r\n                baseAgent.callback(request, options, (error: Error, socket: net.Socket) => {\r\n                    if (!!error) {\r\n                        reject(error);\r\n                    } else {\r\n                        resolve(socket);\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            if (!!options.secureEndpoint) {\r\n                socketPromise = Promise.resolve(tls.connect(options));\r\n            } else {\r\n                socketPromise = Promise.resolve(net.connect(options));\r\n            }\r\n        }\r\n\r\n        if (!!enableOCSP) {\r\n            return CertCheckAgent.OCSPCheck(socketPromise, this.privProxyInfo);\r\n        } else {\r\n            return socketPromise;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { HeaderNames } from \"../common.speech/HeaderNames\";\r\nimport {\r\n    ArgumentNullError,\r\n    BackgroundEvent,\r\n    ConnectionClosedEvent,\r\n    ConnectionErrorEvent,\r\n    ConnectionEstablishedEvent,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    ConnectionMessageReceivedEvent,\r\n    ConnectionMessageSentEvent,\r\n    ConnectionOpenResponse,\r\n    ConnectionStartEvent,\r\n    ConnectionState,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IWebsocketMessageFormatter,\r\n    MessageType,\r\n    Queue,\r\n    RawWebsocketMessage,\r\n} from \"../common/Exports\";\r\nimport { ProxyInfo } from \"./ProxyInfo\";\r\n\r\n// Node.JS specific web socket / browser support.\r\nimport ws from \"ws\";\r\nimport { CertCheckAgent } from \"./CertChecks\";\r\n\r\ninterface ISendItem {\r\n    Message: ConnectionMessage;\r\n    RawWebsocketMessage: RawWebsocketMessage;\r\n    sendStatusDeferral: Deferred<void>;\r\n}\r\n\r\nexport class WebsocketMessageAdapter {\r\n    private privConnectionState: ConnectionState;\r\n    private privMessageFormatter: IWebsocketMessageFormatter;\r\n    private privWebsocketClient: WebSocket | ws;\r\n\r\n    private privSendMessageQueue: Queue<ISendItem>;\r\n    private privReceivingMessageQueue: Queue<ConnectionMessage>;\r\n    private privConnectionEstablishDeferral: Deferred<ConnectionOpenResponse>;\r\n    private privCertificateValidatedDeferral: Deferred<void>;\r\n    private privDisconnectDeferral: Deferred<void>;\r\n    private privConnectionEvents: EventSource<ConnectionEvent>;\r\n    private privConnectionId: string;\r\n    private privUri: string;\r\n    private proxyInfo: ProxyInfo;\r\n    private privHeaders: { [key: string]: string; };\r\n    private privLastErrorReceived: string;\r\n    private privEnableCompression: boolean;\r\n\r\n    public static forceNpmWebSocket: boolean = false;\r\n\r\n    public constructor(\r\n        uri: string,\r\n        connectionId: string,\r\n        messageFormatter: IWebsocketMessageFormatter,\r\n        proxyInfo: ProxyInfo,\r\n        headers: { [key: string]: string; },\r\n        enableCompression: boolean) {\r\n\r\n        if (!uri) {\r\n            throw new ArgumentNullError(\"uri\");\r\n        }\r\n\r\n        if (!messageFormatter) {\r\n            throw new ArgumentNullError(\"messageFormatter\");\r\n        }\r\n\r\n        this.proxyInfo = proxyInfo;\r\n        this.privConnectionEvents = new EventSource<ConnectionEvent>();\r\n        this.privConnectionId = connectionId;\r\n        this.privMessageFormatter = messageFormatter;\r\n        this.privConnectionState = ConnectionState.None;\r\n        this.privUri = uri;\r\n        this.privHeaders = headers;\r\n        this.privEnableCompression = enableCompression;\r\n\r\n        // Add the connection ID to the headers\r\n        this.privHeaders[HeaderNames.ConnectionId] = this.privConnectionId;\r\n\r\n        this.privLastErrorReceived = \"\";\r\n    }\r\n\r\n    public get state(): ConnectionState {\r\n        return this.privConnectionState;\r\n    }\r\n\r\n    public open = (): Promise<ConnectionOpenResponse> => {\r\n        if (this.privConnectionState === ConnectionState.Disconnected) {\r\n            return Promise.reject<ConnectionOpenResponse>(`Cannot open a connection that is in ${this.privConnectionState} state`);\r\n        }\r\n\r\n        if (this.privConnectionEstablishDeferral) {\r\n            return this.privConnectionEstablishDeferral.promise;\r\n        }\r\n\r\n        this.privConnectionEstablishDeferral = new Deferred<ConnectionOpenResponse>();\r\n        this.privCertificateValidatedDeferral = new Deferred<void>();\r\n\r\n        this.privConnectionState = ConnectionState.Connecting;\r\n\r\n        try {\r\n\r\n            if (typeof WebSocket !== \"undefined\" && !WebsocketMessageAdapter.forceNpmWebSocket) {\r\n                // Browser handles cert checks.\r\n                this.privCertificateValidatedDeferral.resolve();\r\n\r\n                this.privWebsocketClient = new WebSocket(this.privUri);\r\n            } else {\r\n                const options: ws.ClientOptions = { headers: this.privHeaders, perMessageDeflate: this.privEnableCompression };\r\n                // The ocsp library will handle validation for us and fail the connection if needed.\r\n                this.privCertificateValidatedDeferral.resolve();\r\n                const checkAgent: CertCheckAgent = new CertCheckAgent(this.proxyInfo);\r\n\r\n                options.agent = checkAgent.GetAgent();\r\n\r\n                // Workaround for https://github.com/microsoft/cognitive-services-speech-sdk-js/issues/465\r\n                // Which is root caused by https://github.com/TooTallNate/node-agent-base/issues/61\r\n                const uri = new URL(this.privUri);\r\n                let protocol: string = uri.protocol;\r\n\r\n                if (protocol?.toLocaleLowerCase() === \"wss:\") {\r\n                    protocol = \"https:\";\r\n                } else if (protocol?.toLocaleLowerCase() === \"ws:\") {\r\n                    protocol = \"http:\";\r\n                }\r\n                (options.agent as any).protocol = protocol;\r\n                this.privWebsocketClient = new ws(this.privUri, options);\r\n            }\r\n\r\n            this.privWebsocketClient.binaryType = \"arraybuffer\";\r\n            this.privReceivingMessageQueue = new Queue<ConnectionMessage>();\r\n            this.privDisconnectDeferral = new Deferred<void>();\r\n            this.privSendMessageQueue = new Queue<ISendItem>();\r\n            this.processSendQueue().catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n        } catch (error) {\r\n            this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(500, error));\r\n            return this.privConnectionEstablishDeferral.promise;\r\n        }\r\n\r\n        this.onEvent(new ConnectionStartEvent(this.privConnectionId, this.privUri));\r\n\r\n        this.privWebsocketClient.onopen = (e: { target: WebSocket | ws }) => {\r\n            this.privCertificateValidatedDeferral.promise.then((): void => {\r\n                this.privConnectionState = ConnectionState.Connected;\r\n                this.onEvent(new ConnectionEstablishedEvent(this.privConnectionId));\r\n                this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(200, \"\"));\r\n            }, (error: string): void => {\r\n                this.privConnectionEstablishDeferral.reject(error);\r\n            });\r\n        };\r\n\r\n        this.privWebsocketClient.onerror = (e: { error: any; message: string; type: string; target: WebSocket | ws }) => {\r\n            this.onEvent(new ConnectionErrorEvent(this.privConnectionId, e.message, e.type));\r\n            this.privLastErrorReceived = e.message;\r\n        };\r\n\r\n        this.privWebsocketClient.onclose = (e: { wasClean: boolean; code: number; reason: string; target: WebSocket | ws }) => {\r\n            if (this.privConnectionState === ConnectionState.Connecting) {\r\n                this.privConnectionState = ConnectionState.Disconnected;\r\n                // this.onEvent(new ConnectionEstablishErrorEvent(this.connectionId, e.code, e.reason));\r\n                this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(e.code, e.reason + \" \" + this.privLastErrorReceived));\r\n            } else {\r\n                this.privConnectionState = ConnectionState.Disconnected;\r\n                this.privWebsocketClient = null;\r\n                this.onEvent(new ConnectionClosedEvent(this.privConnectionId, e.code, e.reason));\r\n            }\r\n\r\n            this.onClose(e.code, e.reason).catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n        };\r\n\r\n        this.privWebsocketClient.onmessage = (e: { data: ws.Data; type: string; target: WebSocket | ws }) => {\r\n            const networkReceivedTime = new Date().toISOString();\r\n            if (this.privConnectionState === ConnectionState.Connected) {\r\n                const deferred = new Deferred<ConnectionMessage>();\r\n                // let id = ++this.idCounter;\r\n                this.privReceivingMessageQueue.enqueueFromPromise(deferred.promise);\r\n                if (e.data instanceof ArrayBuffer) {\r\n                    const rawMessage = new RawWebsocketMessage(MessageType.Binary, e.data);\r\n                    this.privMessageFormatter\r\n                        .toConnectionMessage(rawMessage)\r\n                        .then((connectionMessage: ConnectionMessage) => {\r\n                            this.onEvent(new ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\r\n                            deferred.resolve(connectionMessage);\r\n                        }, (error: string) => {\r\n                            // TODO: Events for these ?\r\n                            deferred.reject(`Invalid binary message format. Error: ${error}`);\r\n                        });\r\n                } else {\r\n                    const rawMessage = new RawWebsocketMessage(MessageType.Text, e.data);\r\n                    this.privMessageFormatter\r\n                        .toConnectionMessage(rawMessage)\r\n                        .then((connectionMessage: ConnectionMessage) => {\r\n                            this.onEvent(new ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\r\n                            deferred.resolve(connectionMessage);\r\n                        }, (error: string) => {\r\n                            // TODO: Events for these ?\r\n                            deferred.reject(`Invalid text message format. Error: ${error}`);\r\n                        });\r\n                }\r\n            }\r\n        };\r\n\r\n        return this.privConnectionEstablishDeferral.promise;\r\n    }\r\n\r\n    public send = (message: ConnectionMessage): Promise<void> => {\r\n        if (this.privConnectionState !== ConnectionState.Connected) {\r\n            return Promise.reject(`Cannot send on connection that is in ${ConnectionState[this.privConnectionState]} state`);\r\n        }\r\n\r\n        const messageSendStatusDeferral = new Deferred<void>();\r\n        const messageSendDeferral = new Deferred<ISendItem>();\r\n\r\n        this.privSendMessageQueue.enqueueFromPromise(messageSendDeferral.promise);\r\n\r\n        this.privMessageFormatter\r\n            .fromConnectionMessage(message)\r\n            .then((rawMessage: RawWebsocketMessage) => {\r\n                messageSendDeferral.resolve({\r\n                    Message: message,\r\n                    RawWebsocketMessage: rawMessage,\r\n                    sendStatusDeferral: messageSendStatusDeferral,\r\n                });\r\n            }, (error: string) => {\r\n                messageSendDeferral.reject(`Error formatting the message. ${error}`);\r\n            });\r\n\r\n        return messageSendStatusDeferral.promise;\r\n    }\r\n\r\n    public read = (): Promise<ConnectionMessage> => {\r\n        if (this.privConnectionState !== ConnectionState.Connected) {\r\n            return Promise.reject<ConnectionMessage>(`Cannot read on connection that is in ${this.privConnectionState} state`);\r\n        }\r\n\r\n        return this.privReceivingMessageQueue.dequeue();\r\n    }\r\n\r\n    public close = (reason?: string): Promise<void> => {\r\n        if (this.privWebsocketClient) {\r\n            if (this.privConnectionState !== ConnectionState.Disconnected) {\r\n                this.privWebsocketClient.close(1000, reason ? reason : \"Normal closure by client\");\r\n            }\r\n        } else {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return this.privDisconnectDeferral.promise;\r\n    }\r\n\r\n    public get events(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionEvents;\r\n    }\r\n\r\n    private sendRawMessage = (sendItem: ISendItem): Promise<void> => {\r\n        try {\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!sendItem) {\r\n                return Promise.resolve();\r\n            }\r\n\r\n            this.onEvent(new ConnectionMessageSentEvent(this.privConnectionId, new Date().toISOString(), sendItem.Message));\r\n\r\n            // add a check for the ws readystate in order to stop the red console error 'WebSocket is already in CLOSING or CLOSED state' appearing\r\n            if (this.isWebsocketOpen) {\r\n                this.privWebsocketClient.send(sendItem.RawWebsocketMessage.payload);\r\n            } else {\r\n                return Promise.reject(\"websocket send error: Websocket not ready \" + this.privConnectionId + \" \" + sendItem.Message.id + \" \" + new Error().stack);\r\n            }\r\n            return Promise.resolve();\r\n\r\n        } catch (e) {\r\n            return Promise.reject(`websocket send error: ${e}`);\r\n        }\r\n    }\r\n\r\n    private async onClose(code: number, reason: string): Promise<void> {\r\n        const closeReason = `Connection closed. ${code}: ${reason}`;\r\n        this.privConnectionState = ConnectionState.Disconnected;\r\n        this.privDisconnectDeferral.resolve();\r\n        await this.privReceivingMessageQueue.drainAndDispose((pendingReceiveItem: ConnectionMessage) => {\r\n            // TODO: Events for these ?\r\n            // Logger.instance.onEvent(new LoggingEvent(LogType.Warning, null, `Failed to process received message. Reason: ${closeReason}, Message: ${JSON.stringify(pendingReceiveItem)}`));\r\n        }, closeReason);\r\n\r\n        await this.privSendMessageQueue.drainAndDispose((pendingSendItem: ISendItem) => {\r\n            pendingSendItem.sendStatusDeferral.reject(closeReason);\r\n        }, closeReason);\r\n    }\r\n\r\n    private async processSendQueue(): Promise<void> {\r\n        while (true) {\r\n            const itemToSend: Promise<ISendItem> = this.privSendMessageQueue.dequeue();\r\n            const sendItem: ISendItem = await itemToSend;\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!sendItem) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                await this.sendRawMessage(sendItem);\r\n                sendItem.sendStatusDeferral.resolve();\r\n            } catch (sendError) {\r\n                sendItem.sendStatusDeferral.reject(sendError);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onEvent = (event: ConnectionEvent): void => {\r\n        this.privConnectionEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private get isWebsocketOpen(): boolean {\r\n        return this.privWebsocketClient && this.privWebsocketClient.readyState === this.privWebsocketClient.OPEN;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    ConnectionOpenResponse,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    EventSource,\r\n    IConnection,\r\n    IStringDictionary,\r\n    IWebsocketMessageFormatter,\r\n} from \"../common/Exports\";\r\nimport { ProxyInfo } from \"./ProxyInfo\";\r\nimport { WebsocketMessageAdapter } from \"./WebsocketMessageAdapter\";\r\n\r\nexport class WebsocketConnection implements IConnection {\r\n\r\n    private privUri: string;\r\n    private privMessageFormatter: IWebsocketMessageFormatter;\r\n    private privConnectionMessageAdapter: WebsocketMessageAdapter;\r\n    private privId: string;\r\n    private privIsDisposed: boolean = false;\r\n\r\n    public constructor(\r\n        uri: string,\r\n        queryParameters: IStringDictionary<string>,\r\n        headers: IStringDictionary<string>,\r\n        messageFormatter: IWebsocketMessageFormatter,\r\n        proxyInfo: ProxyInfo,\r\n        enableCompression: boolean = false,\r\n        connectionId?: string) {\r\n\r\n        if (!uri) {\r\n            throw new ArgumentNullError(\"uri\");\r\n        }\r\n\r\n        if (!messageFormatter) {\r\n            throw new ArgumentNullError(\"messageFormatter\");\r\n        }\r\n\r\n        this.privMessageFormatter = messageFormatter;\r\n\r\n        let queryParams = \"\";\r\n        let i = 0;\r\n\r\n        if (queryParameters) {\r\n            for (const paramName in queryParameters) {\r\n                if (paramName) {\r\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\r\n                    const val = encodeURIComponent(queryParameters[paramName]);\r\n                    queryParams += `${paramName}=${val}`;\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (headers) {\r\n            for (const headerName in headers) {\r\n                if (headerName) {\r\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\r\n                    const val = encodeURIComponent(headers[headerName]);\r\n                    queryParams += `${headerName}=${val}`;\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.privUri = uri + queryParams;\r\n        this.privId = connectionId ? connectionId : createNoDashGuid();\r\n\r\n        this.privConnectionMessageAdapter = new WebsocketMessageAdapter(\r\n            this.privUri,\r\n            this.id,\r\n            this.privMessageFormatter,\r\n            proxyInfo,\r\n            headers,\r\n            enableCompression);\r\n    }\r\n\r\n    public async dispose(): Promise<void> {\r\n        this.privIsDisposed = true;\r\n\r\n        if (this.privConnectionMessageAdapter) {\r\n            await this.privConnectionMessageAdapter.close();\r\n        }\r\n    }\r\n\r\n    public isDisposed = (): boolean => {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public state = (): ConnectionState => {\r\n        return this.privConnectionMessageAdapter.state;\r\n    }\r\n\r\n    public open = (): Promise<ConnectionOpenResponse> => {\r\n        return this.privConnectionMessageAdapter.open();\r\n    }\r\n\r\n    public send = (message: ConnectionMessage): Promise<void> => {\r\n        return this.privConnectionMessageAdapter.send(message);\r\n    }\r\n\r\n    public read = (): Promise<ConnectionMessage> => {\r\n        return this.privConnectionMessageAdapter.read();\r\n    }\r\n\r\n    public get events(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionMessageAdapter.events;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognizerConfig } from \"../common.speech/Exports\";\r\nimport { PropertyCollection, PropertyId } from \"../sdk/Exports\";\r\n\r\nexport class ProxyInfo {\r\n    private privProxyHostName: string;\r\n    private privProxyPort: number;\r\n    private privProxyUserName: string;\r\n    private privProxyPassword: string;\r\n\r\n    private constructor(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string) {\r\n        this.privProxyHostName = proxyHostName;\r\n        this.privProxyPort = proxyPort;\r\n        this.privProxyUserName = proxyUserName;\r\n        this.privProxyPassword = proxyPassword;\r\n    }\r\n\r\n    public static fromParameters(parameters: PropertyCollection): ProxyInfo {\r\n        return new ProxyInfo(parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyHostName),\r\n            parseInt(parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyPort), 10),\r\n            parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyUserName),\r\n            parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyPassword));\r\n    }\r\n\r\n    public static fromRecognizerConfig(config: RecognizerConfig): ProxyInfo {\r\n        return this.fromParameters(config.parameters);\r\n    }\r\n\r\n    public get HostName(): string {\r\n        return this.privProxyHostName;\r\n    }\r\n\r\n    public get Port(): number {\r\n        return this.privProxyPort;\r\n    }\r\n\r\n    public get UserName(): string {\r\n        return this.privProxyUserName;\r\n    }\r\n\r\n    public get Password(): string {\r\n        return this.privProxyPassword;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class QueryParameterNames {\r\n    public static BotId: string = \"botid\";\r\n    public static CustomSpeechDeploymentId: string = \"cid\";\r\n    public static CustomVoiceDeploymentId: string = \"deploymentId\";\r\n    public static EnableAudioLogging: string = \"storeAudio\";\r\n    public static EnableLanguageId: string = \"lidEnabled\";\r\n    public static EnableWordLevelTimestamps: string = \"wordLevelTimestamps\";\r\n    public static EndSilenceTimeoutMs: string = \"endSilenceTimeoutMs\";\r\n    public static Format: string = \"format\";\r\n    public static InitialSilenceTimeoutMs: string = \"initialSilenceTimeoutMs\";\r\n    public static Language: string = \"language\";\r\n    public static Profanity: string = \"profanity\";\r\n    public static RequestBotStatusMessages: string = \"enableBotMessageStatus\";\r\n    public static StableIntermediateThreshold: string = \"stableIntermediateThreshold\";\r\n    public static StableTranslation: string = \"stableTranslation\";\r\n    public static TestHooks: string = \"testhooks\";\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ServicePropertiesPropertyName,\r\n} from \"../common.speech/Exports\";\r\nimport { IConnection, IStringDictionary } from \"../common/Exports\";\r\nimport { OutputFormat, PropertyId } from \"../sdk/Exports\";\r\nimport { AuthInfo, IConnectionFactory, RecognitionMode, RecognizerConfig, WebsocketMessageFormatter } from \"./Exports\";\r\nimport { QueryParameterNames } from \"./QueryParameterNames\";\r\n\r\nexport abstract class ConnectionFactoryBase implements IConnectionFactory {\r\n\r\n    public static getHostSuffix(region: string): string {\r\n        if (!!region) {\r\n            if (region.toLowerCase().startsWith(\"china\")) {\r\n                return \".azure.cn\";\r\n            }\r\n            if (region.toLowerCase().startsWith(\"usgov\")) {\r\n                return \".azure.us\";\r\n            }\r\n        }\r\n        return \".microsoft.com\";\r\n    }\r\n\r\n    public abstract create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection;\r\n\r\n    protected setCommonUrlParams(\r\n        config: RecognizerConfig,\r\n        queryParams: IStringDictionary<string>,\r\n        endpoint: string): void {\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceConnection_EnableAudioLogging,\r\n            QueryParameterNames.EnableAudioLogging,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps,\r\n            QueryParameterNames.EnableWordLevelTimestamps,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceResponse_ProfanityOption,\r\n            QueryParameterNames.Profanity,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceConnection_InitialSilenceTimeoutMs,\r\n            QueryParameterNames.InitialSilenceTimeoutMs,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceConnection_EndSilenceTimeoutMs,\r\n            QueryParameterNames.EndSilenceTimeoutMs,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceResponse_StablePartialResultThreshold,\r\n            QueryParameterNames.StableIntermediateThreshold,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        const serviceProperties: IStringDictionary<string> = JSON.parse(config.parameters.getProperty(ServicePropertiesPropertyName, \"{}\"));\r\n\r\n        Object.keys(serviceProperties).forEach((value: string, num: number, array: string[]) => {\r\n            queryParams[value] = serviceProperties[value];\r\n        });\r\n    }\r\n\r\n    protected setUrlParameter(\r\n        propId: PropertyId,\r\n        parameterName: string,\r\n        config: RecognizerConfig,\r\n        queryParams: IStringDictionary<string>,\r\n        endpoint: string): void {\r\n\r\n        const value: string = config.parameters.getProperty(propId, undefined);\r\n\r\n        if (value && (!endpoint || endpoint.search(parameterName) === -1)) {\r\n            queryParams[parameterName] = value.toLocaleLowerCase();\r\n        }\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * @class SynthesisStatus\r\n * @private\r\n */\r\nexport enum SynthesisStatus {\r\n    /**\r\n     * The response contains valid audio data.\r\n     * @member SynthesisStatus.Success\r\n     */\r\n    Success,\r\n\r\n    /**\r\n     * Indicates the end of audio data. No valid audio data is included in the message.\r\n     * @member SynthesisStatus.SynthesisEnd\r\n     */\r\n    SynthesisEnd,\r\n\r\n    /**\r\n     * Indicates an error occurred during synthesis data processing.\r\n     * @member SynthesisStatus.Error\r\n     */\r\n    Error,\r\n}\r\n\r\nexport enum RecognitionStatus {\r\n    Success,\r\n    NoMatch,\r\n    InitialSilenceTimeout,\r\n    BabbleTimeout,\r\n    Error,\r\n    EndOfDictation,\r\n    TooManyRequests,\r\n    BadRequest,\r\n    Forbidden,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionMessage,\r\n    Deferred,\r\n    IStringDictionary,\r\n    IWebsocketMessageFormatter,\r\n    MessageType,\r\n    RawWebsocketMessage,\r\n} from \"../common/Exports\";\r\n\r\nconst CRLF: string = \"\\r\\n\";\r\n\r\nexport class WebsocketMessageFormatter implements IWebsocketMessageFormatter {\r\n\r\n    public toConnectionMessage = (message: RawWebsocketMessage): Promise<ConnectionMessage> => {\r\n        const deferral = new Deferred<ConnectionMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const textMessage: string = message.textContent;\r\n                let headers: IStringDictionary<string> = {};\r\n                let body: string = null;\r\n\r\n                if (textMessage) {\r\n                    const headerBodySplit = textMessage.split(\"\\r\\n\\r\\n\");\r\n                    if (headerBodySplit && headerBodySplit.length > 0) {\r\n                        headers = this.parseHeaders(headerBodySplit[0]);\r\n                        if (headerBodySplit.length > 1) {\r\n                            body = headerBodySplit[1];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                deferral.resolve(new ConnectionMessage(message.messageType, body, headers, message.id));\r\n            } else if (message.messageType === MessageType.Binary) {\r\n                const binaryMessage: ArrayBuffer = message.binaryContent;\r\n                let headers: IStringDictionary<string> = {};\r\n                let body: ArrayBuffer = null;\r\n\r\n                if (!binaryMessage || binaryMessage.byteLength < 2) {\r\n                    throw new Error(\"Invalid binary message format. Header length missing.\");\r\n                }\r\n\r\n                const dataView = new DataView(binaryMessage);\r\n                const headerLength = dataView.getInt16(0);\r\n\r\n                if (binaryMessage.byteLength < headerLength + 2) {\r\n                    throw new Error(\"Invalid binary message format. Header content missing.\");\r\n                }\r\n\r\n                let headersString = \"\";\r\n                for (let i = 0; i < headerLength; i++) {\r\n                    headersString += String.fromCharCode((dataView).getInt8(i + 2));\r\n                }\r\n\r\n                headers = this.parseHeaders(headersString);\r\n\r\n                if (binaryMessage.byteLength > headerLength + 2) {\r\n                    body = binaryMessage.slice(2 + headerLength);\r\n                }\r\n\r\n                deferral.resolve(new ConnectionMessage(message.messageType, body, headers, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. Error: ${e}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n\r\n    public fromConnectionMessage = (message: ConnectionMessage): Promise<RawWebsocketMessage> => {\r\n        const deferral = new Deferred<RawWebsocketMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const payload = `${this.makeHeaders(message)}${CRLF}${message.textBody ? message.textBody : \"\"}`;\r\n\r\n                deferral.resolve(new RawWebsocketMessage(MessageType.Text, payload, message.id));\r\n\r\n            } else if (message.messageType === MessageType.Binary) {\r\n                const headersString = this.makeHeaders(message);\r\n                const content = message.binaryBody;\r\n\r\n                const headerBuffer = this.stringToArrayBuffer(headersString);\r\n                const headerInt8Array = new Int8Array(headerBuffer);\r\n                const headerLength = headerInt8Array.byteLength;\r\n\r\n                const payloadInt8Array = new Int8Array(2 + headerLength + (content ? content.byteLength : 0));\r\n                payloadInt8Array[0] = ((headerLength >> 8) & 0xff);\r\n                payloadInt8Array[1] = headerLength & 0xff;\r\n                payloadInt8Array.set(headerInt8Array, 2);\r\n\r\n                if (content) {\r\n                    const bodyInt8Array = new Int8Array(content);\r\n                    payloadInt8Array.set(bodyInt8Array, 2 + headerLength);\r\n                }\r\n\r\n                const payload: ArrayBuffer = payloadInt8Array.buffer;\r\n\r\n                deferral.resolve(new RawWebsocketMessage(MessageType.Binary, payload, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. ${e}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n\r\n    private makeHeaders = (message: ConnectionMessage): string => {\r\n        let headersString: string = \"\";\r\n\r\n        if (message.headers) {\r\n            for (const header in message.headers) {\r\n                if (header) {\r\n                    headersString += `${header}: ${message.headers[header]}${CRLF}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return headersString;\r\n    }\r\n\r\n    private parseHeaders = (headersString: string): IStringDictionary<string> => {\r\n        const headers: IStringDictionary<string> = {};\r\n\r\n        if (headersString) {\r\n            const headerMatches = headersString.match(/[^\\r\\n]+/g);\r\n            if (headers) {\r\n                for (const header of headerMatches) {\r\n                    if (header) {\r\n                        const separatorIndex = header.indexOf(\":\");\r\n                        const headerName = separatorIndex > 0 ? header.substr(0, separatorIndex).trim().toLowerCase() : header;\r\n                        const headerValue =\r\n                            separatorIndex > 0 && header.length > (separatorIndex + 1) ?\r\n                                header.substr(separatorIndex + 1).trim() :\r\n                                \"\";\r\n\r\n                        headers[headerName] = headerValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    private stringToArrayBuffer = (str: string): ArrayBuffer => {\r\n        const buffer = new ArrayBuffer(str.length);\r\n        const view = new DataView(buffer);\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint8(i, str.charCodeAt(i));\r\n        }\r\n        return buffer;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    ForceDictationPropertyName,\r\n    OutputFormatPropertyName,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports\";\r\nimport {\r\n    OutputFormat,\r\n    PropertyId\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport {\r\n    QueryParameterNames\r\n} from \"./QueryParameterNames\";\r\n\r\nexport class SpeechConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    private readonly interactiveRelativeUri: string = \"/speech/recognition/interactive/cognitiveservices/v1\";\r\n    private readonly conversationRelativeUri: string = \"/speech/recognition/conversation/cognitiveservices/v1\";\r\n    private readonly dictationRelativeUri: string = \"/speech/recognition/dictation/cognitiveservices/v1\";\r\n\r\n    public create = (\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection => {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, undefined);\r\n        const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n        const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".stt.speech\" + hostSuffix);\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n\r\n        const endpointId: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\r\n        const language: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\r\n\r\n        if (endpointId) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.CustomSpeechDeploymentId) === -1) {\r\n                queryParams[QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\r\n            }\r\n        } else if (language) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.Language) === -1) {\r\n                queryParams[QueryParameterNames.Language] = language;\r\n            }\r\n        }\r\n\r\n        if (!endpoint || endpoint.search(QueryParameterNames.Format) === -1) {\r\n            queryParams[QueryParameterNames.Format] = config.parameters.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]).toLowerCase();\r\n        }\r\n\r\n        if (config.autoDetectSourceLanguages !== undefined) {\r\n            queryParams[QueryParameterNames.EnableLanguageId] = \"true\";\r\n        }\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n\r\n        if (!endpoint) {\r\n            switch (config.recognitionMode) {\r\n                case RecognitionMode.Conversation:\r\n                    if (config.parameters.getProperty(ForceDictationPropertyName, \"false\") === \"true\") {\r\n                        endpoint = host + this.dictationRelativeUri;\r\n                    } else {\r\n                        endpoint = host + this.conversationRelativeUri;\r\n                    }\r\n                    break;\r\n                case RecognitionMode.Dictation:\r\n                    endpoint = host + this.dictationRelativeUri;\r\n                    break;\r\n                default:\r\n                    endpoint = host + this.interactiveRelativeUri; // default is interactive\r\n                    break;\r\n            }\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IPrimaryLanguage } from \"./SimpleSpeechPhrase\";\r\n\r\n// speech.hypothesis\r\nexport interface ISpeechHypothesis {\r\n    Text: string;\r\n    Offset: number;\r\n    Duration: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    SpeakerId?: string;\r\n}\r\n\r\nexport class SpeechHypothesis implements ISpeechHypothesis {\r\n    private privSpeechHypothesis: ISpeechHypothesis;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechHypothesis = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechHypothesis {\r\n        return new SpeechHypothesis(json);\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privSpeechHypothesis.Text;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechHypothesis.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSpeechHypothesis.Duration;\r\n    }\r\n\r\n    public get Language(): string {\r\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Language;\r\n    }\r\n\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Confidence;\r\n    }\r\n\r\n    public get SpeakerId(): string {\r\n        return this.privSpeechHypothesis.SpeakerId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionStatus } from \"../Exports\";\r\n\r\n// speech.phrase\r\nexport interface ISimpleSpeechPhrase {\r\n    RecognitionStatus: RecognitionStatus;\r\n    DisplayText: string;\r\n    Offset?: number;\r\n    Duration?: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    SpeakerId?: string;\r\n}\r\n\r\nexport interface IPrimaryLanguage {\r\n    Language: string;\r\n    Confidence: string;\r\n}\r\n\r\nexport class SimpleSpeechPhrase implements ISimpleSpeechPhrase {\r\n    private privSimpleSpeechPhrase: ISimpleSpeechPhrase;\r\n\r\n    private constructor(json: string) {\r\n        this.privSimpleSpeechPhrase = JSON.parse(json);\r\n        this.privSimpleSpeechPhrase.RecognitionStatus = (RecognitionStatus as any)[this.privSimpleSpeechPhrase.RecognitionStatus];\r\n    }\r\n\r\n    public static fromJSON(json: string): SimpleSpeechPhrase {\r\n        return new SimpleSpeechPhrase(json);\r\n    }\r\n\r\n    public get RecognitionStatus(): RecognitionStatus {\r\n        return this.privSimpleSpeechPhrase.RecognitionStatus;\r\n    }\r\n\r\n    public get DisplayText(): string {\r\n        return this.privSimpleSpeechPhrase.DisplayText;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSimpleSpeechPhrase.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSimpleSpeechPhrase.Duration;\r\n    }\r\n\r\n    public get Language(): string {\r\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Language;\r\n    }\r\n\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Confidence;\r\n    }\r\n\r\n    public get SpeakerId(): string {\r\n        return this.privSimpleSpeechPhrase.SpeakerId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfileType\r\n */\r\nexport enum VoiceProfileType {\r\n\r\n    /**\r\n     * Text independent speaker identification\r\n     * @member VoiceProfileType.TextIndependentIdentification\r\n     */\r\n    TextIndependentIdentification,\r\n\r\n    /**\r\n     * Text dependent speaker verification\r\n     * @member VoiceProfileType.TextDependentVerification\r\n     */\r\n    TextDependentVerification,\r\n\r\n    /**\r\n     * Text independent speaker verification\r\n     * @member VoiceProfileType.TextIndependentVerification\r\n     */\r\n    TextIndependentVerification,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ResultReason\r\n} from \"../sdk/Exports\";\r\nimport { RecognitionStatus } from \"./Exports\";\r\n\r\nexport class EnumTranslation {\r\n    public static implTranslateRecognitionResult(recognitionStatus: RecognitionStatus): ResultReason {\r\n        let reason = ResultReason.Canceled;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n                reason = ResultReason.RecognizedSpeech;\r\n                break;\r\n            case RecognitionStatus.NoMatch:\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n            case RecognitionStatus.EndOfDictation:\r\n                reason = ResultReason.NoMatch;\r\n                break;\r\n            case RecognitionStatus.Error:\r\n            case RecognitionStatus.BadRequest:\r\n            case RecognitionStatus.Forbidden:\r\n            default:\r\n                reason = ResultReason.Canceled;\r\n                break;\r\n        }\r\n        return reason;\r\n    }\r\n\r\n    public static implTranslateCancelResult(recognitionStatus: RecognitionStatus): CancellationReason {\r\n        let reason = CancellationReason.EndOfStream;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n            case RecognitionStatus.EndOfDictation:\r\n            case RecognitionStatus.NoMatch:\r\n                reason = CancellationReason.EndOfStream;\r\n                break;\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n            case RecognitionStatus.Error:\r\n            case RecognitionStatus.BadRequest:\r\n            case RecognitionStatus.Forbidden:\r\n            default:\r\n                reason = CancellationReason.Error;\r\n                break;\r\n        }\r\n        return reason;\r\n    }\r\n\r\n    public static implTranslateCancelErrorCode(recognitionStatus: RecognitionStatus): CancellationErrorCode {\r\n        let reason: CancellationErrorCode = CancellationErrorCode.NoError;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Error:\r\n                reason = CancellationErrorCode.ServiceError;\r\n                break;\r\n            case RecognitionStatus.TooManyRequests:\r\n                reason = CancellationErrorCode.TooManyRequests;\r\n                break;\r\n            case RecognitionStatus.BadRequest:\r\n                reason = CancellationErrorCode.BadRequestParameters;\r\n                break;\r\n            case RecognitionStatus.Forbidden:\r\n                reason = CancellationErrorCode.Forbidden;\r\n                break;\r\n            default:\r\n                reason = CancellationErrorCode.NoError;\r\n                break;\r\n        }\r\n\r\n        return reason;\r\n\r\n    }\r\n\r\n    public static implTranslateErrorDetails(cancellationErrorCode: CancellationErrorCode): string {\r\n        let errorDetails: string = \"The speech service encountered an internal error and could not continue.\";\r\n        switch (cancellationErrorCode) {\r\n            case CancellationErrorCode.Forbidden:\r\n                errorDetails = \"The recognizer is using a free subscription that ran out of quota.\";\r\n                break;\r\n            case CancellationErrorCode.BadRequestParameters:\r\n                errorDetails = \"Invalid parameter or unsupported audio format in the request.\";\r\n                break;\r\n            case CancellationErrorCode.TooManyRequests:\r\n                errorDetails = \"The number of parallel requests exceeded the number of allowed concurrent transcriptions.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return errorDetails;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IPrimaryLanguage, RecognitionStatus } from \"../Exports\";\r\n\r\n// speech.phrase for detailed\r\nexport interface IDetailedSpeechPhrase {\r\n    RecognitionStatus: RecognitionStatus;\r\n    NBest: IPhrase[];\r\n    Duration?: number;\r\n    Offset?: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    DisplayText?: string;\r\n    SpeakerId?: string;\r\n}\r\n\r\nexport interface IPhrase {\r\n    Confidence?: number;\r\n    Lexical: string;\r\n    ITN: string;\r\n    MaskedITN: string;\r\n    Display: string;\r\n    Words?: IWord[];\r\n}\r\n\r\nexport interface IWord {\r\n    Word: string;\r\n    Offset: number;\r\n    Duration: number;\r\n}\r\n\r\nexport class DetailedSpeechPhrase implements IDetailedSpeechPhrase {\r\n    private privDetailedSpeechPhrase: IDetailedSpeechPhrase;\r\n\r\n    private constructor(json: string) {\r\n        this.privDetailedSpeechPhrase = JSON.parse(json);\r\n        this.privDetailedSpeechPhrase.RecognitionStatus = (RecognitionStatus as any)[this.privDetailedSpeechPhrase.RecognitionStatus];\r\n    }\r\n\r\n    public static fromJSON(json: string): DetailedSpeechPhrase {\r\n        return new DetailedSpeechPhrase(json);\r\n    }\r\n\r\n    public getJsonWithCorrectedOffsets(baseOffset: number): string {\r\n        if (!!this.privDetailedSpeechPhrase.NBest) {\r\n            let firstWordOffset: number;\r\n            for (const phrase of this.privDetailedSpeechPhrase.NBest) {\r\n                if (!!phrase.Words && !!phrase.Words[0]) {\r\n                    firstWordOffset = phrase.Words[0].Offset;\r\n                    break;\r\n                }\r\n            }\r\n            if (!!firstWordOffset && firstWordOffset < baseOffset) {\r\n                const offset: number = baseOffset - firstWordOffset;\r\n                for (const details of this.privDetailedSpeechPhrase.NBest) {\r\n                    if (!!details.Words) {\r\n                        for (const word of details.Words) {\r\n                            word.Offset += offset;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return JSON.stringify(this.privDetailedSpeechPhrase);\r\n    }\r\n\r\n    public get RecognitionStatus(): RecognitionStatus {\r\n        return this.privDetailedSpeechPhrase.RecognitionStatus;\r\n    }\r\n    public get NBest(): IPhrase[] {\r\n        return this.privDetailedSpeechPhrase.NBest;\r\n    }\r\n    public get Duration(): number {\r\n        return this.privDetailedSpeechPhrase.Duration;\r\n    }\r\n    public get Offset(): number {\r\n        return this.privDetailedSpeechPhrase.Offset;\r\n    }\r\n    public get Language(): string {\r\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Language;\r\n    }\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Confidence;\r\n    }\r\n    public get Text(): string {\r\n        return !!this.privDetailedSpeechPhrase.NBest && this.privDetailedSpeechPhrase.NBest[0] ? this.privDetailedSpeechPhrase.NBest[0].Display : this.privDetailedSpeechPhrase.DisplayText;\r\n    }\r\n    public get SpeakerId(): string {\r\n        return this.privDetailedSpeechPhrase.SpeakerId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IAudioSource } from \"../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n    SpeechRecognizer,\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    DetailedSpeechPhrase,\r\n    EnumTranslation,\r\n    OutputFormatPropertyName,\r\n    RecognitionStatus,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechHypothesis,\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class SpeechServiceRecognizer extends ServiceRecognizerBase {\r\n\r\n    private privSpeechRecognizer: SpeechRecognizer;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        speechRecognizer: SpeechRecognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer);\r\n        this.privSpeechRecognizer = speechRecognizer;\r\n        if (recognizerConfig.autoDetectSourceLanguages !== undefined) {\r\n            const sourceLanguages: string[] = recognizerConfig.autoDetectSourceLanguages.split(\",\");\r\n            this.privSpeechContext.setSection(\"languageId\", {\r\n                languages: sourceLanguages,\r\n                onSuccess: { action: \"Recognize\" },\r\n                onUnknown: { action: \"None\" }\r\n            });\r\n            this.privSpeechContext.setSection(\"phraseOutput\", {\r\n                interimResults: {\r\n                    resultType: \"Auto\"\r\n                },\r\n                phraseResults: {\r\n                    resultType: \"Always\"\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let result: SpeechRecognitionResult;\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        let processed: boolean = false;\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.hypothesis\":\r\n            case \"speech.fragment\":\r\n                const hypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\r\n                const offset: number = hypothesis.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n\r\n                result = new SpeechRecognitionResult(\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingSpeech,\r\n                    hypothesis.Text,\r\n                    hypothesis.Duration,\r\n                    offset,\r\n                    hypothesis.Language,\r\n                    hypothesis.LanguageDetectionConfidence,\r\n                    undefined, // Speaker Id\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(offset);\r\n\r\n                const ev = new SpeechRecognitionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privSpeechRecognizer.recognizing) {\r\n                    try {\r\n                        this.privSpeechRecognizer.recognizing(this.privSpeechRecognizer, ev);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.phrase\":\r\n                const simple: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n                const resultReason: ResultReason = EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\r\n\r\n                this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + simple.Offset + simple.Duration);\r\n\r\n                if (ResultReason.Canceled === resultReason) {\r\n                    const cancelReason: CancellationReason = EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\r\n                    const cancellationErrorCode: CancellationErrorCode = EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\r\n\r\n                    await this.cancelRecognitionLocal(\r\n                        cancelReason,\r\n                        cancellationErrorCode,\r\n                        EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\r\n\r\n                } else {\r\n                    if (!(this.privRequestSession.isSpeechEnded && resultReason === ResultReason.NoMatch && simple.RecognitionStatus !== RecognitionStatus.InitialSilenceTimeout)) {\r\n                        if (this.privRecognizerConfig.parameters.getProperty(OutputFormatPropertyName) === OutputFormat[OutputFormat.Simple]) {\r\n                            result = new SpeechRecognitionResult(\r\n                                this.privRequestSession.requestId,\r\n                                resultReason,\r\n                                simple.DisplayText,\r\n                                simple.Duration,\r\n                                simple.Offset + this.privRequestSession.currentTurnAudioOffset,\r\n                                simple.Language,\r\n                                simple.LanguageDetectionConfidence,\r\n                                undefined, // Speaker Id\r\n                                undefined,\r\n                                connectionMessage.textBody,\r\n                                resultProps);\r\n                        } else {\r\n                            const detailed: DetailedSpeechPhrase = DetailedSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n                            const totalOffset: number = detailed.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n                            const offsetCorrectedJson: string = detailed.getJsonWithCorrectedOffsets(totalOffset);\r\n\r\n                            result = new SpeechRecognitionResult(\r\n                                this.privRequestSession.requestId,\r\n                                resultReason,\r\n                                detailed.RecognitionStatus === RecognitionStatus.Success ? detailed.NBest[0].Display : undefined,\r\n                                detailed.Duration,\r\n                                totalOffset,\r\n                                detailed.Language,\r\n                                detailed.LanguageDetectionConfidence,\r\n                                undefined, // Speaker Id\r\n                                undefined,\r\n                                offsetCorrectedJson,\r\n                                resultProps);\r\n                        }\r\n\r\n                        const event: SpeechRecognitionEventArgs = new SpeechRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privSpeechRecognizer.recognized) {\r\n                            try {\r\n                                this.privSpeechRecognizer.recognized(this.privSpeechRecognizer, event);\r\n                                /* tslint:disable:no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (!!this.privSuccessCallback) {\r\n                        try {\r\n                            this.privSuccessCallback(result);\r\n                        } catch (e) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(e);\r\n                            }\r\n                        }\r\n                        // Only invoke the call back once.\r\n                        // and if it's successful don't invoke the\r\n                        // error after that.\r\n                        this.privSuccessCallback = undefined;\r\n                        this.privErrorCallback = undefined;\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privSpeechRecognizer.canceled) {\r\n            const cancelEvent: SpeechRecognitionCanceledEventArgs = new SpeechRecognitionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                sessionId);\r\n            try {\r\n                this.privSpeechRecognizer.canceled(this.privSpeechRecognizer, cancelEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: SpeechRecognitionResult = new SpeechRecognitionResult(\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Duration\r\n                undefined, // Offset\r\n                undefined, // Language\r\n                undefined, // Language Detection Confidence\r\n                undefined, // Speaker Id\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                this.privSuccessCallback = undefined;\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    OutputFormatPropertyName,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechConnectionFactory,\r\n    SpeechServiceConfig,\r\n    SpeechServiceRecognizer,\r\n} from \"../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    AutoDetectSourceLanguageConfig,\r\n    KeywordRecognitionModel,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"./Exports\";\r\nimport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Performs speech recognition from microphone, file, or other audio input streams, and gets transcribed text as result.\r\n * @class SpeechRecognizer\r\n */\r\nexport class SpeechRecognizer extends Recognizer {\r\n    private privDisposedRecognizer: boolean;\r\n\r\n    /**\r\n     * SpeechRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig?: AudioConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            speechConfigImpl.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        super(audioConfig, speechConfigImpl.properties, new SpeechConnectionFactory());\r\n        this.privDisposedRecognizer = false;\r\n    }\r\n\r\n    /**\r\n     * SpeechRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\r\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public static FromConfig(speechConfig: SpeechConfig, autoDetectSourceLanguageConfig: AutoDetectSourceLanguageConfig, audioConfig?: AudioConfig): SpeechRecognizer {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\r\n        const recognizer = new SpeechRecognizer(speechConfig, audioConfig);\r\n        return recognizer;\r\n    }\r\n\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member SpeechRecognizer.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member SpeechRecognizer.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member SpeechRecognizer.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: Recognizer, event: SpeechRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the endpoint id of a customized speech model that is used for speech recognition.\r\n     * @member SpeechRecognizer.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @returns {string} the endpoint id of a customized speech model that is used for speech recognition.\r\n     */\r\n    public get endpointId(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_EndpointId, \"00000000-0000-0000-0000-000000000000\");\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member SpeechRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member SpeechRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * Gets the spoken language of recognition.\r\n     * @member SpeechRecognizer.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} The spoken language of recognition.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * Gets the output format of recognition.\r\n     * @member SpeechRecognizer.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {OutputFormat} The output format of recognition.\r\n     */\r\n    public get outputFormat(): OutputFormat {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        if (this.properties.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]) === OutputFormat[OutputFormat.Simple]) {\r\n            return OutputFormat.Simple;\r\n        } else {\r\n            return OutputFormat.Detailed;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this SpeechRecognizer.\r\n     * @member SpeechRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition, and stops after the first utterance is recognized.\r\n     * The task returns the recognition text as result.\r\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\r\n     *       so it is suitable only for single shot recognition\r\n     *       like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead.\r\n     * @member SpeechRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the SpeechRecognitionResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public recognizeOnceAsync(cb?: (e: SpeechRecognitionResult) => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Interactive), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * @member SpeechRecognizer.prototype.startContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stops continuous speech recognition.\r\n     * @member SpeechRecognizer.prototype.stopContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition with keyword spotting, until\r\n     * stopKeywordRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * Note: Key word spotting functionality is only available on the\r\n     *      Speech Devices SDK. This functionality is currently not included in the SDK itself.\r\n     * @member SpeechRecognizer.prototype.startKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param {KeywordRecognitionModel} model The keyword recognition model that\r\n     *        specifies the keyword to be recognized.\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startKeywordRecognitionAsync(model: KeywordRecognitionModel, cb?: () => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        if (!!err) {\r\n            err(\"Not yet implemented.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops continuous speech recognition.\r\n     * Note: Key word spotting functionality is only available on the\r\n     *       Speech Devices SDK. This functionality is currently not included in the SDK itself.\r\n     * @member SpeechRecognizer.prototype.stopKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopKeywordRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        if (!!cb) {\r\n            cb();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member SpeechRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member SpeechRecognizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n            await this.implRecognizerStop();\r\n        }\r\n\r\n        await super.dispose(disposing);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(\r\n            speechConfig,\r\n            this.properties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new SpeechServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports\";\r\nimport {\r\n    PropertyId\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter,\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\n\r\nexport class IntentConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    public create = (\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection => {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint);\r\n        if (!endpoint) {\r\n            const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_IntentRegion);\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".sr.speech\" + hostSuffix);\r\n            endpoint = host + \"/speech/recognition/interactive/cognitiveservices/v1\";\r\n        }\r\n\r\n        const queryParams: IStringDictionary<string> = {\r\n            format: \"simple\",\r\n            language: config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\r\n        };\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n\r\n    private getSpeechRegionFromIntentRegion(intentRegion: string): string {\r\n        switch (intentRegion) {\r\n            case \"West US\":\r\n            case \"US West\":\r\n            case \"westus\":\r\n                return \"uswest\";\r\n            case \"West US 2\":\r\n            case \"US West 2\":\r\n            case \"westus2\":\r\n                return \"uswest2\";\r\n            case \"South Central US\":\r\n            case \"US South Central\":\r\n            case \"southcentralus\":\r\n                return \"ussouthcentral\";\r\n            case \"West Central US\":\r\n            case \"US West Central\":\r\n            case \"westcentralus\":\r\n                return \"uswestcentral\";\r\n            case \"East US\":\r\n            case \"US East\":\r\n            case \"eastus\":\r\n                return \"useast\";\r\n            case \"East US 2\":\r\n            case \"US East 2\":\r\n            case \"eastus2\":\r\n                return \"useast2\";\r\n            case \"West Europe\":\r\n            case \"Europe West\":\r\n            case \"westeurope\":\r\n                return \"europewest\";\r\n            case \"North Europe\":\r\n            case \"Europe North\":\r\n            case \"northeurope\":\r\n                return \"europenorth\";\r\n            case \"Brazil South\":\r\n            case \"South Brazil\":\r\n            case \"southbrazil\":\r\n                return \"brazilsouth\";\r\n            case \"Australia East\":\r\n            case \"East Australia\":\r\n            case \"eastaustralia\":\r\n                return \"australiaeast\";\r\n            case \"Southeast Asia\":\r\n            case \"Asia Southeast\":\r\n            case \"southeastasia\":\r\n                return \"asiasoutheast\";\r\n            case \"East Asia\":\r\n            case \"Asia East\":\r\n            case \"eastasia\":\r\n                return \"asiaeast\";\r\n            default:\r\n                return intentRegion;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { LanguageUnderstandingModelImpl } from \"../sdk/LanguageUnderstandingModel\";\r\n\r\n/**\r\n * @class AddedLmIntent\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class AddedLmIntent {\r\n    public modelImpl: LanguageUnderstandingModelImpl;\r\n    public intentName: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param modelImpl - The model.\r\n     * @param intentName - The intent name.\r\n     */\r\n    public constructor(modelImpl: LanguageUnderstandingModelImpl, intentName: string) {\r\n        this.modelImpl = modelImpl;\r\n        this.intentName = intentName;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationEventArgs } from \"./CancellationEventArgs\";\r\nimport { CancellationErrorCode, CancellationReason, IntentRecognitionEventArgs, IntentRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Define payload of intent recognition canceled result events.\r\n * @class IntentRecognitionCanceledEventArgs\r\n */\r\nexport class IntentRecognitionCanceledEventArgs extends IntentRecognitionEventArgs implements CancellationEventArgs {\r\n    private privReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {CancellationReason} result - The result of the intent recognition.\r\n     * @param {string} offset - The offset.\r\n     * @param {IntentRecognitionResult} sessionId - The session id.\r\n     */\r\n    public constructor(\r\n        reason: CancellationReason,\r\n        errorDetails: string,\r\n        errorCode: CancellationErrorCode,\r\n        result?: IntentRecognitionResult,\r\n        offset?: number,\r\n        sessionId?: string) {\r\n        super(result, offset, sessionId);\r\n\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member IntentRecognitionCanceledEventArgs.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful recognition.\r\n     * Added in version 1.1.0.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get errorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member IntentRecognitionCanceledEventArgs.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// response\r\n\r\nexport interface IIntentResponse {\r\n    query: string;\r\n    topScoringIntent: ISingleIntent;\r\n    entities: IIntentEntity[];\r\n}\r\n\r\nexport interface IIntentEntity {\r\n    entity: string;\r\n    type: string;\r\n    startIndex: number;\r\n    endIndex: number;\r\n    score: number;\r\n}\r\n\r\nexport interface ISingleIntent {\r\n    intent: string;\r\n    score: number;\r\n}\r\n\r\nexport class IntentResponse implements IIntentResponse {\r\n    private privIntentResponse: IIntentResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privIntentResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): IntentResponse {\r\n        return new IntentResponse(json);\r\n    }\r\n\r\n    public get query(): string {\r\n        return this.privIntentResponse.query;\r\n    }\r\n\r\n    public get topScoringIntent(): ISingleIntent {\r\n        return this.privIntentResponse.topScoringIntent;\r\n    }\r\n\r\n    public get entities(): IIntentEntity[] {\r\n        return this.privIntentResponse.entities;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAudioSource,\r\n    MessageType,\r\n} from \"../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    IntentRecognitionCanceledEventArgs,\r\n    IntentRecognitionEventArgs,\r\n    IntentRecognitionResult,\r\n    IntentRecognizer,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechRecognitionResult,\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    AddedLmIntent,\r\n    CancellationErrorCodePropertyName,\r\n    EnumTranslation,\r\n    IntentResponse,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechHypothesis,\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class IntentServiceRecognizer extends ServiceRecognizerBase {\r\n    private privIntentRecognizer: IntentRecognizer;\r\n    private privAddedLmIntents: { [id: string]: AddedLmIntent; };\r\n    private privIntentDataSent: boolean;\r\n    private privUmbrellaIntent: AddedLmIntent;\r\n    private privPendingIntentArgs: IntentRecognitionEventArgs;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        recognizer: IntentRecognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\r\n        this.privIntentRecognizer = recognizer;\r\n        this.privIntentDataSent = false;\r\n    }\r\n\r\n    public setIntents(addedIntents: { [id: string]: AddedLmIntent; }, umbrellaIntent: AddedLmIntent): void {\r\n        this.privAddedLmIntents = addedIntents;\r\n        this.privUmbrellaIntent = umbrellaIntent;\r\n        this.privIntentDataSent = true;\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let result: IntentRecognitionResult;\r\n        let ev: IntentRecognitionEventArgs;\r\n        let processed: boolean = false;\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.hypothesis\":\r\n                const speechHypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\r\n\r\n                result = new IntentRecognitionResult(\r\n                    undefined,\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingIntent,\r\n                    speechHypothesis.Text,\r\n                    speechHypothesis.Duration,\r\n                    speechHypothesis.Offset + this.privRequestSession.currentTurnAudioOffset,\r\n                    speechHypothesis.Language,\r\n                    speechHypothesis.LanguageDetectionConfidence,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(result.offset);\r\n\r\n                ev = new IntentRecognitionEventArgs(result, speechHypothesis.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privIntentRecognizer.recognizing) {\r\n                    try {\r\n                        this.privIntentRecognizer.recognizing(this.privIntentRecognizer, ev);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.phrase\":\r\n                const simple: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n                result = new IntentRecognitionResult(\r\n                    undefined,\r\n                    this.privRequestSession.requestId,\r\n                    EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus),\r\n                    simple.DisplayText,\r\n                    simple.Duration,\r\n                    simple.Offset + this.privRequestSession.currentTurnAudioOffset,\r\n                    simple.Language,\r\n                    simple.LanguageDetectionConfidence,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                ev = new IntentRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                const sendEvent: () => void = () => {\r\n                    if (!!this.privIntentRecognizer.recognized) {\r\n                        try {\r\n                            this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\r\n                            /* tslint:disable:no-empty */\r\n                        } catch (error) {\r\n                            // Not going to let errors in the event handler\r\n                            // trip things up.\r\n                        }\r\n                    }\r\n\r\n                    // report result to promise.\r\n                    if (!!this.privSuccessCallback) {\r\n                        try {\r\n                            this.privSuccessCallback(result);\r\n                        } catch (e) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(e);\r\n                            }\r\n                        }\r\n                        // Only invoke the call back once.\r\n                        // and if it's successful don't invoke the\r\n                        // error after that.\r\n                        this.privSuccessCallback = undefined;\r\n                        this.privErrorCallback = undefined;\r\n                    }\r\n                };\r\n\r\n                // If intent data was sent, the terminal result for this recognizer is an intent being found.\r\n                // If no intent data was sent, the terminal event is speech recognition being successful.\r\n                if (false === this.privIntentDataSent || ResultReason.NoMatch === ev.result.reason) {\r\n                    // Advance the buffers.\r\n                    this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\r\n                    sendEvent();\r\n                } else {\r\n                    // Squirrel away the args, when the response event arrives it will build upon them\r\n                    // and then return\r\n                    this.privPendingIntentArgs = ev;\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"response\":\r\n                // Response from LUIS\r\n                ev = this.privPendingIntentArgs;\r\n                this.privPendingIntentArgs = undefined;\r\n\r\n                if (undefined === ev) {\r\n                    if (\"\" === connectionMessage.textBody) {\r\n                        // This condition happens if there is nothing but silence in the\r\n                        // audio sent to the service.\r\n                        return;\r\n                    }\r\n\r\n                    // Odd... Not sure this can happen\r\n                    ev = new IntentRecognitionEventArgs(new IntentRecognitionResult(), 0 /*TODO*/, this.privRequestSession.sessionId);\r\n                }\r\n\r\n                const intentResponse: IntentResponse = IntentResponse.fromJSON(connectionMessage.textBody);\r\n\r\n                // If LUIS didn't return anything, send the existing event, else\r\n                // modify it to show the match.\r\n                // See if the intent found is in the list of intents asked for.\r\n                let addedIntent: AddedLmIntent = this.privAddedLmIntents[intentResponse.topScoringIntent.intent];\r\n\r\n                if (this.privUmbrellaIntent !== undefined) {\r\n                    addedIntent = this.privUmbrellaIntent;\r\n                }\r\n\r\n                if (null !== intentResponse && addedIntent !== undefined) {\r\n                    const intentId = addedIntent.intentName === undefined ? intentResponse.topScoringIntent.intent : addedIntent.intentName;\r\n                    let reason = ev.result.reason;\r\n\r\n                    if (undefined !== intentId) {\r\n                        reason = ResultReason.RecognizedIntent;\r\n                    }\r\n\r\n                    // make sure, properties is set.\r\n                    const properties = (undefined !== ev.result.properties) ?\r\n                        ev.result.properties : new PropertyCollection();\r\n\r\n                    properties.setProperty(PropertyId.LanguageUnderstandingServiceResponse_JsonResult, connectionMessage.textBody);\r\n\r\n                    ev = new IntentRecognitionEventArgs(\r\n                        new IntentRecognitionResult(\r\n                            intentId,\r\n                            ev.result.resultId,\r\n                            reason,\r\n                            ev.result.text,\r\n                            ev.result.duration,\r\n                            ev.result.offset,\r\n                            undefined,\r\n                            undefined,\r\n                            ev.result.errorDetails,\r\n                            ev.result.json,\r\n                            properties),\r\n                        ev.offset,\r\n                        ev.sessionId);\r\n                }\r\n                this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\r\n\r\n                if (!!this.privIntentRecognizer.recognized) {\r\n                    try {\r\n                        this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n\r\n                // report result to promise.\r\n                if (!!this.privSuccessCallback) {\r\n                    try {\r\n                        this.privSuccessCallback(ev.result);\r\n                    } catch (e) {\r\n                        if (!!this.privErrorCallback) {\r\n                            this.privErrorCallback(e);\r\n                        }\r\n                    }\r\n                    // Only invoke the call back once.\r\n                    // and if it's successful don't invoke the\r\n                    // error after that.\r\n                    this.privSuccessCallback = undefined;\r\n                    this.privErrorCallback = undefined;\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privIntentRecognizer.canceled) {\r\n\r\n            const cancelEvent: IntentRecognitionCanceledEventArgs = new IntentRecognitionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                undefined,\r\n                sessionId);\r\n            try {\r\n                this.privIntentRecognizer.canceled(this.privIntentRecognizer, cancelEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: IntentRecognitionResult = new IntentRecognitionResult(\r\n                undefined, // Intent Id\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Duration\r\n                undefined, // Offset\r\n                undefined, // Language\r\n                undefined, // LanguageDetectionConfidence\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                this.privSuccessCallback = undefined;\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    AddedLmIntent,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    IntentConnectionFactory,\r\n    IntentServiceRecognizer,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n} from \"../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    IntentRecognitionCanceledEventArgs,\r\n    IntentRecognitionEventArgs,\r\n    IntentRecognitionResult,\r\n    KeywordRecognitionModel,\r\n    LanguageUnderstandingModel,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SpeechConfig,\r\n} from \"./Exports\";\r\nimport { LanguageUnderstandingModelImpl } from \"./LanguageUnderstandingModel\";\r\nimport { SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Intent recognizer.\r\n * @class\r\n */\r\nexport class IntentRecognizer extends Recognizer {\r\n    private privDisposedIntentRecognizer: boolean;\r\n    private privAddedIntents: string[][];\r\n    private privAddedLmIntents: { [id: string]: AddedLmIntent; };\r\n    private privUmbrellaIntent: AddedLmIntent;\r\n\r\n    /**\r\n     * Initializes an instance of the IntentRecognizer.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - The set of configuration properties.\r\n     * @param {AudioConfig} audioConfig - An optional audio input config associated with the recognizer\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig?: AudioConfig) {\r\n        Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\r\n        const configImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNullOrUndefined(configImpl, \"speechConfig\");\r\n\r\n        super(audioConfig, configImpl.properties, new IntentConnectionFactory());\r\n        this.privAddedIntents = [];\r\n        this.privAddedLmIntents = {};\r\n\r\n        this.privDisposedIntentRecognizer = false;\r\n        this.privProperties = configImpl.properties;\r\n\r\n        Contracts.throwIfNullOrWhitespace(this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage), PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n    }\r\n\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member IntentRecognizer.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: IntentRecognizer, event: IntentRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member IntentRecognizer.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: IntentRecognizer, event: IntentRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member IntentRecognizer.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: IntentRecognizer, event: IntentRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the spoken language of recognition.\r\n     * @member IntentRecognizer.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} the spoken language of recognition.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member IntentRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key for the Intent recognizer.\r\n     * @member IntentRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - Authorization token.\r\n     */\r\n    public set authorizationToken(value: string) {\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this IntentRecognizer.\r\n     * @member IntentRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their\r\n     *          values defined for this IntentRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Starts intent recognition, and stops after the first utterance is recognized.\r\n     * The task returns the recognition text and intent as result.\r\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\r\n     *       so it is suitable only for single shot recognition like command or query.\r\n     *       For long-running recognition, use StartContinuousRecognitionAsync() instead.\r\n     * @member IntentRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the recognition has finished with an IntentRecognitionResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public recognizeOnceAsync(cb?: (e: IntentRecognitionResult) => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n\r\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\r\n            const context: IIntentContext = this.buildSpeechContext();\r\n\r\n            this.privReco.speechContext.setSection(\"intent\", context.Intent);\r\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\r\n\r\n            const intentReco: IntentServiceRecognizer = this.privReco as IntentServiceRecognizer;\r\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\r\n        }\r\n\r\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Interactive), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * @member IntentRecognizer.prototype.startContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\r\n            const context: IIntentContext = this.buildSpeechContext();\r\n\r\n            this.privReco.speechContext.setSection(\"intent\", context.Intent);\r\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\r\n\r\n            const intentReco: IntentServiceRecognizer = this.privReco as IntentServiceRecognizer;\r\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\r\n        }\r\n\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stops continuous intent recognition.\r\n     * @member IntentRecognizer.prototype.stopContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition with keyword spotting, until stopKeywordRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\r\n     *       This functionality is currently not included in the SDK itself.\r\n     * @member IntentRecognizer.prototype.startKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param {KeywordRecognitionModel} model - The keyword recognition model that specifies the keyword to be recognized.\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startKeywordRecognitionAsync(model: KeywordRecognitionModel, cb?: () => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        if (!!err) {\r\n            err(\"Not yet implemented.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops continuous speech recognition.\r\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\r\n     *       This functionality is currently not included in the SDK itself.\r\n     * @member IntentRecognizer.prototype.stopKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopKeywordRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        if (!!cb) {\r\n            cb();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a phrase that should be recognized as intent.\r\n     * @member IntentRecognizer.prototype.addIntent\r\n     * @function\r\n     * @public\r\n     * @param {string} intentId - A String that represents the identifier of the intent to be recognized.\r\n     * @param {string} phrase - A String that specifies the phrase representing the intent.\r\n     */\r\n    public addIntent(simplePhrase: string, intentId?: string): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n        Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\r\n        Contracts.throwIfNullOrWhitespace(simplePhrase, \"simplePhrase\");\r\n\r\n        this.privAddedIntents.push([intentId, simplePhrase]);\r\n    }\r\n\r\n    /**\r\n     * Adds an intent from Language Understanding service for recognition.\r\n     * @member IntentRecognizer.prototype.addIntentWithLanguageModel\r\n     * @function\r\n     * @public\r\n     * @param {string} intentId - A String that represents the identifier of the intent\r\n     *        to be recognized. Ignored if intentName is empty.\r\n     * @param {string} model - The intent model from Language Understanding service.\r\n     * @param {string} intentName - The intent name defined in the intent model. If it\r\n     *        is empty, all intent names defined in the model will be added.\r\n     */\r\n    public addIntentWithLanguageModel(intentId: string, model: LanguageUnderstandingModel, intentName?: string): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n        Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        const modelImpl: LanguageUnderstandingModelImpl = model as LanguageUnderstandingModelImpl;\r\n        Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\r\n\r\n        this.privAddedLmIntents[intentId] = new AddedLmIntent(modelImpl, intentName);\r\n    }\r\n\r\n    /**\r\n     * @summary Adds all intents from the specified Language Understanding Model.\r\n     * @member IntentRecognizer.prototype.addAllIntents\r\n     * @function\r\n     * @public\r\n     * @function\r\n     * @public\r\n     * @param {LanguageUnderstandingModel} model - The language understanding model containing the intents.\r\n     * @param {string} intentId - A custom id String to be returned in the IntentRecognitionResult's getIntentId() method.\r\n     */\r\n    public addAllIntents(model: LanguageUnderstandingModel, intentId?: string): void {\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        const modelImpl: LanguageUnderstandingModelImpl = model as LanguageUnderstandingModelImpl;\r\n        Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\r\n\r\n        this.privUmbrellaIntent = new AddedLmIntent(modelImpl, intentId);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member IntentRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.properties);\r\n    }\r\n\r\n    protected createServiceRecognizer(authentication: IAuthentication, connectionFactory: IConnectionFactory, audioConfig: AudioConfig, recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const audioImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new IntentServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\r\n    }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedIntentRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedIntentRecognizer = true;\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    private buildSpeechContext(): IIntentContext {\r\n        let appId: string;\r\n        let region: string;\r\n        let subscriptionKey: string;\r\n        const refGrammers: string[] = [];\r\n\r\n        if (undefined !== this.privUmbrellaIntent) {\r\n            appId = this.privUmbrellaIntent.modelImpl.appId;\r\n            region = this.privUmbrellaIntent.modelImpl.region;\r\n            subscriptionKey = this.privUmbrellaIntent.modelImpl.subscriptionKey;\r\n        }\r\n\r\n        // Build the reference grammer array.\r\n        for (const intentId of Object.keys(this.privAddedLmIntents)) {\r\n            const addedLmIntent: AddedLmIntent = this.privAddedLmIntents[intentId];\r\n\r\n            // validate all the same model, region, and key...\r\n            if (appId === undefined) {\r\n                appId = addedLmIntent.modelImpl.appId;\r\n            } else {\r\n                if (appId !== addedLmIntent.modelImpl.appId) {\r\n                    throw new Error(\"Intents must all be from the same LUIS model\");\r\n                }\r\n            }\r\n\r\n            if (region === undefined) {\r\n                region = addedLmIntent.modelImpl.region;\r\n            } else {\r\n                if (region !== addedLmIntent.modelImpl.region) {\r\n                    throw new Error(\"Intents must all be from the same LUIS model in a single region\");\r\n                }\r\n            }\r\n\r\n            if (subscriptionKey === undefined) {\r\n                subscriptionKey = addedLmIntent.modelImpl.subscriptionKey;\r\n            } else {\r\n                if (subscriptionKey !== addedLmIntent.modelImpl.subscriptionKey) {\r\n                    throw new Error(\"Intents must all use the same subscription key\");\r\n                }\r\n            }\r\n\r\n            const grammer: string = \"luis/\" + appId + \"-PRODUCTION#\" + intentId;\r\n            refGrammers.push(grammer);\r\n        }\r\n\r\n        return {\r\n            Intent: {\r\n                id: appId,\r\n                key: (subscriptionKey === undefined) ? this.privProperties.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Key]) : subscriptionKey,\r\n                provider: \"LUIS\",\r\n            },\r\n            ReferenceGrammars: (undefined === this.privUmbrellaIntent) ? refGrammers : [\"luis/\" + appId + \"-PRODUCTION\"],\r\n        };\r\n    }\r\n}\r\n\r\ninterface IIntentContext {\r\n    Intent: {\r\n        id: string,\r\n        key: string,\r\n        provider: string,\r\n    };\r\n    ReferenceGrammars: string[];\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary,\r\n} from \"../common/Exports\";\r\nimport {\r\n    PropertyId\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    IConnectionFactory,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter,\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { QueryParameterNames } from \"./QueryParameterNames\";\r\n\r\nexport class TranslationConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    public create = (\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection => {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        if (!endpoint) {\r\n            const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, undefined);\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".s2s.speech\" + hostSuffix);\r\n            endpoint = host + \"/speech/translation/cognitiveservices/v1\";\r\n        }\r\n\r\n        const queryParams: IStringDictionary<string> = {\r\n            from: config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\r\n            to: config.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages),\r\n        };\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n        this.setUrlParameter(\r\n            PropertyId.SpeechServiceResponse_TranslationRequestStablePartialResult,\r\n            QueryParameterNames.StableTranslation,\r\n            config,\r\n            queryParams,\r\n            endpoint\r\n        );\r\n\r\n        const voiceName: string = \"voice\";\r\n        const featureName: string = \"features\";\r\n\r\n        if (config.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined) !== undefined) {\r\n            queryParams[voiceName] = config.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice);\r\n            queryParams[featureName] = \"texttospeech\";\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines translation status.\r\n * @class TranslationStatus\r\n */\r\nexport enum TranslationStatus {\r\n    /**\r\n     * @member TranslationStatus.Success\r\n     */\r\n    Success = 0,\r\n\r\n    /**\r\n     * @member TranslationStatus.Error\r\n     */\r\n    Error,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationErrorCode, CancellationReason, TranslationRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Define payload of speech recognition canceled result events.\r\n * @class TranslationRecognitionCanceledEventArgs\r\n */\r\nexport class TranslationRecognitionCanceledEventArgs {\r\n    private privResult: TranslationRecognitionResult;\r\n    private privSessionId: string;\r\n    private privCancelReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} sessionid - The session id.\r\n     * @param {CancellationReason} cancellationReason - The cancellation reason.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {TranslationRecognitionResult} result - The result.\r\n     */\r\n    public constructor(\r\n        sessionid: string,\r\n        cancellationReason: CancellationReason,\r\n        errorDetails: string,\r\n        errorCode: CancellationErrorCode,\r\n        result: TranslationRecognitionResult) {\r\n        this.privCancelReason = cancellationReason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privResult = result;\r\n        this.privSessionId = sessionid;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {TranslationRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): TranslationRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n\r\n    /**\r\n     * Specifies the session identifier.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.sessionId\r\n     * @function\r\n     * @public\r\n     * @returns {string} the session identifier.\r\n     */\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privCancelReason;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful recognition.\r\n     * Added in version 1.1.0.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get errorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the possible reasons a recognition result might not be recognized.\r\n * @class NoMatchReason\r\n */\r\nexport enum NoMatchReason {\r\n\r\n    /**\r\n     * Indicates that speech was detected, but not recognized.\r\n     * @member NoMatchReason.NotRecognized\r\n     */\r\n    NotRecognized,\r\n\r\n    /**\r\n     * Indicates that the start of the audio stream contained only silence,\r\n     * and the service timed out waiting for speech.\r\n     * @member NoMatchReason.InitialSilenceTimeout\r\n     */\r\n    InitialSilenceTimeout,\r\n\r\n    /**\r\n     * Indicates that the start of the audio stream contained only noise,\r\n     * and the service timed out waiting for speech.\r\n     * @member NoMatchReason.InitialBabbleTimeout\r\n     */\r\n    InitialBabbleTimeout,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection } from \"./Exports\";\r\n\r\n/**\r\n * Represents collection of parameters and their values.\r\n * @class Translations\r\n */\r\nexport class Translations {\r\n    // Use an PropertyCollection internally, just wrapping it to hide the | enum syntax it has.\r\n    private privMap: PropertyCollection = new PropertyCollection();\r\n\r\n    /**\r\n     * Returns the parameter value in type String. The parameter must have the same type as String.\r\n     * Currently only String, int and bool are allowed.\r\n     * If the name is not available, the specified defaultValue is returned.\r\n     * @member Translations.prototype.get\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} def - The default value which is returned if the parameter is not available in the collection.\r\n     * @returns {string} value of the parameter.\r\n     */\r\n    public get(key: string, def?: string): string {\r\n        return this.privMap.getProperty(key, def);\r\n    }\r\n\r\n    /**\r\n     * Sets the String value of the parameter specified by name.\r\n     * @member Translations.prototype.set\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} value - The value of the parameter.\r\n     */\r\n    public set(key: string, value: string): void {\r\n        this.privMap.setProperty(key, value);\r\n    }\r\n\r\n    /**\r\n     * Get the languages in the object in a String array.\r\n     * @member Translations.prototype.languages\r\n     * @function\r\n     * @public\r\n     * @returns {string[]} languages in translations object.\r\n     */\r\n    public get languages(): string[] {\r\n        return this.privMap.keys;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ITranslations } from \"../Exports\";\r\nimport { TranslationStatus } from \"../TranslationStatus\";\r\n\r\n// translation.hypothesis\r\nexport interface ITranslationHypothesis {\r\n    Duration: number;\r\n    Offset: number;\r\n    Text: string;\r\n    Translation: ITranslations;\r\n}\r\n\r\nexport class TranslationHypothesis implements ITranslationHypothesis {\r\n    private privTranslationHypothesis: ITranslationHypothesis;\r\n\r\n    private constructor(json: string) {\r\n        this.privTranslationHypothesis = JSON.parse(json);\r\n        this.privTranslationHypothesis.Translation.TranslationStatus = (TranslationStatus as any)[this.privTranslationHypothesis.Translation.TranslationStatus];\r\n    }\r\n\r\n    public static fromJSON(json: string): TranslationHypothesis {\r\n        return new TranslationHypothesis(json);\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privTranslationHypothesis.Duration;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privTranslationHypothesis.Offset;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privTranslationHypothesis.Text;\r\n    }\r\n\r\n    public get Translation(): ITranslations {\r\n        return this.privTranslationHypothesis.Translation;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport { ITranslations, RecognitionStatus } from \"../Exports\";\r\nimport { TranslationStatus } from \"../TranslationStatus\";\r\n\r\n// translation.phrase\r\nexport interface ITranslationPhrase {\r\n    RecognitionStatus: RecognitionStatus;\r\n    Offset: number;\r\n    Duration: number;\r\n    Translation: ITranslations;\r\n    Text: string;\r\n    DisplayText?: string;\r\n}\r\n\r\nexport class TranslationPhrase implements ITranslationPhrase {\r\n    private privTranslationPhrase: ITranslationPhrase;\r\n\r\n    private constructor(phrase: ITranslationPhrase) {\r\n        this.privTranslationPhrase = phrase;\r\n        this.privTranslationPhrase.RecognitionStatus = (RecognitionStatus as any)[this.privTranslationPhrase.RecognitionStatus];\r\n        if (this.privTranslationPhrase.Translation !== undefined) {\r\n            this.privTranslationPhrase.Translation.TranslationStatus = (TranslationStatus as any)[this.privTranslationPhrase.Translation.TranslationStatus];\r\n        }\r\n    }\r\n\r\n    public static fromJSON(json: string): TranslationPhrase {\r\n        return new TranslationPhrase(JSON.parse(json));\r\n    }\r\n\r\n    public static fromTranslationResponse(translationResponse: { SpeechPhrase: ITranslationPhrase }): TranslationPhrase {\r\n        Contracts.throwIfNullOrUndefined(translationResponse, \"translationResponse\");\r\n        const phrase: ITranslationPhrase = translationResponse.SpeechPhrase;\r\n        translationResponse.SpeechPhrase = undefined;\r\n        phrase.Translation = (translationResponse as unknown as ITranslations);\r\n        phrase.Text = phrase.DisplayText;\r\n        return new TranslationPhrase(phrase);\r\n    }\r\n\r\n    public get RecognitionStatus(): RecognitionStatus {\r\n        return this.privTranslationPhrase.RecognitionStatus;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privTranslationPhrase.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privTranslationPhrase.Duration;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privTranslationPhrase.Text;\r\n    }\r\n\r\n    public get Translation(): ITranslations {\r\n        return this.privTranslationPhrase.Translation;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SynthesisStatus } from \"../Exports\";\r\n\r\n// translation.synthesis.end\r\nexport interface ITranslationSynthesisEnd {\r\n    SynthesisStatus: SynthesisStatus;\r\n    FailureReason: string;\r\n}\r\n\r\nexport class TranslationSynthesisEnd implements ITranslationSynthesisEnd {\r\n    private privSynthesisEnd: ITranslationSynthesisEnd;\r\n\r\n    private constructor(json: string) {\r\n        this.privSynthesisEnd = JSON.parse(json);\r\n        this.privSynthesisEnd.SynthesisStatus = (SynthesisStatus as any)[this.privSynthesisEnd.SynthesisStatus];\r\n    }\r\n\r\n    public static fromJSON(json: string): TranslationSynthesisEnd {\r\n        return new TranslationSynthesisEnd(json);\r\n    }\r\n\r\n    public get SynthesisStatus(): SynthesisStatus {\r\n        return this.privSynthesisEnd.SynthesisStatus;\r\n    }\r\n\r\n    public get FailureReason(): string {\r\n        return this.privSynthesisEnd.FailureReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionEvent,\r\n    IAudioSource,\r\n    MessageType,\r\n    TranslationStatus,\r\n} from \"../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechRecognitionResult,\r\n    TranslationRecognitionCanceledEventArgs,\r\n    TranslationRecognitionEventArgs,\r\n    TranslationRecognitionResult,\r\n    TranslationRecognizer,\r\n    Translations,\r\n    TranslationSynthesisEventArgs,\r\n    TranslationSynthesisResult,\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    EnumTranslation,\r\n    RecognitionStatus,\r\n    ServiceRecognizerBase,\r\n    SynthesisStatus,\r\n    TranslationHypothesis,\r\n    TranslationPhrase,\r\n    TranslationSynthesisEnd,\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { ITranslationPhrase } from \"./ServiceMessages/TranslationPhrase\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class TranslationServiceRecognizer extends ServiceRecognizerBase {\r\n    private privTranslationRecognizer: TranslationRecognizer;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        translationRecognizer: TranslationRecognizer) {\r\n\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer);\r\n        this.privTranslationRecognizer = translationRecognizer;\r\n        this.connectionEvents.attach(async (connectionEvent: ConnectionEvent): Promise<void> => {\r\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\r\n                this.privTranslationRecognizer.onConnection();\r\n            } else if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                await this.privTranslationRecognizer.onDisconnection();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        let processed: boolean = false;\r\n\r\n        const handleTranslationPhrase = async (translatedPhrase: TranslationPhrase): Promise<void> => {\r\n            this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + translatedPhrase.Offset + translatedPhrase.Duration);\r\n\r\n            if (translatedPhrase.RecognitionStatus === RecognitionStatus.Success) {\r\n\r\n                // OK, the recognition was successful. How'd the translation do?\r\n                const result: TranslationRecognitionEventArgs = this.fireEventForResult(translatedPhrase, resultProps);\r\n                if (!!this.privTranslationRecognizer.recognized) {\r\n                    try {\r\n                        this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, result);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n\r\n                // report result to promise.\r\n                if (!!this.privSuccessCallback) {\r\n                    try {\r\n                        this.privSuccessCallback(result.result);\r\n                    } catch (e) {\r\n                        if (!!this.privErrorCallback) {\r\n                            this.privErrorCallback(e);\r\n                        }\r\n                    }\r\n                    // Only invoke the call back once.\r\n                    // and if it's successful don't invoke the\r\n                    // error after that.\r\n                    this.privSuccessCallback = undefined;\r\n                    this.privErrorCallback = undefined;\r\n                }\r\n            } else {\r\n                const reason: ResultReason = EnumTranslation.implTranslateRecognitionResult(translatedPhrase.RecognitionStatus);\r\n\r\n                const result = new TranslationRecognitionResult(\r\n                    undefined,\r\n                    this.privRequestSession.requestId,\r\n                    reason,\r\n                    translatedPhrase.Text,\r\n                    translatedPhrase.Duration,\r\n                    this.privRequestSession.currentTurnAudioOffset + translatedPhrase.Offset,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                if (reason === ResultReason.Canceled) {\r\n                    const cancelReason: CancellationReason = EnumTranslation.implTranslateCancelResult(translatedPhrase.RecognitionStatus);\r\n                    const cancellationErrorCode: CancellationErrorCode = EnumTranslation.implTranslateCancelErrorCode(translatedPhrase.RecognitionStatus);\r\n\r\n                    await this.cancelRecognitionLocal(\r\n                        cancelReason,\r\n                        cancellationErrorCode,\r\n                        EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\r\n\r\n                } else {\r\n                    if (!(this.privRequestSession.isSpeechEnded && reason === ResultReason.NoMatch && translatedPhrase.RecognitionStatus !== RecognitionStatus.InitialSilenceTimeout)) {\r\n                        const ev = new TranslationRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privTranslationRecognizer.recognized) {\r\n                            try {\r\n                                this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, ev);\r\n                                /* tslint:disable:no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // report result to promise.\r\n                    if (!!this.privSuccessCallback) {\r\n                        try {\r\n                            this.privSuccessCallback(result);\r\n                        } catch (e) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(e);\r\n                            }\r\n                        }\r\n                        // Only invoke the call back once.\r\n                        // and if it's successful don't invoke the\r\n                        // error after that.\r\n                        this.privSuccessCallback = undefined;\r\n                        this.privErrorCallback = undefined;\r\n                    }\r\n                }\r\n                processed = true;\r\n            }\r\n\r\n        };\r\n\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"translation.hypothesis\":\r\n\r\n                const result: TranslationRecognitionEventArgs = this.fireEventForResult(TranslationHypothesis.fromJSON(connectionMessage.textBody), resultProps);\r\n                this.privRequestSession.onHypothesis(this.privRequestSession.currentTurnAudioOffset + result.offset);\r\n\r\n                if (!!this.privTranslationRecognizer.recognizing) {\r\n                    try {\r\n                        this.privTranslationRecognizer.recognizing(this.privTranslationRecognizer, result);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n\r\n            case \"translation.response\":\r\n                const phrase: { SpeechPhrase: ITranslationPhrase } = JSON.parse(connectionMessage.textBody);\r\n                if (!!phrase.SpeechPhrase) {\r\n                    await handleTranslationPhrase(TranslationPhrase.fromTranslationResponse(phrase));\r\n                }\r\n                break;\r\n            case \"translation.phrase\":\r\n                await handleTranslationPhrase(TranslationPhrase.fromJSON(connectionMessage.textBody));\r\n                break;\r\n\r\n            case \"translation.synthesis\":\r\n                this.sendSynthesisAudio(connectionMessage.binaryBody, this.privRequestSession.sessionId);\r\n                processed = true;\r\n                break;\r\n\r\n            case \"translation.synthesis.end\":\r\n                const synthEnd: TranslationSynthesisEnd = TranslationSynthesisEnd.fromJSON(connectionMessage.textBody);\r\n\r\n                switch (synthEnd.SynthesisStatus) {\r\n                    case SynthesisStatus.Error:\r\n                        if (!!this.privTranslationRecognizer.synthesizing) {\r\n                            const result = new TranslationSynthesisResult(ResultReason.Canceled, undefined);\r\n                            const retEvent: TranslationSynthesisEventArgs = new TranslationSynthesisEventArgs(result, this.privRequestSession.sessionId);\r\n\r\n                            try {\r\n                                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\r\n                                /* tslint:disable:no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n\r\n                        if (!!this.privTranslationRecognizer.canceled) {\r\n                            // And raise a canceled event to send the rich(er) error message back.\r\n                            const canceledResult: TranslationRecognitionCanceledEventArgs = new TranslationRecognitionCanceledEventArgs(\r\n                                this.privRequestSession.sessionId,\r\n                                CancellationReason.Error,\r\n                                synthEnd.FailureReason,\r\n                                CancellationErrorCode.ServiceError,\r\n                                null);\r\n\r\n                            try {\r\n                                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, canceledResult);\r\n                                /* tslint:disable:no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                        break;\r\n                    case SynthesisStatus.Success:\r\n                        this.sendSynthesisAudio(undefined, this.privRequestSession.sessionId);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privTranslationRecognizer.canceled) {\r\n\r\n            const cancelEvent: TranslationRecognitionCanceledEventArgs = new TranslationRecognitionCanceledEventArgs(\r\n                sessionId,\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined);\r\n\r\n            try {\r\n                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, cancelEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: TranslationRecognitionResult = new TranslationRecognitionResult(\r\n                undefined, // Translations\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Druation\r\n                undefined, // Offset\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                /* tslint:disable:no-empty */\r\n                this.privSuccessCallback = undefined;\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    private fireEventForResult(serviceResult: TranslationHypothesis | TranslationPhrase, properties: PropertyCollection): TranslationRecognitionEventArgs {\r\n        let translations: Translations;\r\n\r\n        if (undefined !== serviceResult.Translation.Translations) {\r\n            translations = new Translations();\r\n            for (const translation of serviceResult.Translation.Translations) {\r\n                translations.set(translation.Language, translation.Text || translation.DisplayText);\r\n            }\r\n        }\r\n\r\n        let resultReason: ResultReason;\r\n        if (serviceResult instanceof TranslationPhrase) {\r\n            if (serviceResult.Translation.TranslationStatus === TranslationStatus.Success) {\r\n                resultReason = ResultReason.TranslatedSpeech;\r\n            } else {\r\n                resultReason = ResultReason.RecognizedSpeech;\r\n            }\r\n        } else {\r\n            resultReason = ResultReason.TranslatingSpeech;\r\n        }\r\n\r\n        const offset: number = serviceResult.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n\r\n        const result = new TranslationRecognitionResult(\r\n            translations,\r\n            this.privRequestSession.requestId,\r\n            resultReason,\r\n            serviceResult.Text,\r\n            serviceResult.Duration,\r\n            offset,\r\n            serviceResult.Translation.FailureReason,\r\n            JSON.stringify(serviceResult),\r\n            properties);\r\n\r\n        const ev = new TranslationRecognitionEventArgs(result, offset, this.privRequestSession.sessionId);\r\n        return ev;\r\n    }\r\n\r\n    private sendSynthesisAudio(audio: ArrayBuffer, sessionId: string): void {\r\n        const reason = (undefined === audio) ? ResultReason.SynthesizingAudioCompleted : ResultReason.SynthesizingAudio;\r\n        const result = new TranslationSynthesisResult(reason, audio);\r\n        const retEvent: TranslationSynthesisEventArgs = new TranslationSynthesisEventArgs(result, sessionId);\r\n\r\n        if (!!this.privTranslationRecognizer.synthesizing) {\r\n            try {\r\n                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch (error) {\r\n                // Not going to let errors in the event handler\r\n                // trip things up.\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport { HeaderNames } from \"../common.speech/HeaderNames\";\r\nimport {\r\n    ConnectionMessage as IntConnectionMessage,\r\n    MessageType\r\n} from \"../common/Exports\";\r\nimport {\r\n    PropertyCollection\r\n} from \"./PropertyCollection\";\r\nimport { PropertyId } from \"./PropertyId\";\r\n\r\n/**\r\n * ConnectionMessage represents implementation specific messages sent to and received from\r\n * the speech service. These messages are provided for debugging purposes and should not\r\n * be used for production use cases with the Azure Cognitive Services Speech Service.\r\n * Messages sent to and received from the Speech Service are subject to change without\r\n * notice. This includes message contents, headers, payloads, ordering, etc.\r\n * Added in version 1.11.0.\r\n */\r\nexport abstract class ConnectionMessage {\r\n    /**\r\n     * The message path.\r\n     */\r\n    public abstract get path(): string;\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a text message.\r\n     * See also IsBinaryMessage().\r\n     */\r\n    public abstract get isTextMessage(): boolean;\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a binary message.\r\n     * See also GetBinaryMessage().\r\n     */\r\n    public abstract get isBinaryMessage(): boolean;\r\n\r\n    /**\r\n     * Gets the text message payload. Typically the text message content-type is\r\n     * application/json. To determine other content-types use\r\n     * Properties.GetProperty(\"Content-Type\").\r\n     */\r\n    public abstract get TextMessage(): string;\r\n\r\n    /**\r\n     * Gets the binary message payload.\r\n     */\r\n    public abstract get binaryMessage(): ArrayBuffer;\r\n\r\n    /**\r\n     * A collection of properties and their values defined for this <see cref=\"ConnectionMessage\"/>.\r\n     * Message headers can be accessed via this collection (e.g. \"Content-Type\").\r\n     */\r\n    public abstract get properties(): PropertyCollection;\r\n\r\n    /**\r\n     * Returns a string that represents the connection message.\r\n     */\r\n    public abstract toString(): string;\r\n}\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class ConnectionMessageImpl {\r\n\r\n    private privConnectionMessage: IntConnectionMessage;\r\n    private privProperties: PropertyCollection;\r\n\r\n    constructor(message: IntConnectionMessage) {\r\n        this.privConnectionMessage = message;\r\n        this.privProperties = new PropertyCollection();\r\n        if (!!this.privConnectionMessage.headers[HeaderNames.ConnectionId]) {\r\n            this.privProperties.setProperty(PropertyId.Speech_SessionId, this.privConnectionMessage.headers[HeaderNames.ConnectionId]);\r\n        }\r\n\r\n        Object.keys(this.privConnectionMessage.headers).forEach((header: string, index: number, array: string[]): void => {\r\n            this.privProperties.setProperty(header, this.privConnectionMessage.headers[header]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * The message path.\r\n     */\r\n    public get path(): string {\r\n        return this.privConnectionMessage.headers[Object.keys(this.privConnectionMessage.headers).find((key: string) => key.toLowerCase() === \"path\".toLowerCase())];\r\n    }\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a text message.\r\n     * See also IsBinaryMessage().\r\n     */\r\n    public get isTextMessage(): boolean {\r\n        return this.privConnectionMessage.messageType === MessageType.Text;\r\n    }\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a binary message.\r\n     * See also GetBinaryMessage().\r\n     */\r\n    public get isBinaryMessage(): boolean {\r\n        return this.privConnectionMessage.messageType === MessageType.Binary;\r\n    }\r\n\r\n    /**\r\n     * Gets the text message payload. Typically the text message content-type is\r\n     * application/json. To determine other content-types use\r\n     * Properties.GetProperty(\"Content-Type\").\r\n     */\r\n    public get TextMessage(): string {\r\n        return this.privConnectionMessage.textBody;\r\n    }\r\n\r\n    /**\r\n     * Gets the binary message payload.\r\n     */\r\n    public get binaryMessage(): ArrayBuffer {\r\n        return this.privConnectionMessage.binaryBody;\r\n    }\r\n\r\n    /**\r\n     * A collection of properties and their values defined for this <see cref=\"ConnectionMessage\"/>.\r\n     * Message headers can be accessed via this collection (e.g. \"Content-Type\").\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Returns a string that represents the connection message.\r\n     */\r\n    public toString(): string {\r\n        return \"\";\r\n    }\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport { SessionEventArgs } from \"./Exports\";\r\n\r\n/**\r\n * Defines payload for connection events like Connected/Disconnected.\r\n * Added in version 1.2.0\r\n */\r\nexport class ConnectionEventArgs extends SessionEventArgs {\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport {\r\n    ConnectionMessage,\r\n    SessionEventArgs\r\n} from \"./Exports\";\r\n\r\nexport class ConnectionMessageEventArgs {\r\n\r\n    private privConnectionMessage: ConnectionMessage;\r\n\r\n    constructor(message: ConnectionMessage) {\r\n        this.privConnectionMessage = message;\r\n    }\r\n\r\n    /**\r\n     * Gets the <see cref=\"ConnectionMessage\"/> associated with this <see cref=\"ConnectionMessageEventArgs\"/>.\r\n     */\r\n    public get message(): ConnectionMessage {\r\n        return this.privConnectionMessage;\r\n    }\r\n\r\n    /**\r\n     * Returns a string that represents the connection message event.\r\n     */\r\n    public toString(): string {\r\n        return \"Message: \" + this.privConnectionMessage.toString();\r\n    }\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport { SessionEventArgs } from \"./Exports\";\r\n\r\n/**\r\n * Defines payload for any Service message event\r\n * Added in version 1.9.0\r\n */\r\n\r\nexport class ServiceEventArgs extends SessionEventArgs {\r\n    private privJsonResult: string;\r\n    private privEventName: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} json - json payload of the USP message.\r\n     */\r\n    public constructor(json: string,  name: string, sessionId?: string) {\r\n        super(sessionId);\r\n        this.privJsonResult = json;\r\n        this.privEventName = name;\r\n    }\r\n\r\n    public get jsonString(): string {\r\n        return this.privJsonResult;\r\n    }\r\n\r\n    public get eventName(): string {\r\n        return this.privEventName;\r\n    }\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport {\r\n    ServiceRecognizerBase,\r\n    SynthesisAdapterBase,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    ConnectionEvent,\r\n    ConnectionMessageReceivedEvent,\r\n    ConnectionMessageSentEvent,\r\n    IDetachable,\r\n    marshalPromiseToCallbacks,\r\n    ServiceEvent,\r\n} from \"../common/Exports\";\r\nimport {\r\n    ConnectionMessageImpl\r\n} from \"./ConnectionMessage\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    ConnectionEventArgs,\r\n    ConnectionMessageEventArgs,\r\n    Recognizer,\r\n    ServiceEventArgs,\r\n    SpeechSynthesizer,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Connection is a proxy class for managing connection to the speech service of the specified Recognizer.\r\n * By default, a Recognizer autonomously manages connection to service when needed.\r\n * The Connection class provides additional methods for users to explicitly open or close a connection and\r\n * to subscribe to connection status changes.\r\n * The use of Connection is optional, and mainly for scenarios where fine tuning of application\r\n * behavior based on connection status is needed. Users can optionally call Open() to manually set up a connection\r\n * in advance before starting recognition on the Recognizer associated with this Connection.\r\n * If the Recognizer needs to connect or disconnect to service, it will\r\n * setup or shutdown the connection independently. In this case the Connection will be notified by change of connection\r\n * status via Connected/Disconnected events.\r\n * Added in version 1.2.1.\r\n */\r\nexport class Connection {\r\n    private privInternalData: ServiceRecognizerBase | SynthesisAdapterBase;\r\n    private privEventListener: IDetachable;\r\n    private privServiceEventListener: IDetachable;\r\n\r\n    /**\r\n     * Gets the Connection instance from the specified recognizer.\r\n     * @param recognizer The recognizer associated with the connection.\r\n     * @return The Connection instance of the recognizer.\r\n     */\r\n    public static fromRecognizer(recognizer: Recognizer): Connection {\r\n        const recoBase: ServiceRecognizerBase = recognizer.internalData as ServiceRecognizerBase;\r\n\r\n        const ret: Connection = new Connection();\r\n\r\n        ret.privInternalData = recoBase;\r\n        ret.setupEvents();\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Gets the Connection instance from the specified synthesizer.\r\n     * @param synthesizer The synthesizer associated with the connection.\r\n     * @return The Connection instance of the synthesizer.\r\n     */\r\n    public static fromSynthesizer(synthesizer: SpeechSynthesizer): Connection {\r\n        const synthBase: SynthesisAdapterBase = synthesizer.internalData as SynthesisAdapterBase;\r\n\r\n        const ret: Connection = new Connection();\r\n\r\n        ret.privInternalData = synthBase;\r\n        ret.setupEvents();\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Starts to set up connection to the service.\r\n     * Users can optionally call openConnection() to manually set up a connection in advance before starting recognition on the\r\n     * Recognizer associated with this Connection. After starting recognition, calling Open() will have no effect\r\n     *\r\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\r\n     * be notified when the connection is established.\r\n     */\r\n    public openConnection(cb?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privInternalData.connect(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Closes the connection the service.\r\n     * Users can optionally call closeConnection() to manually shutdown the connection of the associated Recognizer.\r\n     *\r\n     * If closeConnection() is called during recognition, recognition will fail and cancel with an error.\r\n     */\r\n    public closeConnection(cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.privInternalData instanceof SynthesisAdapterBase) {\r\n            throw new Error(\"Disconnecting a synthesizer's connection is currently not supported\");\r\n        } else {\r\n            marshalPromiseToCallbacks((this.privInternalData as ServiceRecognizerBase).disconnect(), cb, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Appends a parameter in a message to service.\r\n     * Added in version 1.12.1.\r\n     * @param path The path of the network message.\r\n     * @param propertyName Name of the property\r\n     * @param propertyValue Value of the property. This is a json string.\r\n     */\r\n    public setMessageProperty(path: string, propertyName: string, propertyValue: string | object): void {\r\n        Contracts.throwIfNullOrWhitespace(propertyName, \"propertyName\");\r\n\r\n        if (this.privInternalData instanceof ServiceRecognizerBase) {\r\n            if (path.toLowerCase() !== \"speech.context\") {\r\n                throw new Error(\"Only speech.context message property sets are currently supported for recognizer\");\r\n            } else {\r\n                (this.privInternalData as ServiceRecognizerBase).speechContext.setSection(propertyName, propertyValue);\r\n            }\r\n        } else if (this.privInternalData instanceof SynthesisAdapterBase) {\r\n            if (path.toLowerCase() !== \"synthesis.context\") {\r\n                throw new Error(\"Only synthesis.context message property sets are currently supported for synthesizer\");\r\n            } else {\r\n                (this.privInternalData as SynthesisAdapterBase).synthesisContext.setSection(propertyName, propertyValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends a message to the speech service.\r\n     * Added in version 1.13.0.\r\n     * @param path The WebSocket path of the message\r\n     * @param payload The payload of the message. This is a json string or a ArrayBuffer.\r\n     * @param success A callback to indicate success.\r\n     * @param error A callback to indicate an error.\r\n     */\r\n    public sendMessageAsync(path: string, payload: string | ArrayBuffer, success?: () => void, error?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privInternalData.sendNetworkMessage(path, payload), success, error);\r\n    }\r\n\r\n    /**\r\n     * Any message from service that is not being processed by any other top level recognizers.\r\n     *\r\n     * Will be removed in 2.0.\r\n     */\r\n    public receivedServiceMessage: (args: ServiceEventArgs) => void;\r\n\r\n    /**\r\n     * Any message received from the Speech Service.\r\n     */\r\n    public messageReceived: (args: ConnectionMessageEventArgs) => void;\r\n\r\n    /**\r\n     * Any message sent to the Speech Service.\r\n     */\r\n    public messageSent: (args: ConnectionMessageEventArgs) => void;\r\n\r\n    /**\r\n     * The Connected event to indicate that the recognizer is connected to service.\r\n     */\r\n    public connected: (args: ConnectionEventArgs) => void;\r\n\r\n    /**\r\n     * The Disconnected event to indicate that the recognizer is disconnected from service.\r\n     */\r\n    public disconnected: (args: ConnectionEventArgs) => void;\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     */\r\n    public close(): void {\r\n        /* tslint:disable:no-empty */\r\n    }\r\n\r\n    private setupEvents(): void {\r\n        this.privEventListener = this.privInternalData.connectionEvents.attach((connectionEvent: ConnectionEvent): void => {\r\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\r\n                if (!!this.connected) {\r\n                    this.connected(new ConnectionEventArgs(connectionEvent.connectionId));\r\n                }\r\n            } else if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                if (!!this.disconnected) {\r\n                    this.disconnected(new ConnectionEventArgs(connectionEvent.connectionId));\r\n                }\r\n            } else if (connectionEvent.name === \"ConnectionMessageSentEvent\") {\r\n                if (!!this.messageSent) {\r\n                    this.messageSent(new ConnectionMessageEventArgs(new ConnectionMessageImpl((connectionEvent as ConnectionMessageSentEvent).message)));\r\n                }\r\n            } else if (connectionEvent.name === \"ConnectionMessageReceivedEvent\") {\r\n                if (!!this.messageReceived) {\r\n                    this.messageReceived(new ConnectionMessageEventArgs(new ConnectionMessageImpl((connectionEvent as ConnectionMessageReceivedEvent).message)));\r\n                }\r\n            }\r\n        });\r\n\r\n        this.privServiceEventListener = this.privInternalData.serviceEvents.attach((e: ServiceEvent): void => {\r\n            if (!!this.receivedServiceMessage) {\r\n                this.receivedServiceMessage(new ServiceEventArgs(e.jsonString, e.name));\r\n            }\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n    TranslationConnectionFactory,\r\n    TranslationServiceRecognizer,\r\n} from \"../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Connection } from \"./Connection\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    TranslationRecognitionCanceledEventArgs,\r\n    TranslationRecognitionEventArgs,\r\n    TranslationRecognitionResult,\r\n    TranslationSynthesisEventArgs,\r\n} from \"./Exports\";\r\nimport { SpeechTranslationConfig, SpeechTranslationConfigImpl } from \"./SpeechTranslationConfig\";\r\n\r\n/**\r\n * Translation recognizer\r\n * @class TranslationRecognizer\r\n */\r\nexport class TranslationRecognizer extends Recognizer {\r\n    private privDisposedTranslationRecognizer: boolean;\r\n\r\n    /**\r\n     * Initializes an instance of the TranslationRecognizer.\r\n     * @constructor\r\n     * @param {SpeechTranslationConfig} speechConfig - Set of properties to configure this recognizer.\r\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\r\n     */\r\n    public constructor(speechConfig: SpeechTranslationConfig, audioConfig?: AudioConfig) {\r\n        const configImpl = speechConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(configImpl, \"speechConfig\");\r\n\r\n        super(audioConfig, configImpl.properties, new TranslationConnectionFactory());\r\n\r\n        this.privDisposedTranslationRecognizer = false;\r\n\r\n        if (this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined) !== undefined) {\r\n            Contracts.throwIfNullOrWhitespace(\r\n                this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice),\r\n                PropertyId[PropertyId.SpeechServiceConnection_TranslationVoice]);\r\n        }\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages),\r\n            PropertyId[PropertyId.SpeechServiceConnection_TranslationToLanguages]);\r\n\r\n        Contracts.throwIfNullOrWhitespace(this.properties.getProperty(\r\n            PropertyId.SpeechServiceConnection_RecoLanguage),\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n    }\r\n\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member TranslationRecognizer.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: TranslationRecognizer, event: TranslationRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member TranslationRecognizer.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: TranslationRecognizer, event: TranslationRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member TranslationRecognizer.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: TranslationRecognizer, event: TranslationRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * The event synthesizing signals that a translation synthesis result is received.\r\n     * @member TranslationRecognizer.prototype.synthesizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesizing: (sender: TranslationRecognizer, event: TranslationSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the language name that was set when the recognizer was created.\r\n     * @member TranslationRecognizer.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} Gets the language name that was set when the recognizer was created.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * Gets target languages for translation that were set when the recognizer was created.\r\n     * The language is specified in BCP-47 format. The translation will provide translated text for each of language.\r\n     * @member TranslationRecognizer.prototype.targetLanguages\r\n     * @function\r\n     * @public\r\n     * @returns {string[]} Gets target languages for translation that were set when the recognizer was created.\r\n     */\r\n    public get targetLanguages(): string[] {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n    }\r\n\r\n    /**\r\n     * Gets the name of output voice.\r\n     * @member TranslationRecognizer.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @returns {string} the name of output voice.\r\n     */\r\n    public get voiceName(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member TranslationRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member TranslationRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - Authorization token.\r\n     */\r\n    public set authorizationToken(value: string) {\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this TranslationRecognizer.\r\n     * @member TranslationRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this TranslationRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Starts recognition and translation, and stops after the first utterance is recognized.\r\n     * The task returns the translation text as result.\r\n     * Note: recognizeOnceAsync returns when the first utterance has been recognized, so it is suitableonly\r\n     *       for single shot recognition like command or query. For long-running recognition,\r\n     *       use startContinuousRecognitionAsync() instead.\r\n     * @member TranslationRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the result when the translation has completed.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public recognizeOnceAsync(cb?: (e: TranslationRecognitionResult) => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts recognition and translation, until stopContinuousRecognitionAsync() is called.\r\n     * User must subscribe to events to receive translation results.\r\n     * @member TranslationRecognizer.prototype.startContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the translation has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stops continuous recognition and translation.\r\n     * @member TranslationRecognizer.prototype.stopContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the translation has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * dynamically remove a language from list of target language\r\n     * (can be used while recognition is ongoing)\r\n     * @member TranslationRecognizer.prototype.removeTargetLanguage\r\n     * @function\r\n     * @param lang - language to be removed\r\n     * @public\r\n     */\r\n    public removeTargetLanguage(lang: string): void {\r\n        Contracts.throwIfNullOrUndefined(lang, \"language to be removed\");\r\n        if (this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\r\n            const languages: string[] = this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n            const index: number = languages.indexOf(lang);\r\n            if (index > -1) {\r\n                languages.splice(index, 1);\r\n                this.properties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\r\n                this.updateLanguages(languages);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * dynamically add a language to list of target language\r\n     * (can be used while recognition is ongoing)\r\n     * @member TranslationRecognizer.prototype.addTargetLanguage\r\n     * @function\r\n     * @param lang - language to be added\r\n     * @public\r\n     */\r\n    public addTargetLanguage(lang: string): void {\r\n        Contracts.throwIfNullOrUndefined(lang, \"language to be added\");\r\n        let languages: string[] = [];\r\n        if (this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\r\n            languages = this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n            if (!languages.includes(lang)) {\r\n                languages.push(lang);\r\n                this.properties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\r\n            }\r\n        } else {\r\n            this.properties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, lang);\r\n            languages = [lang];\r\n        }\r\n        this.updateLanguages(languages);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member TranslationRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * handles ConnectionEstablishedEvent for conversation translation scenarios.\r\n     * @member TranslationRecognizer.prototype.onConnection\r\n     * @function\r\n     * @public\r\n     */\r\n    /* tslint:disable:no-empty */\r\n    public onConnection(): void { }\r\n\r\n    /**\r\n     * handles disconnection events for conversation translation scenarios.\r\n     * @member TranslationRecognizer.prototype.onDisconnection\r\n     * @function\r\n     * @public\r\n     */\r\n    /* tslint:disable:no-empty */\r\n    public async onDisconnection(): Promise<void> { }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedTranslationRecognizer) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposedTranslationRecognizer = true;\r\n\r\n        if (disposing) {\r\n            await this.implRecognizerStop();\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.properties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n\r\n        return new TranslationServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n\r\n    private updateLanguages(languages: string[]): void {\r\n        const conn: Connection = Connection.fromRecognizer(this);\r\n        if (!!conn) {\r\n            conn.setMessageProperty(\"speech.context\", \"translationcontext\", {to: languages});\r\n            conn.sendMessageAsync(\"event\", JSON.stringify({\r\n                id: \"translation\",\r\n                name: \"updateLanguage\",\r\n                to: languages\r\n                }));\r\n        }\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionStatus, SimpleSpeechPhrase } from \"../../src/common.speech/Exports\";\r\nimport { IntentRecognitionResult, NoMatchReason, SpeechRecognitionResult, TranslationRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Contains detailed information for NoMatch recognition results.\r\n * @class NoMatchDetails\r\n */\r\nexport class NoMatchDetails {\r\n    private privReason: NoMatchReason;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {NoMatchReason} reason - The no-match reason.\r\n     */\r\n    private constructor(reason: NoMatchReason) {\r\n        this.privReason = reason;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\r\n     * @member NoMatchDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\r\n     *        result - The recognition result that was not recognized.\r\n     * @returns {NoMatchDetails} The no match details object being created.\r\n     */\r\n    public static fromResult(result: SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult): NoMatchDetails {\r\n        const simpleSpeech: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(result.json);\r\n\r\n        let reason: NoMatchReason = NoMatchReason.NotRecognized;\r\n\r\n        switch (simpleSpeech.RecognitionStatus) {\r\n            case RecognitionStatus.BabbleTimeout:\r\n                reason = NoMatchReason.InitialBabbleTimeout;\r\n                break;\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n                reason = NoMatchReason.InitialSilenceTimeout;\r\n                break;\r\n            default:\r\n                reason = NoMatchReason.NotRecognized;\r\n                break;\r\n        }\r\n\r\n        return new NoMatchDetails(reason);\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member NoMatchDetails.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {NoMatchReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): NoMatchReason {\r\n        return this.privReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Contains detailed information about why a result was canceled.\r\n * @class CancellationDetailsBase\r\n */\r\nexport class CancellationDetailsBase {\r\n    private privReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {CancellationReason} reason - The cancellation reason.\r\n     * @param {string} errorDetails - The error details, if provided.\r\n     */\r\n    protected constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member CancellationDetailsBase.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member CancellationDetailsBase.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful recognition.\r\n     * Added in version 1.1.0.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get ErrorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationErrorCodePropertyName, EnumTranslation, SimpleSpeechPhrase } from \"../common.speech/Exports\";\r\nimport { CancellationDetailsBase } from \"./CancellationDetailsBase\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    RecognitionResult,\r\n    SpeechSynthesisResult\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Contains detailed information about why a result was canceled.\r\n * @class CancellationDetails\r\n */\r\nexport class CancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of CancellationDetails object for the canceled RecognitionResult.\r\n     * @member CancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {RecognitionResult | SpeechSynthesisResult} result - The result that was canceled.\r\n     * @returns {CancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: RecognitionResult | SpeechSynthesisResult): CancellationDetails {\r\n        let reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (result instanceof RecognitionResult && !!result.json) {\r\n            const simpleSpeech: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(result.json);\r\n            reason = EnumTranslation.implTranslateCancelResult(simpleSpeech.RecognitionStatus);\r\n        }\r\n\r\n        if (!!result.properties) {\r\n            errorCode = (CancellationErrorCode as any)[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])];\r\n        }\r\n\r\n        return new CancellationDetails(reason, result.errorDetails || EnumTranslation.implTranslateErrorDetails(errorCode), errorCode);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    ServiceRecognizerBase,\r\n} from \"../common.speech/Exports\";\r\nimport { Recognizer } from \"./Exports\";\r\n\r\n/**\r\n * Allows additions of new phrases to improve speech recognition.\r\n *\r\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\r\n * to the speech service.\r\n */\r\nexport class PhraseListGrammar {\r\n    private privGrammerBuilder: DynamicGrammarBuilder;\r\n\r\n    private constructor(recogBase: ServiceRecognizerBase) {\r\n        this.privGrammerBuilder = recogBase.dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\r\n     * @param recognizer The recognizer to add phrase lists to.\r\n     */\r\n    public static fromRecognizer(recognizer: Recognizer): PhraseListGrammar {\r\n        const recoBase: ServiceRecognizerBase = recognizer.internalData as ServiceRecognizerBase;\r\n\r\n        return new PhraseListGrammar(recoBase);\r\n    }\r\n\r\n    /**\r\n     * Adds a single phrase to the current recognizer.\r\n     * @param phrase Phrase to add.\r\n     */\r\n    public addPhrase(phrase: string): void {\r\n        this.privGrammerBuilder.addPhrase(phrase);\r\n    }\r\n\r\n    /**\r\n     * Adds multiple phrases to the current recognizer.\r\n     * @param phrases Array of phrases to add.\r\n     */\r\n    public addPhrases(phrases: string[]): void {\r\n        this.privGrammerBuilder.addPhrase(phrases);\r\n    }\r\n\r\n    /**\r\n     * Clears all phrases added to the current recognizer.\r\n     */\r\n    public clear(): void {\r\n        this.privGrammerBuilder.clearPhrases();\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport { PropertyCollection, PropertyId, ServicePropertyChannel, SpeechConfigImpl } from \"./Exports\";\r\nimport { OutputFormat } from \"./OutputFormat\";\r\n\r\n/**\r\n * Class that defines base configurations for dialog service connector\r\n * @class DialogServiceConfig\r\n */\r\nexport abstract class DialogServiceConfig {\r\n\r\n    /**\r\n     * Creates an instance of DialogService config.\r\n     * @constructor\r\n     */\r\n    protected constructor() { }\r\n\r\n    /**\r\n     * Sets an arbitrary property.\r\n     * @member DialogServiceConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string | PropertyId, value: string): void;\r\n\r\n    /**\r\n     * Returns the current value of an arbitrary property.\r\n     * @member DialogServiceConfig.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to query.\r\n     * @param {string} def - The value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public abstract getProperty(name: string | PropertyId, def?: string): string;\r\n\r\n    /**\r\n     * @member DialogServiceConfig.prototype.setServiceProperty\r\n     * @function\r\n     * @public\r\n     * @param {name} The name of the property.\r\n     * @param {value} Value to set.\r\n     * @param {channel} The channel used to pass the specified property to service.\r\n     * @summary Sets a property value that will be passed to service using the specified channel.\r\n     */\r\n    public abstract setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void;\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server.\r\n     * @param proxyPort The port number of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number): void;\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\r\n     * @param porxyPort The port number of the proxy server.\r\n     * @param proxyUserName The user name of the proxy server.\r\n     * @param proxyPassword The password of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n\r\n    /**\r\n     * Returns the configured language.\r\n     * @member DialogServiceConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract get speechRecognitionLanguage(): string;\r\n\r\n    /**\r\n     * Gets/Sets the input language.\r\n     * @member DialogServiceConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language to use for recognition.\r\n     */\r\n    public abstract set speechRecognitionLanguage(value: string);\r\n\r\n    /**\r\n     * Sets the corresponding backend application identifier.\r\n     * @member DialogServiceConfig.prototype.Conversation_ApplicationId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The application identifier to set.\r\n     */\r\n    // tslint:disable-next-line: no-empty\r\n    public set applicationId(value: string) { }\r\n\r\n    public static DialogTypes: any = class {\r\n        public static BotFramework: string = \"bot_framework\";\r\n        public static CustomCommands: string = \"custom_commands\";\r\n    };\r\n}\r\n\r\n/**\r\n * Dialog Service configuration.\r\n * @class DialogServiceConfigImpl\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class DialogServiceConfigImpl extends DialogServiceConfig {\r\n\r\n    private privSpeechConfig: SpeechConfigImpl;\r\n\r\n    /**\r\n     * Creates an instance of dialogService config.\r\n     */\r\n    public constructor() {\r\n        super();\r\n        this.privSpeechConfig = new SpeechConfigImpl();\r\n    }\r\n\r\n    /**\r\n     * Provides access to custom properties.\r\n     * @member DialogServiceConfigImpl.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The properties.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privSpeechConfig.properties;\r\n    }\r\n\r\n    /**\r\n     * Gets the speech recognition language.\r\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechConfig.speechRecognitionLanguage;\r\n    }\r\n\r\n    /**\r\n     * Sets the speech recognition language.\r\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language to set.\r\n     */\r\n    public set speechRecognitionLanguage(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n        this.privSpeechConfig.speechRecognitionLanguage = value;\r\n    }\r\n\r\n    public get outputFormat(): OutputFormat {\r\n        return this.privSpeechConfig.outputFormat;\r\n    }\r\n\r\n    public set outputFormat(value: OutputFormat) {\r\n        this.privSpeechConfig.outputFormat = value;\r\n    }\r\n\r\n    /**\r\n     * Sets a named property as value\r\n     * @member DialogServiceConfigImpl.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {PropertyId | string} name - The property to set.\r\n     * @param {string} value - The value.\r\n     */\r\n    public setProperty(name: string | PropertyId, value: string): void {\r\n        this.privSpeechConfig.setProperty(name, value);\r\n    }\r\n\r\n    /**\r\n     * Sets a named property as value\r\n     * @member DialogServiceConfigImpl.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {PropertyId | string} name - The property to get.\r\n     * @param {string} def - The default value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public getProperty(name: string | PropertyId, def?: string): string {\r\n        return this.privSpeechConfig.getProperty(name);\r\n    }\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\r\n     * @param proxyPort The port number of the proxy server.\r\n     * @param proxyUserName The user name of the proxy server.\r\n     * @param proxyPassword The password of the proxy server.\r\n     */\r\n    public setProxy(proxyHostName: string, proxyPort: number, proxyUserName?: string, proxyPassword?: string): void {\r\n        this.setProperty(PropertyId.SpeechServiceConnection_ProxyHostName, proxyHostName);\r\n        this.setProperty(PropertyId.SpeechServiceConnection_ProxyPort, `${proxyPort}`);\r\n        if (proxyUserName) {\r\n            this.setProperty(PropertyId.SpeechServiceConnection_ProxyUserName, proxyUserName);\r\n        }\r\n        if (proxyPassword) {\r\n            this.setProperty(PropertyId.SpeechServiceConnection_ProxyPassword, proxyPassword);\r\n        }\r\n    }\r\n\r\n    public setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void {\r\n        this.privSpeechConfig.setServiceProperty(name, value, channel);\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member DialogServiceConfigImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        return;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport { DialogServiceConfig, DialogServiceConfigImpl } from \"./DialogServiceConfig\";\r\nimport { PropertyId } from \"./Exports\";\r\n\r\n/**\r\n * Class that defines configurations for the dialog service connector object for using a Bot Framework backend.\r\n * @class BotFrameworkConfig\r\n */\r\nexport class BotFrameworkConfig extends DialogServiceConfigImpl {\r\n\r\n    /**\r\n     * Creates an instance of BotFrameworkConfig.\r\n     */\r\n    public constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Creates a bot framework configuration instance with the provided subscription information.\r\n     * @member BotFrameworkConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param subscription Subscription key associated with the bot\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\r\n     *        resource name.\r\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\r\n     */\r\n    public static fromSubscription(subscription: string, region: string, botId?: string): BotFrameworkConfig {\r\n        Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscription);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n\r\n        if (botId) {\r\n            botFrameworkConfig.setProperty(PropertyId.Conversation_ApplicationId, botId);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates a bot framework configuration instance for the specified authorization token and region.\r\n     * Note: The caller must ensure that an authorization token is valid. Before an authorization token expires, the\r\n     *       caller must refresh it by setting the authorizationToken property on the corresponding\r\n     *       DialogServiceConnector instance created with this config. The contents of configuration objects are copied\r\n     *       when connectors are created, so setting authorizationToken on a DialogServiceConnector will not update the\r\n     *       original configuration's authorization token. Create a new configuration instance or set the\r\n     *       SpeechServiceAuthorization_Token property to update an existing instance if it will be used to create\r\n     *       further DialogServiceConnectors.\r\n     * @member BotFrameworkConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param authorizationToken The authorization token associated with the bot\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\r\n     *        resource name.\r\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\r\n     */\r\n    public static fromAuthorizationToken(\r\n        authorizationToken: string, region: string, botId?: string\r\n    ): BotFrameworkConfig {\r\n        Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n\r\n        if (botId) {\r\n            botFrameworkConfig.setProperty(PropertyId.Conversation_ApplicationId, botId);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of a BotFrameworkConfig.\r\n     * This method is intended only for users who use a non-default service host. The standard resource path will be\r\n     * assumed. For services with a non-standard resource path or no path at all, use fromEndpoint instead.\r\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\r\n     * Note: To use an authorization token with fromHost, use fromHost(URL) and then set the AuthorizationToken\r\n     *       property on the created BotFrameworkConfig instance.\r\n     * Note: Added in version 1.15.0.\r\n     * @member BotFrameworkConfig.fromHost\r\n     * @function\r\n     * @public\r\n     * @param {URL | string} host - If a URL is provided, the fully-qualified host with protocol (e.g.\r\n     *        wss://your.host.com:1234) will be used. If a string is provided, it will be embedded in\r\n     *        wss://{host}.convai.speech.azure.us.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization\r\n     *        token must be set.\r\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\r\n     *        resource name.\r\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\r\n     */\r\n    public static fromHost(\r\n        host: URL | string,\r\n        subscriptionKey?: string,\r\n        botId?: string): BotFrameworkConfig {\r\n\r\n        Contracts.throwIfNullOrUndefined(host, \"host\");\r\n        const resolvedHost: URL = host instanceof URL ? host : new URL(`wss://${host}.convai.speech.azure.us`);\r\n        Contracts.throwIfNullOrUndefined(resolvedHost, \"resolvedHost\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Host, resolvedHost.toString());\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of a BotFrameworkConfig.\r\n     * This method is intended only for users who use a non-standard service endpoint or parameters.\r\n     * Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.\r\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\r\n     *       fromEndpoint method, and then set authorizationToken=\"token\" on the created BotFrameworkConfig instance to\r\n     *       use the authorization token.\r\n     * Note: Added in version 1.15.0.\r\n     * @member BotFrameworkConfig.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} endpoint - The service endpoint to connect to.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization\r\n     *        token must be set.\r\n     * @returns {BotFrameworkConfig} - A new bot framework configuration instance using the provided endpoint.\r\n     */\r\n    public static fromEndpoint(endpoint: URL, subscriptionKey?: string): BotFrameworkConfig {\r\n        Contracts.throwIfNull(endpoint, \"endpoint\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Endpoint, endpoint.toString());\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport { DialogServiceConfig, DialogServiceConfigImpl } from \"./DialogServiceConfig\";\r\nimport { PropertyId } from \"./Exports\";\r\n\r\n/**\r\n * Class that defines configurations for the dialog service connector object for using a CustomCommands backend.\r\n * @class CustomCommandsConfig\r\n */\r\nexport class CustomCommandsConfig extends DialogServiceConfigImpl {\r\n\r\n    /**\r\n     * Creates an instance of CustomCommandsConfig.\r\n     */\r\n    public constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the bot framework config with the specified subscription and region.\r\n     * @member CustomCommandsConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param applicationId Speech Commands application id.\r\n     * @param subscription Subscription key associated with the bot\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {CustomCommandsConfig} A new bot framework config.\r\n     */\r\n    public static fromSubscription(applicationId: string, subscription: string, region: string): CustomCommandsConfig {\r\n        Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\r\n        Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const customCommandsConfig: CustomCommandsConfig = new DialogServiceConfigImpl();\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_DialogType, DialogServiceConfig.DialogTypes.CustomCommands);\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_ApplicationId, applicationId);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscription);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return customCommandsConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the bot framework config with the specified Speech Commands application id, authorization token and region.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created.\r\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\r\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\r\n     * @member CustomCommandsConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param applicationId Speech Commands application id.\r\n     * @param authorizationToken The authorization token associated with the application.\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {CustomCommandsConfig} A new speech commands config.\r\n     */\r\n    public static fromAuthorizationToken(applicationId: string, authorizationToken: string, region: string): CustomCommandsConfig {\r\n        Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\r\n        Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const customCommandsConfig: CustomCommandsConfig = new DialogServiceConfigImpl();\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_DialogType, DialogServiceConfig.DialogTypes.CustomCommands);\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_ApplicationId, applicationId);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return customCommandsConfig;\r\n    }\r\n\r\n    /**\r\n     * Sets the corresponding backend application identifier.\r\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The application identifier to set.\r\n     */\r\n    public set applicationId(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n        this.setProperty(PropertyId.Conversation_ApplicationId, value);\r\n    }\r\n\r\n    /**\r\n     * Gets the corresponding backend application identifier.\r\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The application identifier to get.\r\n     */\r\n    public get applicationId(): string {\r\n        return this.getProperty(PropertyId.Conversation_ApplicationId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport { OutputFormatPropertyName } from \"../common.speech/Exports\";\r\nimport { IConnection, IStringDictionary } from \"../common/Exports\";\r\nimport { DialogServiceConfig, OutputFormat, PropertyId } from \"../sdk/Exports\";\r\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase\";\r\nimport { AuthInfo, RecognizerConfig, WebsocketMessageFormatter } from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { QueryParameterNames } from \"./QueryParameterNames\";\r\n\r\nexport class DialogConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    private static Constants: any = class {\r\n        private static ApiKey: string = \"api\";\r\n        private static BaseUrl: string = \"convai.speech\";\r\n    };\r\n\r\n    public create = (\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection => {\r\n\r\n        const applicationId: string = config.parameters.getProperty(PropertyId.Conversation_ApplicationId, \"\");\r\n        const dialogType: string = config.parameters.getProperty(PropertyId.Conversation_DialogType);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n        const language: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, \"en-US\");\r\n        const requestTurnStatus: string = config.parameters.getProperty(PropertyId.Conversation_Request_Bot_Status_Messages, \"true\");\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n        queryParams[HeaderNames.ConnectionId] = connectionId;\r\n        queryParams[QueryParameterNames.Format] = config.parameters.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]).toLowerCase();\r\n        queryParams[QueryParameterNames.Language] = language;\r\n        queryParams[QueryParameterNames.RequestBotStatusMessages] = requestTurnStatus;\r\n        if (applicationId) {\r\n            queryParams[QueryParameterNames.BotId] = applicationId;\r\n            if (dialogType === DialogServiceConfig.DialogTypes.CustomCommands) {\r\n                queryParams[HeaderNames.CustomCommandsAppId] = applicationId;\r\n            }\r\n        }\r\n\r\n        const resourceInfix: string =\r\n            dialogType === DialogServiceConfig.DialogTypes.CustomCommands ? \"commands/\"\r\n            : \"\";\r\n        const version: string =\r\n            dialogType === DialogServiceConfig.DialogTypes.CustomCommands ? \"v1\"\r\n            : dialogType === DialogServiceConfig.DialogTypes.BotFramework ? \"v3\"\r\n            : \"v0\";\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n\r\n        if (authInfo.token != null && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n\r\n        // The URL used for connection is chosen in a priority order of specification:\r\n        //  1. If a custom endpoint is provided, that URL is used verbatim.\r\n        //  2. If a custom host is provided (e.g. \"wss://my.custom.endpoint.com:1123\"), a URL is constructed from it.\r\n        //  3. If no custom connection details are provided, a URL is constructed from default values.\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, \"\");\r\n        if (!endpoint) {\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            const host: string = config.parameters.getProperty(\r\n                PropertyId.SpeechServiceConnection_Host,\r\n                `wss://${region}.${DialogConnectionFactory.Constants.BaseUrl}${hostSuffix}`);\r\n            const standardizedHost: string = host.endsWith(\"/\") ? host : host + \"/\";\r\n            endpoint = `${standardizedHost}${resourceInfix}${DialogConnectionFactory.Constants.ApiKey}/${version}`;\r\n        }\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { AgentConfig } from \"../common.speech/Exports\";\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class DialogEvent extends PlatformEvent {\r\n\r\n    constructor(eventName: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n    }\r\n}\r\n\r\nexport class SendingAgentContextMessageEvent extends DialogEvent {\r\n    private privAgentConfig: AgentConfig;\r\n\r\n    constructor(agentConfig: AgentConfig) {\r\n        super(\"SendingAgentContextMessageEvent\");\r\n        this.privAgentConfig = agentConfig;\r\n    }\r\n\r\n    public get agentConfig(): AgentConfig {\r\n        return this.privAgentConfig;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// response\r\n\r\nexport interface IActivityPayloadResponse {\r\n    conversationId: string;\r\n    messageDataStreamType: number;\r\n    messagePayload: any;\r\n    version: number;\r\n}\r\n\r\nexport class ActivityPayloadResponse implements IActivityPayloadResponse {\r\n    private privActivityResponse: IActivityPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privActivityResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): ActivityPayloadResponse {\r\n        return new ActivityPayloadResponse(json);\r\n    }\r\n\r\n    public get conversationId(): string {\r\n        return this.privActivityResponse.conversationId;\r\n    }\r\n\r\n    public get messageDataStreamType(): number {\r\n        return this.privActivityResponse.messageDataStreamType;\r\n    }\r\n\r\n    public get messagePayload(): any {\r\n        return this.privActivityResponse.messagePayload;\r\n    }\r\n\r\n    public get version(): number {\r\n        return this.privActivityResponse.version;\r\n    }\r\n}\r\n\r\nexport enum MessageDataStreamType {\r\n    None = 0,\r\n    TextToSpeechAudio = 1,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PullAudioOutputStream } from \"./Audio/AudioOutputStream\";\r\n\r\n/**\r\n * Defines contents of received message/events.\r\n * @class ActivityReceivedEventArgs\r\n */\r\nexport class ActivityReceivedEventArgs {\r\n    private privActivity: any;\r\n    private privAudioStream: PullAudioOutputStream;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {any} activity - The activity..\r\n     */\r\n    public constructor(activity: any, audioStream?: PullAudioOutputStream) {\r\n        this.privActivity = activity;\r\n        this.privAudioStream = audioStream;\r\n    }\r\n\r\n    /**\r\n     * Gets the received activity\r\n     * @member ActivityReceivedEventArgs.prototype.activity\r\n     * @function\r\n     * @public\r\n     * @returns {any} the received activity.\r\n     */\r\n    public get activity(): any {\r\n        return this.privActivity;\r\n    }\r\n\r\n    public get audioStream(): PullAudioOutputStream {\r\n        return this.privAudioStream;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport interface ITurnStatusResponsePayload {\r\n    interactionId: string;\r\n    conversationId: string;\r\n    statusCode: any;\r\n}\r\n\r\nexport class TurnStatusResponsePayload implements ITurnStatusResponsePayload {\r\n    private privMessageStatusResponse: ITurnStatusResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privMessageStatusResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): TurnStatusResponsePayload {\r\n        return new TurnStatusResponsePayload(json);\r\n    }\r\n\r\n    public get interactionId(): string {\r\n        return this.privMessageStatusResponse.interactionId;\r\n    }\r\n\r\n    public get conversationId(): string {\r\n        return this.privMessageStatusResponse.conversationId;\r\n    }\r\n\r\n    public get statusCode(): any {\r\n        // Payloads may contain a limited set of textual representations or a numeric status\r\n        // code. The textual values are here converted into numeric ones.\r\n        switch (this.privMessageStatusResponse.statusCode) {\r\n            case \"Success\":\r\n                return 200;\r\n            case \"Failed\":\r\n                return 400;\r\n            case \"TimedOut\":\r\n                return 429;\r\n            default:\r\n                return this.privMessageStatusResponse.statusCode;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ITurnStatusResponsePayload,\r\n    TurnStatusResponsePayload\r\n    } from \"../common.speech/ServiceMessages/TurnStatusPayload\";\r\n\r\n/**\r\n * Defines contents of received message/events.\r\n * @class TurnStatusReceivedEventArgs\r\n */\r\nexport class TurnStatusReceivedEventArgs {\r\n    private privTurnStatus: ITurnStatusResponsePayload;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} turnStatus - The JSON-encoded turn status message.\r\n     */\r\n    public constructor(turnStatus: string) {\r\n        this.privTurnStatus = TurnStatusResponsePayload.fromJSON(turnStatus);\r\n    }\r\n\r\n    /**\r\n     * Gets the interaction identifier associated with this turn status event.\r\n     * @member TurnStatusReceivedEventArgs.prototype.interactionId\r\n     * @function\r\n     * @public\r\n     * @returns {any} the received interaction id.\r\n     */\r\n    public get interactionId(): any {\r\n        return this.privTurnStatus.interactionId;\r\n    }\r\n\r\n    /**\r\n     * Gets the conversation identifier associated with this turn status event.\r\n     * @member TurnStatusReceivedEventArgs.prototype.conversationId\r\n     * @function\r\n     * @public\r\n     * @returns {any} the received conversation id.\r\n     */\r\n    public get conversationId(): any {\r\n        return this.privTurnStatus.conversationId;\r\n    }\r\n\r\n    /**\r\n     * Gets the received turn status code.\r\n     * @member TurnStatusReceivedEventArgs.prototype.statusCode\r\n     * @function\r\n     * @public\r\n     * @returns {number} the received turn status.\r\n     */\r\n    public get statusCode(): number {\r\n        return this.privTurnStatus.statusCode;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport { AudioOutputStream, PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { DialogServiceTurnStateManager } from \"./DialogServiceTurnStateManager\";\r\nimport { ActivityPayloadResponse, MessageDataStreamType } from \"./ServiceMessages/ActivityResponsePayload\";\r\n\r\nexport class DialogServiceTurnState {\r\n    private privRequestId: string;\r\n    private privIsCompleted: boolean;\r\n    private privAudioStream: PullAudioOutputStreamImpl;\r\n    private privTimeoutToken: any;\r\n    private privTurnManager: DialogServiceTurnStateManager;\r\n\r\n    constructor(manager: DialogServiceTurnStateManager, requestId: string) {\r\n        this.privRequestId = requestId;\r\n        this.privIsCompleted = false;\r\n        this.privAudioStream = null;\r\n        this.privTurnManager = manager;\r\n        this.resetTurnEndTimeout();\r\n        // tslint:disable-next-line:no-console\r\n        // console.info(\"DialogServiceTurnState debugturn start:\" + this.privRequestId);\r\n    }\r\n\r\n    public get audioStream(): PullAudioOutputStreamImpl {\r\n        // Called when is needed to stream.\r\n        this.resetTurnEndTimeout();\r\n        return this.privAudioStream;\r\n    }\r\n\r\n    public processActivityPayload(payload: ActivityPayloadResponse, audioFormat?: AudioOutputFormatImpl): PullAudioOutputStreamImpl {\r\n        if (payload.messageDataStreamType === MessageDataStreamType.TextToSpeechAudio) {\r\n            this.privAudioStream = AudioOutputStream.createPullStream() as PullAudioOutputStreamImpl;\r\n            this.privAudioStream.format = (audioFormat !== undefined) ? audioFormat : AudioOutputFormatImpl.getDefaultOutputFormat();\r\n            // tslint:disable-next-line:no-console\r\n            // console.info(\"Audio start debugturn:\" + this.privRequestId);\r\n        }\r\n        return this.privAudioStream;\r\n    }\r\n\r\n    public endAudioStream(): void {\r\n        if (this.privAudioStream !== null && !this.privAudioStream.isClosed) {\r\n            this.privAudioStream.close();\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        if (this.privTimeoutToken !== undefined) {\r\n            clearTimeout(this.privTimeoutToken);\r\n        }\r\n        this.endAudioStream();\r\n    }\r\n\r\n    private resetTurnEndTimeout(): void {\r\n        if (this.privTimeoutToken !== undefined) {\r\n            clearTimeout(this.privTimeoutToken);\r\n        }\r\n        // tslint:disable-next-line:no-console\r\n        // console.info(\"Timeout reset debugturn:\" + this.privRequestId);\r\n\r\n        this.privTimeoutToken = setTimeout((): void => {\r\n            // tslint:disable-next-line:no-console\r\n            // console.info(\"Timeout complete debugturn:\" + this.privRequestId);\r\n\r\n            this.privTurnManager.CompleteTurn(this.privRequestId);\r\n            return;\r\n        }, 2000);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines channels used to pass property settings to service.\r\n * Added in version 1.7.0.\r\n */\r\nexport enum ServicePropertyChannel {\r\n    /**\r\n     * Uses URI query parameter to pass property settings to service.\r\n     */\r\n    UriQueryParameter = 0.\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"../common/Error\";\r\nimport { AudioOutputStream, PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { DialogServiceTurnState } from \"./DialogServiceTurnState\";\r\nimport { ActivityPayloadResponse } from \"./ServiceMessages/ActivityResponsePayload\";\r\n\r\nexport class DialogServiceTurnStateManager {\r\n    private privTurnMap: Map<string, DialogServiceTurnState>;\r\n\r\n    constructor() {\r\n        this.privTurnMap = new Map<string, DialogServiceTurnState>();\r\n        return;\r\n    }\r\n\r\n    public StartTurn(id: string): DialogServiceTurnState {\r\n        if (this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\r\n        }\r\n        const turnState: DialogServiceTurnState = new DialogServiceTurnState(this, id);\r\n        this.privTurnMap.set(id, turnState);\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public GetTurn(id: string): DialogServiceTurnState {\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public CompleteTurn(id: string): DialogServiceTurnState {\r\n        if (!this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\r\n        }\r\n        const turnState = this.privTurnMap.get(id);\r\n        turnState.complete();\r\n        this.privTurnMap.delete(id);\r\n        return turnState;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// speech.keyword\r\nexport interface ISpeechKeyword {\r\n    Status: string;\r\n    Text: string;\r\n    Offset: number;\r\n    Duration: number;\r\n}\r\n\r\nexport class SpeechKeyword implements ISpeechKeyword {\r\n    private privSpeechKeyword: ISpeechKeyword;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechKeyword = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechKeyword {\r\n        return new SpeechKeyword(json);\r\n    }\r\n\r\n    public get Status(): string {\r\n        return this.privSpeechKeyword.Status;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privSpeechKeyword.Text;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechKeyword.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSpeechKeyword.Duration;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ReplayableAudioNode\r\n} from \"../common.browser/Exports\";\r\nimport { SendingAgentContextMessageEvent } from \"../common/DialogEvents\";\r\nimport {\r\n    BackgroundEvent,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    createGuid,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    DialogEvent,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IConnection,\r\n    MessageType,\r\n    ServiceEvent,\r\n} from \"../common/Exports\";\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport { PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat\";\r\nimport {\r\n    ActivityReceivedEventArgs,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    DialogServiceConfig,\r\n    DialogServiceConnector,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    RecognitionEventArgs,\r\n    ResultReason,\r\n    SessionEventArgs,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n    TurnStatusReceivedEventArgs,\r\n} from \"../sdk/Exports\";\r\nimport { DialogServiceTurnStateManager } from \"./DialogServiceTurnStateManager\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    EnumTranslation,\r\n    ISpeechConfigAudioDevice,\r\n    RecognitionStatus,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechDetected,\r\n    SpeechHypothesis,\r\n    SpeechKeyword,\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognitionMode, RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { ActivityPayloadResponse } from \"./ServiceMessages/ActivityResponsePayload\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\nexport class DialogServiceAdapter extends ServiceRecognizerBase {\r\n    private privDialogServiceConnector: DialogServiceConnector;\r\n\r\n    private privDialogAudioSource: IAudioSource;\r\n\r\n    private privConnectionLoop: Promise<void>;\r\n    private terminateMessageLoop: boolean;\r\n    private agentConfigSent: boolean;\r\n    private privLastResult: SpeechRecognitionResult;\r\n    private privEvents: EventSource<DialogEvent>;\r\n\r\n    // Turns are of two kinds:\r\n    // 1: SR turns, end when the SR result is returned and then turn end.\r\n    // 2: Service turns where an activity is sent by the service along with the audio.\r\n    private privTurnStateManager: DialogServiceTurnStateManager;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        dialogServiceConnector: DialogServiceConnector) {\r\n\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, dialogServiceConnector);\r\n\r\n        this.privEvents = new EventSource<DialogEvent>();\r\n        this.privDialogServiceConnector = dialogServiceConnector;\r\n        this.receiveMessageOverride = this.receiveDialogMessageOverride;\r\n        this.privTurnStateManager = new DialogServiceTurnStateManager();\r\n        this.recognizeOverride = this.listenOnce;\r\n        this.postConnectImplOverride = this.dialogConnectImpl;\r\n        this.configConnectionOverride = this.configConnection;\r\n        this.disconnectOverride = this.privDisconnect;\r\n        this.privDialogAudioSource = audioSource;\r\n\r\n        this.agentConfigSent = false;\r\n        this.privLastResult = null;\r\n        this.connectionEvents.attach(async (connectionEvent: ConnectionEvent): Promise<void> => {\r\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                this.terminateMessageLoop = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    public async sendMessage(message: string): Promise<void> {\r\n        const interactionGuid: string = createGuid();\r\n        const requestId: string = createNoDashGuid();\r\n\r\n        const agentMessage: any = {\r\n            context: {\r\n                interactionId: interactionGuid\r\n            },\r\n            messagePayload: JSON.parse(message),\r\n            version: 0.5\r\n        };\r\n\r\n        const agentMessageJson = JSON.stringify(agentMessage);\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"agent\",\r\n            requestId,\r\n            \"application/json\",\r\n            agentMessageJson));\r\n\r\n    }\r\n\r\n    protected async privDisconnect(): Promise<void> {\r\n        await this.cancelRecognition(this.privRequestSession.sessionId,\r\n            this.privRequestSession.requestId,\r\n            CancellationReason.Error,\r\n            CancellationErrorCode.NoError,\r\n            \"Disconnecting\");\r\n\r\n        this.terminateMessageLoop = true;\r\n        this.agentConfigSent = false;\r\n        return;\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        let result: SpeechRecognitionResult;\r\n        let processed: boolean;\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.phrase\":\r\n                const speechPhrase: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n\r\n                this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + speechPhrase.Offset + speechPhrase.Duration);\r\n\r\n                if (speechPhrase.RecognitionStatus !== RecognitionStatus.TooManyRequests && speechPhrase.RecognitionStatus !== RecognitionStatus.Error) {\r\n                    const args: SpeechRecognitionEventArgs = this.fireEventForResult(speechPhrase, resultProps);\r\n                    this.privLastResult = args.result;\r\n\r\n                    if (!!this.privDialogServiceConnector.recognized) {\r\n                        try {\r\n                            this.privDialogServiceConnector.recognized(this.privDialogServiceConnector, args);\r\n                            /* tslint:disable:no-empty */\r\n                        } catch (error) {\r\n                            // Not going to let errors in the event handler\r\n                            // trip things up.\r\n                        }\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.hypothesis\":\r\n                const hypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\r\n                const offset: number = hypothesis.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n\r\n                result = new SpeechRecognitionResult(\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingSpeech,\r\n                    hypothesis.Text,\r\n                    hypothesis.Duration,\r\n                    offset,\r\n                    hypothesis.Language,\r\n                    hypothesis.LanguageDetectionConfidence,\r\n                    undefined,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(offset);\r\n\r\n                const ev = new SpeechRecognitionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privDialogServiceConnector.recognizing) {\r\n                    try {\r\n                        this.privDialogServiceConnector.recognizing(this.privDialogServiceConnector, ev);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.keyword\":\r\n                const keyword: SpeechKeyword = SpeechKeyword.fromJSON(connectionMessage.textBody);\r\n\r\n                result = new SpeechRecognitionResult(\r\n                    this.privRequestSession.requestId,\r\n                    keyword.Status === \"Accepted\" ? ResultReason.RecognizedKeyword : ResultReason.NoMatch,\r\n                    keyword.Text,\r\n                    keyword.Duration,\r\n                    keyword.Offset,\r\n                    undefined,\r\n                    undefined,\r\n                    undefined,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                if (keyword.Status !== \"Accepted\") {\r\n                    this.privLastResult = result;\r\n                }\r\n\r\n                const event = new SpeechRecognitionEventArgs(result, result.duration, result.resultId);\r\n\r\n                if (!!this.privDialogServiceConnector.recognized) {\r\n                    try {\r\n                        this.privDialogServiceConnector.recognized(this.privDialogServiceConnector, event);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"audio\":\r\n                {\r\n                    const audioRequestId = connectionMessage.requestId.toUpperCase();\r\n                    const turn = this.privTurnStateManager.GetTurn(audioRequestId);\r\n                    try {\r\n                        // Empty binary message signals end of stream.\r\n                        if (!connectionMessage.binaryBody) {\r\n                            turn.endAudioStream();\r\n                        } else {\r\n                            turn.audioStream.write(connectionMessage.binaryBody);\r\n                        }\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n\r\n            case \"response\":\r\n                {\r\n                    this.handleResponseMessage(connectionMessage);\r\n\r\n                }\r\n                processed = true;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected async cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): Promise<void> {\r\n\r\n        this.terminateMessageLoop = true;\r\n\r\n        if (!!this.privRequestSession.isRecognizing) {\r\n            await this.privRequestSession.onStopRecognizing();\r\n        }\r\n\r\n        if (!!this.privDialogServiceConnector.canceled) {\r\n            const properties: PropertyCollection = new PropertyCollection();\r\n            properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n            const cancelEvent: SpeechRecognitionCanceledEventArgs = new SpeechRecognitionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                sessionId);\r\n\r\n            try {\r\n                this.privDialogServiceConnector.canceled(this.privDialogServiceConnector, cancelEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n\r\n            if (!!this.privSuccessCallback) {\r\n                const result: SpeechRecognitionResult = new SpeechRecognitionResult(\r\n                    undefined, // ResultId\r\n                    ResultReason.Canceled,\r\n                    undefined, // Text\r\n                    undefined, // Duration\r\n                    undefined, // Offset\r\n                    undefined, // Language\r\n                    undefined, // Language Detection Confidence\r\n                    undefined, // Speaker Id\r\n                    error,\r\n                    undefined, // Json\r\n                    properties);\r\n                try {\r\n                    this.privSuccessCallback(result);\r\n                    this.privSuccessCallback = undefined;\r\n                    /* tslint:disable:no-empty */\r\n                } catch { }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected async listenOnce(\r\n        recoMode: RecognitionMode,\r\n        successCallback: (e: SpeechRecognitionResult) => void,\r\n        errorCallback: (e: string) => void\r\n    ): Promise<void> {\r\n        this.privRecognizerConfig.recognitionMode = recoMode;\r\n\r\n        this.privSuccessCallback = successCallback;\r\n        this.privErrorCallback = errorCallback;\r\n\r\n        this.privRequestSession.startNewRecognition();\r\n        this.privRequestSession.listenForServiceTelemetry(this.privDialogAudioSource.events);\r\n\r\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\r\n\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n\r\n        const preAudioPromise: Promise<void> = this.sendPreAudioMessages();\r\n\r\n        const node: IAudioStreamNode = await this.privDialogAudioSource.attach(this.privRequestSession.audioNodeId);\r\n        const format: AudioStreamFormatImpl = await this.privDialogAudioSource.format;\r\n        const deviceInfo: ISpeechConfigAudioDevice = await this.privDialogAudioSource.deviceInfo;\r\n\r\n        const audioNode = new ReplayableAudioNode(node, format.avgBytesPerSec);\r\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\r\n\r\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\r\n\r\n        try {\r\n            await conPromise;\r\n            await preAudioPromise;\r\n        } catch (error) {\r\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.ConnectionFailure, error);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        const sessionStartEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n\r\n        if (!!this.privRecognizer.sessionStarted) {\r\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\r\n        }\r\n\r\n        const audioSendPromise = this.sendAudio(audioNode);\r\n\r\n        // /* tslint:disable:no-empty */\r\n        audioSendPromise.then(() => { /*add? return true;*/ }, async (error: string) => {\r\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n        });\r\n    }\r\n\r\n    // Establishes a websocket connection to the end point.\r\n    private dialogConnectImpl(connection: Promise<IConnection>): Promise<IConnection> {\r\n        this.privConnectionLoop = this.startMessageLoop();\r\n        return connection;\r\n    }\r\n\r\n    private receiveDialogMessageOverride(): Promise<void> {\r\n\r\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\r\n        const communicationCustodian: Deferred<void> = new Deferred<void>();\r\n\r\n        const loop = async (): Promise<void> => {\r\n            try {\r\n                const isDisposed: boolean = this.isDisposed();\r\n                const terminateMessageLoop = (!this.isDisposed() && this.terminateMessageLoop);\r\n                if (isDisposed || terminateMessageLoop) {\r\n                    // We're done.\r\n                    communicationCustodian.resolve(undefined);\r\n                    return;\r\n                }\r\n\r\n                const connection: IConnection = await this.fetchConnection();\r\n                const message: ConnectionMessage = await connection.read();\r\n\r\n                if (!message) {\r\n                    return loop();\r\n                }\r\n\r\n                const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\r\n\r\n                switch (connectionMessage.path.toLowerCase()) {\r\n                    case \"turn.start\":\r\n                        {\r\n                            const turnRequestId = connectionMessage.requestId.toUpperCase();\r\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\r\n\r\n                            // turn started by the service\r\n                            if (turnRequestId !== audioSessionReqId) {\r\n                                this.privTurnStateManager.StartTurn(turnRequestId);\r\n                            } else {\r\n                                this.privRequestSession.onServiceTurnStartResponse();\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    case \"speech.startdetected\":\r\n                        const speechStartDetected: SpeechDetected = SpeechDetected.fromJSON(connectionMessage.textBody);\r\n\r\n                        const speechStartEventArgs = new RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privRecognizer.speechStartDetected) {\r\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case \"speech.enddetected\":\r\n\r\n                        let json: string;\r\n\r\n                        if (connectionMessage.textBody.length > 0) {\r\n                            json = connectionMessage.textBody;\r\n                        } else {\r\n                            // If the request was empty, the JSON returned is empty.\r\n                            json = \"{ Offset: 0 }\";\r\n                        }\r\n\r\n                        const speechStopDetected: SpeechDetected = SpeechDetected.fromJSON(json);\r\n\r\n                        this.privRequestSession.onServiceRecognized(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset);\r\n\r\n                        const speechStopEventArgs = new RecognitionEventArgs(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privRecognizer.speechEndDetected) {\r\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\r\n                        }\r\n                        break;\r\n\r\n                    case \"turn.end\":\r\n                        {\r\n                            const turnEndRequestId = connectionMessage.requestId.toUpperCase();\r\n\r\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\r\n\r\n                            // turn started by the service\r\n                            if (turnEndRequestId !== audioSessionReqId) {\r\n                                this.privTurnStateManager.CompleteTurn(turnEndRequestId);\r\n                            } else {\r\n                                // Audio session turn\r\n\r\n                                const sessionStopEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n                                await this.privRequestSession.onServiceTurnEndResponse(false);\r\n\r\n                                if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\r\n                                    if (!!this.privRecognizer.sessionStopped) {\r\n                                        this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\r\n                                    }\r\n                                }\r\n\r\n                                // report result to promise.\r\n                                if (!!this.privSuccessCallback && this.privLastResult) {\r\n                                    try {\r\n                                        this.privSuccessCallback(this.privLastResult);\r\n                                        this.privLastResult = null;\r\n                                    } catch (e) {\r\n                                        if (!!this.privErrorCallback) {\r\n                                            this.privErrorCallback(e);\r\n                                        }\r\n                                    }\r\n                                    // Only invoke the call back once.\r\n                                    // and if it's successful don't invoke the\r\n                                    // error after that.\r\n                                    this.privSuccessCallback = undefined;\r\n                                    this.privErrorCallback = undefined;\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        if (!this.processTypeSpecificMessages(connectionMessage)) {\r\n                            if (!!this.serviceEvents) {\r\n                                this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\r\n                            }\r\n                        }\r\n                }\r\n                const ret: Promise<void> = loop();\r\n\r\n                return ret;\r\n            } catch (error) {\r\n                this.terminateMessageLoop = true;\r\n                communicationCustodian.resolve();\r\n            }\r\n        };\r\n\r\n        loop().catch((reason: string): void => {\r\n            Events.instance.onEvent(new BackgroundEvent(reason));\r\n        });\r\n\r\n        return communicationCustodian.promise;\r\n    }\r\n\r\n    private async startMessageLoop(): Promise<void> {\r\n\r\n        this.terminateMessageLoop = false;\r\n\r\n        try {\r\n            await this.receiveDialogMessageOverride();\r\n        } catch (error) {\r\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\r\n    private async configConnection(connection: IConnection): Promise<IConnection> {\r\n        if (this.terminateMessageLoop) {\r\n            this.terminateMessageLoop = false;\r\n            return Promise.reject(`Connection to service terminated.`);\r\n        }\r\n\r\n        await this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\r\n        await this.sendAgentConfig(connection);\r\n        return connection;\r\n    }\r\n\r\n    private async sendPreAudioMessages(): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        this.addKeywordContextData();\r\n        await this.sendSpeechContext(connection);\r\n        await this.sendAgentContext(connection);\r\n        await this.sendWaveHeader(connection);\r\n    }\r\n\r\n    private sendAgentConfig = (connection: IConnection): Promise<void> => {\r\n        if (this.agentConfig && !this.agentConfigSent) {\r\n\r\n            if (this.privRecognizerConfig\r\n                .parameters\r\n                .getProperty(PropertyId.Conversation_DialogType) === DialogServiceConfig.DialogTypes.CustomCommands) {\r\n                const config = this.agentConfig.get();\r\n                config.botInfo.commandsCulture = this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, \"en-us\");\r\n                this.agentConfig.set(config);\r\n            }\r\n            this.onEvent(new SendingAgentContextMessageEvent(this.agentConfig));\r\n\r\n            const agentConfigJson = this.agentConfig.toJsonString();\r\n\r\n            // guard against sending this multiple times on one connection\r\n            this.agentConfigSent = true;\r\n\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"agent.config\",\r\n                this.privRequestSession.requestId,\r\n                \"application/json\",\r\n                agentConfigJson));\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    private sendAgentContext = (connection: IConnection): Promise<void> => {\r\n        const guid: string = createGuid();\r\n\r\n        const speechActivityTemplate = this.privDialogServiceConnector.properties.getProperty(PropertyId.Conversation_Speech_Activity_Template);\r\n\r\n        const agentContext: any = {\r\n            channelData: \"\",\r\n            context: {\r\n                interactionId: guid\r\n            },\r\n            messagePayload: typeof speechActivityTemplate === undefined ? undefined : speechActivityTemplate,\r\n            version: 0.5\r\n        };\r\n\r\n        const agentContextJson = JSON.stringify(agentContext);\r\n\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"speech.agent.context\",\r\n            this.privRequestSession.requestId,\r\n            \"application/json\",\r\n            agentContextJson));\r\n    }\r\n\r\n    private fireEventForResult(serviceResult: SimpleSpeechPhrase, properties: PropertyCollection): SpeechRecognitionEventArgs {\r\n        const resultReason: ResultReason = EnumTranslation.implTranslateRecognitionResult(serviceResult.RecognitionStatus);\r\n\r\n        const offset: number = serviceResult.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n\r\n        const result = new SpeechRecognitionResult(\r\n            this.privRequestSession.requestId,\r\n            resultReason,\r\n            serviceResult.DisplayText,\r\n            serviceResult.Duration,\r\n            offset,\r\n            serviceResult.Language,\r\n            serviceResult.LanguageDetectionConfidence,\r\n            undefined,\r\n            undefined,\r\n            JSON.stringify(serviceResult),\r\n            properties);\r\n\r\n        const ev = new SpeechRecognitionEventArgs(result, offset, this.privRequestSession.sessionId);\r\n        return ev;\r\n    }\r\n\r\n    private handleResponseMessage = (responseMessage: SpeechConnectionMessage): void => {\r\n        // \"response\" messages can contain either \"message\" (activity) or \"MessageStatus\" data. Fire the appropriate\r\n        // event according to the message type that's specified.\r\n        const responsePayload = JSON.parse(responseMessage.textBody);\r\n        switch (responsePayload.messageType.toLowerCase()) {\r\n            case \"message\":\r\n                const responseRequestId = responseMessage.requestId.toUpperCase();\r\n                const activityPayload: ActivityPayloadResponse = ActivityPayloadResponse.fromJSON(responseMessage.textBody);\r\n                const turn = this.privTurnStateManager.GetTurn(responseRequestId);\r\n\r\n                // update the conversation Id\r\n                if (activityPayload.conversationId) {\r\n                    const updateAgentConfig = this.agentConfig.get();\r\n                    updateAgentConfig.botInfo.conversationId = activityPayload.conversationId;\r\n                    this.agentConfig.set(updateAgentConfig);\r\n                }\r\n\r\n                const pullAudioOutputStream: PullAudioOutputStreamImpl = turn.processActivityPayload(\r\n                    activityPayload,\r\n                    AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(this.privDialogServiceConnector.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)));\r\n                const activity = new ActivityReceivedEventArgs(activityPayload.messagePayload, pullAudioOutputStream);\r\n                if (!!this.privDialogServiceConnector.activityReceived) {\r\n                    try {\r\n                        this.privDialogServiceConnector.activityReceived(this.privDialogServiceConnector, activity);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case \"messagestatus\":\r\n                if (!!this.privDialogServiceConnector.turnStatusReceived) {\r\n                    try {\r\n                        this.privDialogServiceConnector.turnStatusReceived(\r\n                            this.privDialogServiceConnector,\r\n                            new TurnStatusReceivedEventArgs(responseMessage.textBody));\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                break;\r\n\r\n            default:\r\n                Events.instance.onEvent(\r\n                    new BackgroundEvent(`Unexpected response of type ${responsePayload.messageType}. Ignoring.`));\r\n                break;\r\n        }\r\n    }\r\n\r\n    private onEvent(event: DialogEvent): void {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private addKeywordContextData(): void {\r\n        const keywordPropertyValue: string = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-KeywordsToDetect\");\r\n        if (keywordPropertyValue === undefined) {\r\n            return;\r\n        }\r\n\r\n        const keywordOffsetPropertyValue: string = this.privRecognizerConfig.parameters\r\n            .getProperty(\"SPEECH-KeywordsToDetect-Offsets\");\r\n        const keywordDurationPropertyValue: string = this.privRecognizerConfig.parameters\r\n            .getProperty(\"SPEECH-KeywordsToDetect-Durations\");\r\n\r\n        const keywords = keywordPropertyValue.split(\";\");\r\n        const keywordOffsets = keywordOffsetPropertyValue === undefined ? [] : keywordOffsetPropertyValue.split(\";\");\r\n        const keywordDurations = keywordDurationPropertyValue === undefined ? [] : keywordDurationPropertyValue.split(\";\");\r\n\r\n        const keywordDefinitionArray = [];\r\n        for (let i = 0; i < keywords.length; i++) {\r\n            const definition: { [section: string]: any } = {};\r\n            definition.text = keywords[i];\r\n            if (i < keywordOffsets.length) {\r\n                definition.offset = Number(keywordOffsets[i]);\r\n            }\r\n            if (i < keywordDurations.length) {\r\n                definition.duration = Number(keywordDurations[i]);\r\n            }\r\n            keywordDefinitionArray.push(definition);\r\n        }\r\n\r\n        this.speechContext.setSection(\"invocationSource\", \"VoiceActivationWithKeyword\");\r\n        this.speechContext.setSection(\"keywordDetection\", [{\r\n            clientDetectedKeywords: keywordDefinitionArray,\r\n            onReject: { action: \"EndOfTurn\" },\r\n            type: \"startTrigger\"\r\n        }]);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { DialogConnectionFactory } from \"../common.speech/DialogConnectorFactory\";\r\nimport {\r\n    DialogServiceAdapter,\r\n    IAgentConfig,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    Deferred,\r\n    marshalPromiseToCallbacks\r\n} from \"../common/Exports\";\r\nimport { ActivityReceivedEventArgs } from \"./ActivityReceivedEventArgs\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { AudioOutputFormatImpl } from \"./Audio/AudioOutputFormat\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport { DialogServiceConfig, DialogServiceConfigImpl } from \"./DialogServiceConfig\";\r\nimport {\r\n    AudioConfig,\r\n    PropertyCollection,\r\n    Recognizer,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult\r\n} from \"./Exports\";\r\nimport { PropertyId } from \"./PropertyId\";\r\nimport { TurnStatusReceivedEventArgs } from \"./TurnStatusReceivedEventArgs\";\r\n\r\n/**\r\n * Dialog Service Connector\r\n * @class DialogServiceConnector\r\n */\r\nexport class DialogServiceConnector extends Recognizer {\r\n    private privIsDisposed: boolean;\r\n    private isTurnComplete: boolean;\r\n\r\n    /**\r\n     * Initializes an instance of the DialogServiceConnector.\r\n     * @constructor\r\n     * @param {DialogServiceConfig} dialogConfig - Set of properties to configure this recognizer.\r\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\r\n     */\r\n    public constructor(dialogConfig: DialogServiceConfig, audioConfig?: AudioConfig) {\r\n        const dialogServiceConfigImpl = dialogConfig as DialogServiceConfigImpl;\r\n        Contracts.throwIfNull(dialogConfig, \"dialogConfig\");\r\n\r\n        super(audioConfig, dialogServiceConfigImpl.properties, new DialogConnectionFactory());\r\n\r\n        this.isTurnComplete = true;\r\n        this.privIsDisposed = false;\r\n        this.privProperties = dialogServiceConfigImpl.properties.clone();\r\n\r\n        const agentConfig = this.buildAgentConfig();\r\n        this.privReco.agentConfig.set(agentConfig);\r\n    }\r\n\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member DialogServiceConnector.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: DialogServiceConnector, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member DialogServiceConfig.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: DialogServiceConnector, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member DialogServiceConnector.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: DialogServiceConnector, event: SpeechRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * The event activityReceived signals that an activity has been received.\r\n     * @member DialogServiceConnector.prototype.activityReceived\r\n     * @function\r\n     * @public\r\n     */\r\n    public activityReceived: (sender: DialogServiceConnector, event: ActivityReceivedEventArgs) => void;\r\n\r\n    /**\r\n     * The event turnStatusReceived signals that a turn status message has been received. These messages are\r\n     * associated with both an interaction and a conversation. They are used to notify the client in the event\r\n     * of an interaction failure with the dialog backend, e.g. in the event of a network issue, timeout, crash,\r\n     * or other problem.\r\n     * @member DialogServiceConnector.prototype.turnStatusReceived\r\n     * @function\r\n     * @public\r\n     */\r\n    public turnStatusReceived: (sender: DialogServiceConnector, event: TurnStatusReceivedEventArgs) => void;\r\n\r\n    /**\r\n     * Starts a connection to the service.\r\n     * Users can optionally call connect() to manually set up a connection in advance, before starting interactions.\r\n     *\r\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\r\n     * be notified when the connection is established.\r\n     * @member DialogServiceConnector.prototype.connect\r\n     * @function\r\n     * @public\r\n     */\r\n    public connect(cb?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privReco.connect(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Closes the connection the service.\r\n     * Users can optionally call disconnect() to manually shutdown the connection of the associated DialogServiceConnector.\r\n     *\r\n     * If disconnect() is called during a recognition, recognition will fail and cancel with an error.\r\n     */\r\n    public disconnect(cb?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privReco.disconnect(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member DialogServiceConnector.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Sets the authorization token used to communicate with the service.\r\n     * @member DialogServiceConnector.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this DialogServiceConnector.\r\n     * @member DialogServiceConnector.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this DialogServiceConnector.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /** Gets the template for the activity generated by service from speech.\r\n     * Properties from the template will be stamped on the generated activity.\r\n     * It can be empty\r\n     */\r\n    public get speechActivityTemplate(): string {\r\n        return this.properties.getProperty(PropertyId.Conversation_Speech_Activity_Template);\r\n    }\r\n\r\n    /** Sets the template for the activity generated by service from speech.\r\n     * Properties from the template will be stamped on the generated activity.\r\n     * It can be null or empty.\r\n     * Note: it has to be a valid Json object.\r\n     */\r\n    public set speechActivityTemplate(speechActivityTemplate: string) {\r\n        this.properties.setProperty(PropertyId.Conversation_Speech_Activity_Template, speechActivityTemplate);\r\n    }\r\n\r\n    /**\r\n     * Starts recognition and stops after the first utterance is recognized.\r\n     * @member DialogServiceConnector.prototype.listenOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the result when the reco has completed.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public listenOnceAsync(cb?: (e: SpeechRecognitionResult) => void, err?: (e: string) => void): void {\r\n        if (this.isTurnComplete) {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            const callbackHolder = async (): Promise<SpeechRecognitionResult> => {\r\n                await this.privReco.connect();\r\n                await this.implRecognizerStop();\r\n                this.isTurnComplete = false;\r\n\r\n                const ret: Deferred<SpeechRecognitionResult> = new Deferred<SpeechRecognitionResult>();\r\n                await this.privReco.recognize(RecognitionMode.Conversation, ret.resolve, ret.reject);\r\n\r\n                const e: SpeechRecognitionResult = await ret.promise;\r\n                await this.implRecognizerStop();\r\n\r\n                return e;\r\n            };\r\n\r\n            const retPromise: Promise<SpeechRecognitionResult> = callbackHolder();\r\n\r\n            retPromise.catch(() => {\r\n                // Destroy the recognizer.\r\n                /* tslint:disable:no-empty */ // We've done all we can here.\r\n                this.dispose(true).catch(() => { });\r\n            });\r\n\r\n            marshalPromiseToCallbacks(retPromise.finally((): void => {\r\n                this.isTurnComplete = true;\r\n            }), cb, err);\r\n        }\r\n    }\r\n\r\n    public sendActivityAsync(activity: string, cb?: () => void, errCb?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks((this.privReco as DialogServiceAdapter).sendMessage(activity), cb, errCb);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member DialogServiceConnector.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privIsDisposed);\r\n\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, err);\r\n    }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privIsDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privIsDisposed = true;\r\n            await this.implRecognizerStop();\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n\r\n        const audioSource: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n\r\n        return new DialogServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\r\n    }\r\n\r\n    private buildAgentConfig(): IAgentConfig {\r\n        const communicationType = this.properties.getProperty(\"Conversation_Communication_Type\", \"Default\");\r\n\r\n        return {\r\n            botInfo: {\r\n                commType: communicationType,\r\n                commandsCulture: undefined,\r\n                connectionId: this.properties.getProperty(PropertyId.Conversation_Agent_Connection_Id),\r\n                conversationId: this.properties.getProperty(PropertyId.Conversation_Conversation_Id, undefined),\r\n                fromId: this.properties.getProperty(PropertyId.Conversation_From_Id, undefined),\r\n                ttsAudioFormat: this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)\r\n            },\r\n            version: 0.2\r\n        };\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"../../common/Error\";\r\nimport { marshalPromiseToCallbacks } from \"../../common/Promise\";\r\nimport { AudioStreamFormat, PullAudioInputStreamCallback } from \"../Exports\";\r\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat\";\r\n\r\ntype AudioDataTypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array;\r\n/**\r\n * Base audio player class\r\n * TODO: Plays only PCM for now.\r\n * @class\r\n */\r\nexport class BaseAudioPlayer {\r\n\r\n    private audioContext: AudioContext = null;\r\n    private gainNode: GainNode = null;\r\n    private audioFormat: AudioStreamFormatImpl;\r\n    private autoUpdateBufferTimer: any = 0;\r\n    private samples: Float32Array;\r\n    private startTime: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {AudioStreamFormat} audioFormat audio stream format recognized by the player.\r\n     */\r\n    public constructor(audioFormat?: AudioStreamFormat) {\r\n        if (audioFormat === undefined) {\r\n            audioFormat = AudioStreamFormat.getDefaultInputFormat();\r\n        }\r\n        this.init(audioFormat);\r\n    }\r\n\r\n    /**\r\n     * play Audio sample\r\n     * @param newAudioData audio data to be played.\r\n     */\r\n    public playAudioSample(newAudioData: ArrayBuffer, cb?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n                this.ensureInitializedContext();\r\n                const audioData = this.formatAudioData(newAudioData);\r\n                const newSamplesData = new Float32Array(this.samples.length + audioData.length);\r\n                newSamplesData.set(this.samples, 0);\r\n                newSamplesData.set(audioData, this.samples.length);\r\n                this.samples = newSamplesData;\r\n        })(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * stops audio and clears the buffers\r\n     */\r\n    public stopAudio(cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.audioContext !== null) {\r\n            this.samples = new Float32Array();\r\n            clearInterval(this.autoUpdateBufferTimer);\r\n            this.audioContext.close().then(() => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string) => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n            this.audioContext = null;\r\n        }\r\n    }\r\n\r\n    private init(audioFormat: AudioStreamFormat): void {\r\n        this.audioFormat = audioFormat as AudioStreamFormatImpl;\r\n        this.samples = new Float32Array();\r\n    }\r\n\r\n    private ensureInitializedContext(): void {\r\n        if (this.audioContext === null) {\r\n            this.createAudioContext();\r\n            const timerPeriod = 200;\r\n            this.autoUpdateBufferTimer = setInterval(() => {\r\n                this.updateAudioBuffer();\r\n            }, timerPeriod);\r\n        }\r\n    }\r\n\r\n    private createAudioContext(): void {\r\n        // new ((window as any).AudioContext || (window as any).webkitAudioContext)();\r\n        this.audioContext = AudioStreamFormatImpl.getAudioContext();\r\n\r\n        // TODO: Various examples shows this gain node, it does not seem to be needed unless we plan\r\n        // to control the volume, not likely\r\n        this.gainNode = this.audioContext.createGain();\r\n        this.gainNode.gain.value = 1;\r\n        this.gainNode.connect(this.audioContext.destination);\r\n        this.startTime = this.audioContext.currentTime;\r\n    }\r\n\r\n    private formatAudioData(audioData: ArrayBuffer): Float32Array {\r\n        switch (this.audioFormat.bitsPerSample) {\r\n            case 8:\r\n                return this.formatArrayBuffer(new Int8Array(audioData), 128);\r\n            case 16:\r\n                return this.formatArrayBuffer(new Int16Array(audioData), 32768);\r\n            case 32:\r\n                return this.formatArrayBuffer(new Int32Array(audioData), 2147483648);\r\n            default:\r\n                throw new InvalidOperationError(\"Only WAVE_FORMAT_PCM (8/16/32 bps) format supported at this time\");\r\n        }\r\n    }\r\n\r\n    private formatArrayBuffer(audioData: AudioDataTypedArray, maxValue: number): Float32Array {\r\n        const float32Data = new Float32Array(audioData.length);\r\n        for (let i = 0; i < audioData.length; i++) {\r\n            float32Data[i] = audioData[i] / maxValue;\r\n        }\r\n        return float32Data;\r\n    }\r\n\r\n    private updateAudioBuffer(): void {\r\n        if (this.samples.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const channelCount = this.audioFormat.channels;\r\n        const bufferSource = this.audioContext.createBufferSource();\r\n        const frameCount = this.samples.length / channelCount;\r\n        const audioBuffer = this.audioContext.createBuffer(channelCount, frameCount, this.audioFormat.samplesPerSec);\r\n\r\n        // TODO: Should we do the conversion in the pushAudioSample instead?\r\n        for (let channel = 0; channel < channelCount; channel++) {\r\n            // Fill in individual channel data\r\n            let channelOffset = channel;\r\n            const audioData = audioBuffer.getChannelData(channel);\r\n            for (let i = 0; i < this.samples.length; i++, channelOffset += channelCount) {\r\n                audioData[i] = this.samples[channelOffset];\r\n            }\r\n        }\r\n\r\n        if (this.startTime < this.audioContext.currentTime) {\r\n            this.startTime = this.audioContext.currentTime;\r\n        }\r\n\r\n        bufferSource.buffer = audioBuffer;\r\n        bufferSource.connect(this.gainNode);\r\n        bufferSource.start(this.startTime);\r\n\r\n        // Make sure we play the next sample after the current one.\r\n        this.startTime += audioBuffer.duration;\r\n\r\n        // Clear the samples for the next pushed data.\r\n        this.samples = new Float32Array();\r\n    }\r\n\r\n    private async playAudio(audioData: ArrayBuffer): Promise<void> {\r\n        if (this.audioContext === null) {\r\n            this.createAudioContext();\r\n        }\r\n        const source: AudioBufferSourceNode = this.audioContext.createBufferSource();\r\n        const destination: AudioDestinationNode = this.audioContext.destination;\r\n        await this.audioContext.decodeAudioData(audioData, (newBuffer: AudioBuffer): void => {\r\n            source.buffer = newBuffer;\r\n            source.connect(destination);\r\n            source.start(0);\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { VoiceProfileType } from \"./Exports\";\r\n\r\n/**\r\n * Defines Voice Profile class for Speaker Recognition\r\n * @class VoiceProfile\r\n */\r\nexport class VoiceProfile {\r\n    private privId: string;\r\n    private privProfileType: VoiceProfileType;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} profileId - profileId of this Voice Profile.\r\n     * @param {VoiceProfileType} profileType - profileType of this Voice Profile.\r\n     */\r\n    constructor(profileId: string, profileType: VoiceProfileType) {\r\n        this.privId = profileId;\r\n        this.privProfileType = profileType;\r\n    }\r\n\r\n    /**\r\n     * profileId of this Voice Profile instance\r\n     * @member VoiceProfile.prototype.profileId\r\n     * @function\r\n     * @public\r\n     * @returns {string} profileId of this Voice Profile instance.\r\n     */\r\n    public get profileId(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    /**\r\n     * profileType of this Voice Profile instance\r\n     * @member VoiceProfile.prototype.profileType\r\n     * @function\r\n     * @public\r\n     * @returns {VoiceProfileType} profile type of this Voice Profile instance.\r\n     */\r\n    public get profileType(): VoiceProfileType {\r\n        return this.privProfileType;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationErrorCodePropertyName } from \"../common.speech/Exports\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    CancellationDetailsBase,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    ResultReason,\r\n} from \"./Exports\";\r\n\r\nexport interface EnrollmentResultDetails {\r\n    profileId: string;\r\n    enrollmentsCount: number;\r\n    enrollmentsLengthInSec: number;\r\n    enrollmentsSpeechLengthInSec: number;\r\n    remainingEnrollmentsCount: number;\r\n    remainingEnrollmentsSpeechLengthInSec: number;\r\n    audioLengthInSec: number;\r\n    audioSpeechLengthInSec: number;\r\n    enrollmentStatus: string;\r\n}\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfileEnrollmentResult\r\n */\r\nexport class VoiceProfileEnrollmentResult {\r\n    private privReason: ResultReason;\r\n    private privDetails: EnrollmentResultDetails;\r\n    private privProperties: PropertyCollection;\r\n    private privErrorDetails: string;\r\n\r\n    public constructor(reason: ResultReason, json: string, statusText: string) {\r\n        this.privReason = reason;\r\n        this.privProperties = new PropertyCollection();\r\n        if (this.privReason !== ResultReason.Canceled) {\r\n            if (!!json) {\r\n                this.privDetails = JSON.parse(json);\r\n                if (this.privDetails.enrollmentStatus.toLowerCase() === \"enrolling\") {\r\n                    this.privReason = ResultReason.EnrollingVoiceProfile;\r\n                }\r\n            }\r\n        } else {\r\n            this.privErrorDetails = statusText;\r\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.ServiceError]);\r\n        }\r\n    }\r\n\r\n    public static FromIdentificationProfileList(json: { value: any[] }): VoiceProfileEnrollmentResult[] {\r\n        const results: VoiceProfileEnrollmentResult[] = [];\r\n        for (const item of json.value) {\r\n            const reason: ResultReason = item.enrollmentStatus.toLowerCase() === \"enrolling\" ?\r\n                ResultReason.EnrollingVoiceProfile : item.enrollmentStatus.toLowerCase() === \"enrolled\" ?\r\n                ResultReason.EnrolledVoiceProfile : ResultReason.Canceled;\r\n            const result = new VoiceProfileEnrollmentResult(reason, null, null);\r\n            result.privDetails = this.getIdentificationDetails(item);\r\n            results.push(result);\r\n        }\r\n        return results;\r\n    }\r\n\r\n    public static FromVerificationProfileList(json: { value: any[] }): VoiceProfileEnrollmentResult[] {\r\n        const results: VoiceProfileEnrollmentResult[] = [];\r\n        for (const item of json.value) {\r\n            const reason: ResultReason = item.enrollmentStatus.toLowerCase() === \"enrolling\" ?\r\n                ResultReason.EnrollingVoiceProfile : item.enrollmentStatus.toLowerCase() === \"enrolled\" ?\r\n                ResultReason.EnrolledVoiceProfile : ResultReason.Canceled;\r\n            const result = new VoiceProfileEnrollmentResult(reason, null, null);\r\n            result.privDetails = this.getVerificationDetails(item);\r\n            results.push(result);\r\n        }\r\n        return results;\r\n    }\r\n\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get enrollmentsCount(): number {\r\n        return this.privDetails.enrollmentsCount;\r\n    }\r\n\r\n    public get enrollmentsLengthInSec(): number {\r\n        return this.privDetails.enrollmentsLengthInSec;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get enrollmentResultDetails(): EnrollmentResultDetails {\r\n        return this.privDetails;\r\n    }\r\n\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    private static getIdentificationDetails(json: any): any {\r\n        return {\r\n            audioLengthInSec: json.audioLengthInSec ? parseFloat(json.audioLengthInSec) : 0,\r\n            audioSpeechLengthInSec: json.audioSpeechLengthInSec ? parseFloat(json.audioSpeechLengthInSec) : 0,\r\n            enrollmentStatus: json.enrollmentStatus,\r\n            enrollmentsCount: json.enrollmentsCount || 0,\r\n            enrollmentsLengthInSec: json.enrollmentsLengthInSec ? parseFloat(json.enrollmentsLengthInSec) : 0,\r\n            enrollmentsSpeechLengthInSec: json.enrollmentsSpeechLengthInSec ? parseFloat(json.enrollmentsSpeechLengthInSec) : 0,\r\n            profileId: json.profileId || json.identificationProfileId,\r\n            remainingEnrollmentsSpeechLengthInSec: json.remainingEnrollmentsSpeechLengthInSec ? parseFloat(json.remainingEnrollmentsSpeechLengthInSec) : 0\r\n        };\r\n    }\r\n\r\n    private static getVerificationDetails(json: any): any {\r\n        return {\r\n            audioLengthInSec: json.audioLengthInSec ? parseFloat(json.audioLengthInSec) : 0,\r\n            audioSpeechLengthInSec: json.audioSpeechLengthInSec ? parseFloat(json.audioSpeechLengthInSec) : 0,\r\n            enrollmentStatus: json.enrollmentStatus,\r\n            enrollmentsCount: json.enrollmentsCount,\r\n            enrollmentsLengthInSec: json.enrollmentsLengthInSec ? parseFloat(json.enrollmentsLengthInSec) : 0,\r\n            enrollmentsSpeechLengthInSec: json.enrollmentsSpeechLengthInSec ? parseFloat(json.enrollmentsSpeechLengthInSec) : 0,\r\n            profileId: json.profileId || json.verificationProfileId,\r\n            remainingEnrollmentsCount: json.remainingEnrollments || json.remainingEnrollmentsCount,\r\n            remainingEnrollmentsSpeechLengthInSec: json.remainingEnrollmentsSpeechLengthInSec ? parseFloat(json.remainingEnrollmentsSpeechLengthInSec) : 0\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * @class VoiceProfileEnrollmentCancellationDetails\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class VoiceProfileEnrollmentCancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of VoiceProfileEnrollmentCancellationDetails object for the canceled VoiceProfileEnrollmentResult.\r\n     * @member VoiceProfileEnrollmentCancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {VoiceProfileEnrollmentResult} result - The result that was canceled.\r\n     * @returns {VoiceProfileEnrollmentCancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: VoiceProfileEnrollmentResult): VoiceProfileEnrollmentCancellationDetails {\r\n        const reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (!!result.properties) {\r\n            errorCode = (CancellationErrorCode as any)[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])];\r\n        }\r\n\r\n        return new VoiceProfileEnrollmentCancellationDetails(reason, result.errorDetails, errorCode);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationErrorCodePropertyName } from \"../common.speech/Exports\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    CancellationDetailsBase,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    ResultReason,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfileResult\r\n */\r\nexport class VoiceProfileResult {\r\n    private privReason: ResultReason;\r\n    private privProperties: PropertyCollection;\r\n    private privErrorDetails: string;\r\n\r\n    public constructor(reason: ResultReason, statusText: string) {\r\n        this.privReason = reason;\r\n        this.privProperties = new PropertyCollection();\r\n        if (reason === ResultReason.Canceled) {\r\n            Contracts.throwIfNullOrUndefined(statusText, \"statusText\");\r\n            this.privErrorDetails = statusText;\r\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.ServiceError]);\r\n        }\r\n    }\r\n\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n\r\n/**\r\n * @class VoiceProfileCancellationDetails\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class VoiceProfileCancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of VoiceProfileCancellationDetails object for the canceled VoiceProfileResult.\r\n     * @member VoiceProfileCancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {VoiceProfileResult} result - The result that was canceled.\r\n     * @returns {VoiceProfileCancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: VoiceProfileResult): VoiceProfileCancellationDetails {\r\n        const reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (!!result.properties) {\r\n            errorCode = (CancellationErrorCode as any)[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])];\r\n        }\r\n\r\n        return new VoiceProfileCancellationDetails(reason, result.errorDetails, errorCode);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    ResultReason,\r\n    VoiceProfileResult\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfilePhraseResult\r\n */\r\nexport class VoiceProfilePhraseResult extends VoiceProfileResult {\r\n    private privPhrases: string[] = [];\r\n\r\n    public constructor(reason: ResultReason, statusText: string, json: any) {\r\n        super(reason, statusText);\r\n        Contracts.throwIfNullOrUndefined(json, \"phrase result JSON\");\r\n        if (!!json.value && !!json.value[0]) {\r\n            for (const item of json.value) {\r\n                this.privPhrases.push(item.passPhrase || item.activationPhrase);\r\n            }\r\n        }\r\n    }\r\n\r\n    public get phrases(): string[] {\r\n        return this.privPhrases;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection } from \"../sdk/Exports\";\r\nimport { Context } from \"./Exports\";\r\n\r\nexport class SpeakerRecognitionConfig {\r\n    private privParameters: PropertyCollection;\r\n    private privContext: Context;\r\n\r\n    constructor(\r\n        context: Context,\r\n        parameters: PropertyCollection) {\r\n        this.privContext = context ? context : new Context(null);\r\n        this.privParameters = parameters;\r\n    }\r\n\r\n    public get parameters(): PropertyCollection {\r\n        return this.privParameters;\r\n    }\r\n\r\n    public get Context(): Context {\r\n        return this.privContext;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IErrorMessages } from \"../common/Exports\";\r\n/**\r\n * HTTP request helper\r\n */\r\nexport interface IRequestOptions {\r\n    headers?: {[key: string]: string};\r\n    ignoreCache?: boolean;\r\n    timeout?: number;\r\n}\r\n\r\nexport interface IRestParams {\r\n    apiVersion: string;\r\n    authorization: string;\r\n    clientAppId: string;\r\n    contentTypeKey: string;\r\n    correlationId: string;\r\n    languageCode: string;\r\n    nickname: string;\r\n    profanity: string;\r\n    requestId: string;\r\n    roomId: string;\r\n    sessionToken: string;\r\n    subscriptionKey: string;\r\n    subscriptionRegion: string;\r\n    token: string;\r\n}\r\n\r\nexport class RestConfigBase {\r\n\r\n    public static get requestOptions(): IRequestOptions {\r\n        return RestConfigBase.privDefaultRequestOptions;\r\n    }\r\n\r\n    public static get configParams(): IRestParams {\r\n        return RestConfigBase.privDefaultParams;\r\n    }\r\n\r\n    public static get restErrors(): IErrorMessages {\r\n        return RestConfigBase.privRestErrors;\r\n    }\r\n\r\n    private static readonly privDefaultRequestOptions: IRequestOptions = {\r\n        headers: {\r\n            Accept: \"application/json\",\r\n        },\r\n        ignoreCache: false,\r\n        timeout: 10000,\r\n    };\r\n\r\n    private static readonly privRestErrors: IErrorMessages = {\r\n        authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\r\n        authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\r\n        invalidArgs: \"Required input not found: {arg}.\",\r\n        invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\r\n        invalidParticipantRequest: \"The requested participant was not found.\",\r\n        permissionDeniedConnect: \"Required credentials not found.\",\r\n        permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\r\n        permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\r\n        permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\r\n        permissionDeniedStart: \"Invalid operation: there is already an active conversation.\",\r\n    };\r\n\r\n    private static readonly privDefaultParams: IRestParams = {\r\n        apiVersion: \"api-version\",\r\n        authorization: \"Authorization\",\r\n        clientAppId: \"X-ClientAppId\",\r\n        contentTypeKey: \"Content-Type\",\r\n        correlationId: \"X-CorrelationId\",\r\n        languageCode: \"language\",\r\n        nickname: \"nickname\",\r\n        profanity: \"profanity\",\r\n        requestId: \"X-RequestId\",\r\n        roomId: \"roomid\",\r\n        sessionToken: \"token\",\r\n        subscriptionKey: \"Ocp-Apim-Subscription-Key\",\r\n        subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\r\n        token: \"X-CapitoToken\",\r\n    };\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n    Deferred\r\n} from \"../common/Exports\";\r\nimport { IRequestOptions } from \"./Exports\";\r\n\r\nimport bent, { BentResponse } from \"bent\";\r\n\r\nexport enum RestRequestType {\r\n    Get = \"GET\",\r\n    Post = \"POST\",\r\n    Delete = \"DELETE\",\r\n    File = \"file\",\r\n}\r\n\r\nexport interface IRestResponse {\r\n    ok: boolean;\r\n    status: number;\r\n    statusText: string;\r\n    data: string;\r\n    json: any;\r\n    headers: string;\r\n}\r\n\r\n// accept rest operations via request method and return abstracted objects from server response\r\nexport class RestMessageAdapter {\r\n\r\n    private privIgnoreCache: boolean;\r\n    private privHeaders: { [key: string]: string; };\r\n\r\n    public constructor(\r\n        configParams: IRequestOptions\r\n        ) {\r\n\r\n        if (!configParams) {\r\n            throw new ArgumentNullError(\"configParams\");\r\n        }\r\n\r\n        this.privHeaders = configParams.headers;\r\n        this.privIgnoreCache = configParams.ignoreCache;\r\n    }\r\n\r\n    public static extractHeaderValue(headerKey: string, headers: string): string {\r\n        let headerValue: string = \"\";\r\n\r\n        try {\r\n            const arr = headers.trim().split(/[\\r\\n]+/);\r\n            const headerMap: any = {};\r\n            arr.forEach((line: any) => {\r\n                const parts = line.split(\": \");\r\n                const header = parts.shift().toLowerCase();\r\n                const value = parts.join(\": \");\r\n                headerMap[header] = value;\r\n            });\r\n\r\n            headerValue = headerMap[headerKey.toLowerCase()];\r\n        } catch (e) {\r\n            // ignore the error\r\n        }\r\n\r\n        return headerValue;\r\n    }\r\n\r\n    public set options(configParams: IRequestOptions) {\r\n        this.privHeaders = configParams.headers;\r\n        this.privIgnoreCache = configParams.ignoreCache;\r\n    }\r\n\r\n    public setHeaders(key: string, value: string): void {\r\n        this.privHeaders[key] = value;\r\n    }\r\n\r\n    public request(\r\n        method: RestRequestType,\r\n        uri: string,\r\n        queryParams: any = {},\r\n        body: any = null,\r\n        binaryBody: Blob | Buffer = null,\r\n        ): Promise<IRestResponse> {\r\n\r\n        const responseReceivedDeferral = new Deferred<IRestResponse>();\r\n\r\n        const requestCommand = method === RestRequestType.File ? \"POST\" : method;\r\n        const handleRestResponse = (data: BentResponse, j: any = {}): IRestResponse => {\r\n            const d: { statusText?: string, statusMessage?: string } = data;\r\n            return {\r\n                data: JSON.stringify(j),\r\n                headers: JSON.stringify(data.headers),\r\n                json: j,\r\n                ok: data.statusCode >= 200 && data.statusCode < 300,\r\n                status: data.statusCode,\r\n                statusText: j.error ? j.error.message : d.statusText ? d.statusText : d.statusMessage\r\n            };\r\n        };\r\n\r\n        const blobToArrayBuffer = (blob: Blob) => {\r\n            const reader = new FileReader();\r\n            reader.readAsArrayBuffer(blob);\r\n            return new Promise((resolve: (value: unknown) => void) => {\r\n                reader.onloadend = () => {\r\n                resolve(reader.result);\r\n                };\r\n            });\r\n        };\r\n\r\n        const send = (postData: any): void => {\r\n            const sendRequest = bent(uri, requestCommand, this.privHeaders, 200, 201, 202, 204, 400, 401, 402, 403, 404);\r\n            const params = this.queryParams(queryParams) === \"\" ? \"\" : \"?\" + this.queryParams(queryParams);\r\n            sendRequest(params, postData).then( async (data: any) => {\r\n                if (method === RestRequestType.Delete || data.statusCode === 204) {\r\n                    // No JSON from Delete and reset (204) operations\r\n                    responseReceivedDeferral.resolve(handleRestResponse(data));\r\n                } else {\r\n                    try {\r\n                        const j: any = await data.json();\r\n                        responseReceivedDeferral.resolve(handleRestResponse(data, j));\r\n                    } catch {\r\n                        responseReceivedDeferral.resolve(handleRestResponse(data));\r\n                    }\r\n                }\r\n            }).catch((error: string) => {\r\n                responseReceivedDeferral.reject(error);\r\n            });\r\n        };\r\n\r\n        if (this.privIgnoreCache) {\r\n            this.privHeaders[\"Cache-Control\"] = \"no-cache\";\r\n        }\r\n\r\n        if (method === RestRequestType.File && binaryBody) {\r\n            const contentType = \"multipart/form-data\";\r\n            this.privHeaders[\"content-type\"] = contentType;\r\n            this.privHeaders[\"Content-Type\"] = contentType;\r\n            if (typeof (Blob) !== \"undefined\" && binaryBody instanceof Blob) {\r\n                blobToArrayBuffer(binaryBody as Blob).then( (res: any) => {\r\n                    send(res);\r\n                }).catch((error: any) => {\r\n                    responseReceivedDeferral.reject(error);\r\n                });\r\n            } else {\r\n                send(binaryBody as Buffer);\r\n            }\r\n        } else {\r\n            if (method === RestRequestType.Post && body) {\r\n                this.privHeaders[\"content-type\"] = \"application/json\";\r\n                this.privHeaders[\"Content-Type\"] = \"application/json\";\r\n            }\r\n            send(body);\r\n        }\r\n        return responseReceivedDeferral.promise;\r\n    }\r\n\r\n    private withQuery(url: string, params: any = {}): any {\r\n        const queryString = this.queryParams(params);\r\n        return queryString ? url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + queryString : url;\r\n    }\r\n\r\n    private queryParams(params: any = {}): any {\r\n        return Object.keys(params)\r\n            .map((k: any) => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]))\r\n            .join(\"&\");\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationErrorCodePropertyName } from \"../common.speech/Exports\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    CancellationDetailsBase,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n} from \"./Exports\";\r\n\r\nexport enum SpeakerRecognitionResultType {\r\n    Verify,\r\n    Identify\r\n}\r\n/**\r\n * Output format\r\n * @class SpeakerRecognitionResult\r\n */\r\nexport class SpeakerRecognitionResult {\r\n    private privReason: ResultReason;\r\n    private privProperties: PropertyCollection;\r\n    private privProfileId: string;\r\n    private privScore: number;\r\n    private privErrorDetails: string;\r\n\r\n    public constructor(resultType: SpeakerRecognitionResultType, data: string, profileId: string, resultReason: ResultReason = ResultReason.RecognizedSpeaker) {\r\n        this.privProperties = new PropertyCollection();\r\n        this.privReason = resultReason;\r\n        if (this.privReason !== ResultReason.Canceled) {\r\n            if (resultType === SpeakerRecognitionResultType.Identify) {\r\n                const json: { identifiedProfile: { profileId: string, score: number } } = JSON.parse(data);\r\n                Contracts.throwIfNullOrUndefined(json, \"JSON\");\r\n                this.privProfileId = json.identifiedProfile.profileId;\r\n                this.privScore = json.identifiedProfile.score;\r\n            } else {\r\n                const json: { recognitionResult: string, score: number } = JSON.parse(data);\r\n                Contracts.throwIfNullOrUndefined(json, \"JSON\");\r\n                this.privScore = json.score;\r\n                if (json.recognitionResult.toLowerCase() !== \"accept\") {\r\n                    this.privReason = ResultReason.NoMatch;\r\n                }\r\n                if (profileId !== undefined && profileId !== \"\") {\r\n                    this.privProfileId = profileId;\r\n                }\r\n            }\r\n        } else {\r\n            const json: { statusText: string } = JSON.parse(data);\r\n            Contracts.throwIfNullOrUndefined(json, \"JSON\");\r\n            this.privErrorDetails = json.statusText;\r\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.ServiceError]);\r\n        }\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_JsonResult, data);\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get profileId(): string {\r\n        return this.privProfileId;\r\n    }\r\n\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    public get score(): number {\r\n        return this.privScore;\r\n    }\r\n}\r\n\r\n/**\r\n * @class SpeakerRecognitionCancellationDetails\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class SpeakerRecognitionCancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of SpeakerRecognitionCancellationDetails object for the canceled SpeakerRecognitionResult\r\n     * @member SpeakerRecognitionCancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeakerRecognitionResult} result - The result that was canceled.\r\n     * @returns {SpeakerRecognitionCancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: SpeakerRecognitionResult): SpeakerRecognitionCancellationDetails {\r\n        const reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (!!result.properties) {\r\n            errorCode = (CancellationErrorCode as any)[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])];\r\n        }\r\n\r\n        return new SpeakerRecognitionCancellationDetails(reason, result.errorDetails, errorCode);\r\n    }\r\n}\r\n","import {\r\n    IRequestOptions,\r\n    IRestResponse,\r\n    RestConfigBase,\r\n    RestMessageAdapter,\r\n    RestRequestType,\r\n} from \"../common.browser/Exports\";\r\nimport { IAudioSource } from \"../common/Exports\";\r\nimport {\r\n    PropertyId,\r\n    SpeakerIdentificationModel,\r\n    SpeakerVerificationModel,\r\n    VoiceProfile,\r\n    VoiceProfileType,\r\n} from \"../sdk/Exports\";\r\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase\";\r\nimport { SpeakerRecognitionConfig } from \"./Exports\";\r\n\r\n/**\r\n * Implements methods for speaker recognition classes, sending requests to endpoint\r\n * and parsing response into expected format\r\n * @class SpeakerIdMessageAdapter\r\n */\r\nexport class SpeakerIdMessageAdapter {\r\n    private privRestAdapter: RestMessageAdapter;\r\n    private privUri: string;\r\n    private privApiVersion: string;\r\n\r\n    public constructor(config: SpeakerRecognitionConfig) {\r\n\r\n        let endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        if (!endpoint) {\r\n            const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, \"westus\");\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, `https://${region}.api.cognitive${hostSuffix}`);\r\n        }\r\n        this.privUri = `${endpoint}/speaker-recognition/{mode}/{dependency}/profiles`;\r\n\r\n        const options: IRequestOptions = RestConfigBase.requestOptions;\r\n        options.headers[RestConfigBase.configParams.subscriptionKey] = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\r\n        this.privApiVersion = config.parameters.getProperty(PropertyId.SpeakerRecognition_Api_Version, \"2021-09-05\");\r\n\r\n        this.privRestAdapter = new RestMessageAdapter(options);\r\n    }\r\n\r\n    /**\r\n     * Sends create profile request to endpoint.\r\n     * @function\r\n     * @param {VoiceProfileType} profileType - type of voice profile to create.\r\n     * @param {string} lang - language/locale of voice profile\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} promised rest response containing id of created profile.\r\n     */\r\n    public createProfile(profileType: VoiceProfileType, lang: string):\r\n        Promise<IRestResponse> {\r\n\r\n        const uri = this.getOperationUri(profileType);\r\n        return this.privRestAdapter.request(RestRequestType.Post, uri, this.getQueryParams(), { locale: lang });\r\n    }\r\n\r\n    /**\r\n     * Sends create enrollment request to endpoint.\r\n     * @function\r\n     * @param {VoiceProfile} profileType - voice profile for which to create new enrollment.\r\n     * @param {IAudioSource} audioSource - audioSource from which to pull data to send\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} rest response to enrollment request.\r\n     */\r\n    public createEnrollment(profile: VoiceProfile, audioSource: IAudioSource):\r\n        Promise<IRestResponse> {\r\n\r\n        const uri = this.getOperationUri(profile.profileType) + \"/\" + profile.profileId + \"/enrollments\";\r\n        return audioSource.blob.then<IRestResponse>((result: Blob | Buffer): Promise<IRestResponse> => {\r\n            return this.privRestAdapter.request(RestRequestType.File, uri, this.getQueryParams({ ignoreMinLength: \"true\" }), null, result);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sends verification request to endpoint.\r\n     * @function\r\n     * @param {SpeakerVerificationModel} model - voice model to verify against.\r\n     * @param {IAudioSource} audioSource - audioSource from which to pull data to send\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} rest response to enrollment request.\r\n     */\r\n    public async verifySpeaker(model: SpeakerVerificationModel, audioSource: IAudioSource):\r\n        Promise<IRestResponse> {\r\n\r\n        const uri = this.getOperationUri(model.voiceProfile.profileType) + \"/\" + model.voiceProfile.profileId + \":verify\";\r\n        try {\r\n            const result: Blob | Buffer = await audioSource.blob;\r\n            return this.privRestAdapter.request(RestRequestType.File, uri, this.getQueryParams({ ignoreMinLength: \"true\" }), null, result);\r\n        } catch (e) {\r\n            return Promise.resolve({ data: e } as IRestResponse);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends identification request to endpoint.\r\n     * @function\r\n     * @param {SpeakerIdentificationModel} model - voice profiles against which to identify.\r\n     * @param {IAudioSource} audioSource - audioSource from which to pull data to send\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} rest response to enrollment request.\r\n     */\r\n    public async identifySpeaker(model: SpeakerIdentificationModel, audioSource: IAudioSource):\r\n        Promise<IRestResponse> {\r\n\r\n        const uri = this.getOperationUri(VoiceProfileType.TextIndependentIdentification) + \":identifySingleSpeaker\";\r\n        try {\r\n            const result: Blob | Buffer = await audioSource.blob;\r\n            return this.privRestAdapter.request(RestRequestType.File, uri, this.getQueryParams({ profileIds: model.voiceProfileIds, ignoreMinLength: \"true\" }), null, result);\r\n        } catch (e) {\r\n            return Promise.resolve({ data: e } as IRestResponse);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends profile status request to endpoint.\r\n     * @function\r\n     * @param {VoiceProfile} profile - voice profile to check.\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} rest response to status request\r\n     */\r\n    public getProfileStatus(profile: VoiceProfile): Promise<IRestResponse> {\r\n\r\n        const uri = `${this.getOperationUri(profile.profileType)}/${profile.profileId}`;\r\n        return this.privRestAdapter.request(RestRequestType.Get, uri, this.getQueryParams());\r\n    }\r\n\r\n    /**\r\n     * Sends get all profiles request to endpoint.\r\n     * @function\r\n     * @param {VoiceProfileType} profileType - type of profiles to return list of\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} promised rest response containing all profiles\r\n     */\r\n    public getProfiles(profileType: VoiceProfileType): Promise<IRestResponse> {\r\n        const uri = this.getOperationUri(profileType);\r\n        return this.privRestAdapter.request(RestRequestType.Get, uri, this.getQueryParams());\r\n    }\r\n\r\n    /**\r\n     * Sends get activation/auth phrases request to endpoint.\r\n     * @function\r\n     * @param {VoiceProfileType} profileType - type of profiles to return phrases for\r\n     * @param {string} lang - language/locale of voice profile\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} promised rest response containing list of valid phrases\r\n     */\r\n    public getPhrases(profileType: VoiceProfileType, lang: string): Promise<IRestResponse> {\r\n        const uri = `${this.getOperationUri(profileType)}`.replace(`profiles`, `phrases`) + \"/\" + lang;\r\n        return this.privRestAdapter.request(RestRequestType.Get, uri, this.getQueryParams());\r\n    }\r\n\r\n    /**\r\n     * Sends delete profile request to endpoint.\r\n     * @function\r\n     * @param {VoiceProfile} profile - voice profile to delete.\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} rest response to deletion request\r\n     */\r\n    public deleteProfile(profile: VoiceProfile): Promise<IRestResponse> {\r\n\r\n        const uri = this.getOperationUri(profile.profileType) + \"/\" + profile.profileId;\r\n        return this.privRestAdapter.request(RestRequestType.Delete, uri, this.getQueryParams());\r\n    }\r\n\r\n    /**\r\n     * Sends reset profile request to endpoint.\r\n     * @function\r\n     * @param {VoiceProfile} profile - voice profile to reset enrollments for.\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} rest response to reset request\r\n     */\r\n    public resetProfile(profile: VoiceProfile): Promise<IRestResponse> {\r\n\r\n        const uri = this.getOperationUri(profile.profileType) + \"/\" + profile.profileId + \":reset\";\r\n        return this.privRestAdapter.request(RestRequestType.Post, uri, this.getQueryParams());\r\n    }\r\n\r\n    private getOperationUri(profileType: VoiceProfileType): string {\r\n\r\n        const mode = profileType === VoiceProfileType.TextIndependentIdentification ? \"identification\" : \"verification\";\r\n        const dependency = profileType === VoiceProfileType.TextDependentVerification ? \"text-dependent\" : \"text-independent\";\r\n        return this.privUri.replace(\"{mode}\", mode).replace(\"{dependency}\", dependency);\r\n    }\r\n\r\n    private getQueryParams(params: any = {}): any {\r\n\r\n        params[RestConfigBase.configParams.apiVersion] = this.privApiVersion;\r\n        return params;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IRestResponse,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    Context,\r\n    OS,\r\n    SpeakerIdMessageAdapter,\r\n    SpeakerRecognitionConfig,\r\n} from \"../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\r\nimport { AudioConfig, AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    VoiceProfile,\r\n    VoiceProfileEnrollmentResult,\r\n    VoiceProfilePhraseResult,\r\n    VoiceProfileResult,\r\n    VoiceProfileType,\r\n} from \"./Exports\";\r\nimport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Defines VoiceProfileClient class for Speaker Recognition\r\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\r\n * @class VoiceProfileClient\r\n */\r\nexport class VoiceProfileClient {\r\n    protected privProperties: PropertyCollection;\r\n    private privAdapter: SpeakerIdMessageAdapter;\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member VoiceProfileClient.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member VoiceProfileClient.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this VoiceProfileClient.\r\n     * @member VoiceProfileClient.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this VoiceProfileClient.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * VoiceProfileClient constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer (authentication key, region, &c)\r\n     */\r\n    public constructor(speechConfig: SpeechConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        this.privProperties = speechConfigImpl.properties.clone();\r\n        this.implClientSetup();\r\n    }\r\n\r\n    /**\r\n     * Create a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.createProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfileType} profileType Type of Voice Profile to be created\r\n     *        specifies the keyword to be recognized.\r\n     * @param {string} lang Language string (locale) for Voice Profile\r\n     * @return {Promise<VoiceProfile>} - Promise of a VoiceProfile.\r\n     */\r\n    public async createProfileAsync(profileType: VoiceProfileType, lang: string): Promise<VoiceProfile> {\r\n        const result: IRestResponse = await this.privAdapter.createProfile(profileType, lang);\r\n        if (!result.ok) {\r\n            throw new Error(`createProfileAsync failed with code: ${result.status}, message: ${result.statusText}`);\r\n        }\r\n        const response: { profileId: string } = result.json;\r\n        const profile = new VoiceProfile(response.profileId, profileType);\r\n        return profile;\r\n    }\r\n    /**\r\n     * Get current information of a voice profile\r\n     * @member VoiceProfileClient.prototype.retrieveEnrollmentResultAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to retrieve info for\r\n     * @return {Promise<VoiceProfileEnrollmentResult>} - Promise of a VoiceProfileEnrollmentResult.\r\n     */\r\n    public async retrieveEnrollmentResultAsync(profile: VoiceProfile): Promise<VoiceProfileEnrollmentResult> {\r\n        const result: IRestResponse = await this.privAdapter.getProfileStatus(profile);\r\n        return new VoiceProfileEnrollmentResult(\r\n            result.ok ? ResultReason.EnrolledVoiceProfile : ResultReason.Canceled,\r\n            result.data,\r\n            result.statusText,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get all voice profiles on account with given voice profile type\r\n     * @member VoiceProfileClient.prototype.getAllProfilesAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfileType} profileType profile type (identification/verification) for which to list profiles\r\n     * @return {Promise<VoiceProfileEnrollmentResult[]>} - Promise of an array of VoiceProfileEnrollmentResults.\r\n     */\r\n    public async getAllProfilesAsync(profileType: VoiceProfileType): Promise<VoiceProfileEnrollmentResult[]> {\r\n        const result: IRestResponse = await this.privAdapter.getProfiles(profileType);\r\n        if (profileType === VoiceProfileType.TextIndependentIdentification) {\r\n            return VoiceProfileEnrollmentResult.FromIdentificationProfileList(result.json);\r\n        }\r\n        return VoiceProfileEnrollmentResult.FromVerificationProfileList(result.json);\r\n    }\r\n\r\n    /**\r\n     * Get valid authorization phrases for voice profile enrollment\r\n     * @member VoiceProfileClient.prototype.getAuthorizationPhrasesAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfileType} profileType Profile Type to get activation phrases for\r\n     * @param {string} lang Language string (locale) for Voice Profile\r\n     */\r\n    public async getActivationPhrasesAsync(profileType: VoiceProfileType, lang: string): Promise<VoiceProfilePhraseResult> {\r\n        const result: IRestResponse = await this.privAdapter.getPhrases(profileType, lang);\r\n        return new VoiceProfilePhraseResult(\r\n            result.ok ? ResultReason.EnrollingVoiceProfile : ResultReason.Canceled,\r\n            result.statusText,\r\n            result.json\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Create a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.enrollProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to create enrollment for\r\n     * @param {AudioConfig} audioConfig source info from which to create enrollment\r\n     * @return {Promise<VoiceProfileEnrollmentResult>} - Promise of a VoiceProfileEnrollmentResult.\r\n     */\r\n    public async enrollProfileAsync(profile: VoiceProfile, audioConfig: AudioConfig): Promise<VoiceProfileEnrollmentResult> {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        Contracts.throwIfNullOrUndefined(configImpl, \"audioConfig\");\r\n\r\n        const result: IRestResponse = await this.privAdapter.createEnrollment(profile, configImpl);\r\n        return new VoiceProfileEnrollmentResult(\r\n            result.ok ? ResultReason.EnrolledVoiceProfile : ResultReason.Canceled,\r\n            result.data,\r\n            result.statusText,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Delete a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.deleteProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to be deleted\r\n     * @return {Promise<VoiceProfileResult>} - Promise of a VoiceProfileResult.\r\n     */\r\n    public async deleteProfileAsync(profile: VoiceProfile): Promise<VoiceProfileResult> {\r\n        const result: IRestResponse = await this.privAdapter.deleteProfile(profile);\r\n        return this.getResult(result, ResultReason.DeletedVoiceProfile);\r\n    }\r\n\r\n    /**\r\n     * Remove all enrollments for a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.resetProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to be reset\r\n     * @return {Promise<VoiceProfileResult>} - Promise of a VoiceProfileResult.\r\n     */\r\n    public async resetProfileAsync(profile: VoiceProfile): Promise<VoiceProfileResult> {\r\n        const result: IRestResponse = await this.privAdapter.resetProfile(profile);\r\n        return this.getResult(result, ResultReason.ResetVoiceProfile);\r\n    }\r\n\r\n    /**\r\n     * Included for compatibility\r\n     * @member VoiceProfileClient.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        return;\r\n    }\r\n\r\n    // Does class setup, swiped from Recognizer.\r\n    protected implClientSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const recognizerConfig =\r\n            new SpeakerRecognitionConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion)),\r\n                this.privProperties);\r\n\r\n        this.privAdapter = new SpeakerIdMessageAdapter(recognizerConfig);\r\n    }\r\n\r\n    private getResult(result: IRestResponse, successReason: ResultReason, cb?: (response: VoiceProfileResult) => void): VoiceProfileResult {\r\n        const response: VoiceProfileResult =\r\n            new VoiceProfileResult(\r\n                result.ok ? successReason : ResultReason.Canceled,\r\n                result.statusText\r\n            );\r\n        return (response);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    VoiceProfile,\r\n    VoiceProfileType,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines SpeakerIdentificationModel class for Speaker Recognition\r\n * Model contains a set of profiles against which to identify speaker(s)\r\n * @class SpeakerIdentificationModel\r\n */\r\nexport class SpeakerIdentificationModel {\r\n    private privVoiceProfiles: VoiceProfile[] = [];\r\n\r\n    private constructor(profiles: VoiceProfile[]) {\r\n        Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\r\n        if (profiles.length === 0) {\r\n            throw new Error(\"Empty Voice Profiles array\");\r\n        }\r\n        profiles.forEach((profile: VoiceProfile) => {\r\n            if (profile.profileType !== VoiceProfileType.TextIndependentIdentification) {\r\n                throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\r\n            }\r\n            this.privVoiceProfiles.push(profile);\r\n        });\r\n    }\r\n    public static fromProfiles(profiles: VoiceProfile[]): SpeakerIdentificationModel {\r\n        return new SpeakerIdentificationModel(profiles);\r\n    }\r\n\r\n    public get voiceProfileIds(): string {\r\n        return this.privVoiceProfiles.map((profile: VoiceProfile) => profile.profileId).join(\",\");\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    VoiceProfile,\r\n    VoiceProfileType,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines SpeakerVerificationModel class for Speaker Recognition\r\n * Model contains a profile against which to verify a speaker\r\n * @class SpeakerVerificationModel\r\n */\r\nexport class SpeakerVerificationModel {\r\n    private privVoiceProfile: VoiceProfile;\r\n\r\n    private constructor(profile: VoiceProfile) {\r\n        Contracts.throwIfNullOrUndefined(profile, \"VoiceProfile\");\r\n        if (profile.profileType === VoiceProfileType.TextIndependentIdentification) {\r\n            throw new Error(\"Verification model cannot be created from Identification profile\");\r\n        }\r\n        this.privVoiceProfile = profile;\r\n    }\r\n\r\n    public static fromProfile(profile: VoiceProfile): SpeakerVerificationModel {\r\n        return new SpeakerVerificationModel(profile);\r\n    }\r\n\r\n    public get voiceProfile(): VoiceProfile {\r\n        return this.privVoiceProfile;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IRestResponse,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    Context,\r\n    OS,\r\n    SpeakerIdMessageAdapter,\r\n    SpeakerRecognitionConfig,\r\n} from \"../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\r\nimport { AudioConfig, AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeakerIdentificationModel,\r\n    SpeakerRecognitionResult,\r\n    SpeakerRecognitionResultType,\r\n    SpeakerVerificationModel,\r\n} from \"./Exports\";\r\nimport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Defines SpeakerRecognizer class for Speaker Recognition\r\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\r\n * @class SpeakerRecognizer\r\n */\r\nexport class SpeakerRecognizer {\r\n    protected privProperties: PropertyCollection;\r\n    private privAdapter: SpeakerIdMessageAdapter;\r\n    private privAudioConfigImpl: AudioConfigImpl;\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member SpeakerRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member SpeakerRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this SpeakerRecognizer.\r\n     * @member SpeakerRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeakerRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * SpeakerRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this recognizer (authentication key, region, &c)\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig: AudioConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        this.privAudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        Contracts.throwIfNull(this.privAudioConfigImpl, \"audioConfig\");\r\n\r\n        this.privProperties = speechConfigImpl.properties.clone();\r\n        this.implSRSetup();\r\n    }\r\n\r\n    /**\r\n     * Get recognition result for model using given audio\r\n     * @member SpeakerRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {SpeakerIdentificationModel} model Model containing Voice Profiles to be identified\r\n     * @param cb - Callback invoked once result is returned.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public async recognizeOnceAsync(model: SpeakerIdentificationModel | SpeakerVerificationModel): Promise<SpeakerRecognitionResult> {\r\n\r\n        if (model instanceof SpeakerIdentificationModel) {\r\n            const responsePromise: Promise<IRestResponse> = this.privAdapter.identifySpeaker(model, this.privAudioConfigImpl);\r\n            return this.getResult(responsePromise, SpeakerRecognitionResultType.Identify, undefined);\r\n        } else if (model instanceof SpeakerVerificationModel) {\r\n            const responsePromise: Promise<IRestResponse> = this.privAdapter.verifySpeaker(model, this.privAudioConfigImpl);\r\n            return this.getResult(responsePromise, SpeakerRecognitionResultType.Verify, model.voiceProfile.profileId);\r\n        } else {\r\n            throw new Error(\"SpeakerRecognizer.recognizeOnce: Unexpected model type\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Included for compatibility\r\n     * @member SpeakerRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        return;\r\n    }\r\n\r\n    // Does class setup, swiped from Recognizer.\r\n    private implSRSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const recognizerConfig =\r\n            new SpeakerRecognitionConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion)),\r\n                this.privProperties);\r\n\r\n        this.privAdapter = new SpeakerIdMessageAdapter(recognizerConfig);\r\n    }\r\n\r\n    private async getResult(responsePromise: Promise<IRestResponse>, resultType: SpeakerRecognitionResultType, profileId?: string): Promise<SpeakerRecognitionResult> {\r\n        const response: IRestResponse = await responsePromise;\r\n        return new SpeakerRecognitionResult(\r\n            resultType,\r\n            response.data,\r\n            profileId,\r\n            response.ok ? ResultReason.RecognizedSpeaker : ResultReason.Canceled,\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AutoDetectSourceLanguagesOpenRangeOptionName } from \"../common.speech/Exports\";\r\nimport {Contracts} from \"./Contracts\";\r\nimport {\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SourceLanguageConfig,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Language auto detect configuration.\r\n * @class AutoDetectSourceLanguageConfig\r\n * Added in version 1.13.0.\r\n */\r\nexport class AutoDetectSourceLanguageConfig {\r\n    private privProperties: PropertyCollection;\r\n\r\n    private constructor() {\r\n        this.privProperties = new PropertyCollection();\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.fromOpenRange\r\n     * @function\r\n     * @public\r\n     * Only [[SpeechSynthesizer]] supports source language auto detection from open range,\r\n     * for [[Recognizer]], please use AutoDetectSourceLanguageConfig with specific source languages.\r\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\r\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with open range.\r\n     */\r\n    public static fromOpenRange(): AutoDetectSourceLanguageConfig {\r\n        const config = new AutoDetectSourceLanguageConfig();\r\n        config.properties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, AutoDetectSourceLanguagesOpenRangeOptionName);\r\n        return config;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.fromLanguages\r\n     * @function\r\n     * @public\r\n     * @param {string[]} languages Comma-separated string of languages (eg. \"en-US,fr-FR\") to populate properties of config.\r\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\r\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given languages.\r\n     */\r\n    public static fromLanguages(languages: string[]): AutoDetectSourceLanguageConfig {\r\n        Contracts.throwIfArrayEmptyOrWhitespace(languages, \"languages\");\r\n        const config = new AutoDetectSourceLanguageConfig();\r\n        config.properties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, languages.join());\r\n        return config;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.fromSourceLanguageConfigs\r\n     * @function\r\n     * @public\r\n     * @param {SourceLanguageConfig[]} configs SourceLanguageConfigs to populate properties of config.\r\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\r\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given SourceLanguageConfigs.\r\n     */\r\n    public static fromSourceLanguageConfigs(configs: SourceLanguageConfig[]): AutoDetectSourceLanguageConfig {\r\n        if (configs.length < 1) {\r\n            throw new Error(\"Expected non-empty SourceLanguageConfig array.\");\r\n        }\r\n        const autoConfig = new AutoDetectSourceLanguageConfig();\r\n        const langs: string[] = [];\r\n        configs.forEach((config: SourceLanguageConfig) => {\r\n            langs.push(config.language);\r\n            if (config.endpointId !== undefined && config.endpointId !== \"\") {\r\n                const customProperty = config.language + PropertyId.SpeechServiceConnection_EndpointId.toString();\r\n                autoConfig.properties.setProperty(customProperty, config.endpointId);\r\n            }\r\n        });\r\n        autoConfig.properties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, langs.join());\r\n\r\n        return autoConfig;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @return {PropertyCollection} Properties of the config.\r\n     * @summary Gets an auto detected language config properties\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    SpeechRecognitionResult,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Output format\r\n * @class AutoDetectSourceLanguageResult\r\n */\r\nexport class AutoDetectSourceLanguageResult {\r\n\r\n    private privLanguage: string;\r\n    private privLanguageDetectionConfidence: string;\r\n\r\n    private constructor(language: string, languageDetectionConfidence: string) {\r\n        Contracts.throwIfNullOrUndefined(language, \"language\");\r\n        Contracts.throwIfNullOrUndefined(languageDetectionConfidence, \"languageDetectionConfidence\");\r\n        this.privLanguage = language;\r\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of AutoDetectSourceLanguageResult object from a SpeechRecognitionResult instance.\r\n     * @member AutoDetectSourceLanguageResult.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeechRecognitionResult} result - The recognition result.\r\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\r\n     */\r\n    public static fromResult(result: SpeechRecognitionResult): AutoDetectSourceLanguageResult {\r\n        return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    public get languageDetectionConfidence(): string {\r\n        return this.privLanguageDetectionConfidence;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\n\r\n/**\r\n * Source Language configuration.\r\n * @class SourceLanguageConfig\r\n */\r\nexport class SourceLanguageConfig {\r\n    private privLanguage: string;\r\n    private privEndpointId: string;\r\n\r\n    private constructor(language: string, endpointId?: string) {\r\n        Contracts.throwIfNullOrUndefined(language, \"language\");\r\n        this.privLanguage = language;\r\n        this.privEndpointId = endpointId;\r\n    }\r\n\r\n    /**\r\n     * @member SourceLanguageConfig.fromLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} language language (eg. \"en-US\") value of config.\r\n     * @param {string?} endpointId endpointId of model bound to given language of config.\r\n     * @return {SourceLanguageConfig} Instance of SourceLanguageConfig\r\n     * @summary Creates an instance of the SourceLanguageConfig with the given language and optional endpointId.\r\n     * Added in version 1.13.0.\r\n     */\r\n    public static fromLanguage(language: string, endpointId?: string): SourceLanguageConfig {\r\n        return new SourceLanguageConfig(language, endpointId);\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    public get endpointId(): string {\r\n        return this.privEndpointId;\r\n    }\r\n}\r\n","\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    RestConfigBase\r\n} from \"../../common.browser/RestConfigBase\";\r\n\r\nexport class ConversationConnectionConfig extends RestConfigBase {\r\n\r\n    private static readonly privHost: string = \"dev.microsofttranslator.com\";\r\n    private static readonly privRestPath: string = \"/capito/room\";\r\n    private static readonly privApiVersion: string = \"2.0\";\r\n    private static readonly privDefaultLanguageCode: string = \"en-US\";\r\n    private static readonly privClientAppId: string = \"FC539C22-1767-4F1F-84BC-B4D811114F15\";\r\n    private static readonly privWebSocketPath: string = \"/capito/translate\";\r\n    private static readonly privSpeechHost: string = \"{region}.s2s.speech.microsoft.com\";\r\n    private static readonly privSpeechPath: string = \"/speech/translation/cognitiveservices/v1\";\r\n    private static readonly privTranscriptionEventKeys: string[] = [\"iCalUid\", \"callId\", \"organizer\", \"FLAC\", \"MTUri\", \"DifferentiateGuestSpeakers\", \"audiorecording\", \"Threadid\", \"OrganizerMri\", \"OrganizerTenantId\", \"UserToken\"];\r\n\r\n    public static get host(): string {\r\n        return ConversationConnectionConfig.privHost;\r\n    }\r\n\r\n    public static get apiVersion(): string {\r\n        return ConversationConnectionConfig.privApiVersion;\r\n    }\r\n\r\n    public static get clientAppId(): string {\r\n        return ConversationConnectionConfig.privClientAppId;\r\n    }\r\n\r\n    public static get defaultLanguageCode(): string {\r\n        return ConversationConnectionConfig.privDefaultLanguageCode;\r\n    }\r\n\r\n    public static get restPath(): string {\r\n        return ConversationConnectionConfig.privRestPath;\r\n    }\r\n\r\n    public static get webSocketPath(): string {\r\n        return ConversationConnectionConfig.privWebSocketPath;\r\n    }\r\n\r\n    public static get speechHost(): string {\r\n        return ConversationConnectionConfig.privSpeechHost;\r\n    }\r\n\r\n    public static get speechPath(): string {\r\n        return ConversationConnectionConfig.privSpeechPath;\r\n    }\r\n\r\n    public static get transcriptionEventKeys(): string[] {\r\n        return ConversationConnectionConfig.privTranscriptionEventKeys;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionEventArgs,\r\n    ConversationExpirationEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    SessionEventArgs,\r\n    VoiceSignature,\r\n    } from \"../../sdk/Exports\";\r\n// import { ConversationClient } from \"./ConversationConnection\";\r\nimport {\r\n    ConversationReceivedTranslationEventArgs,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs } from \"./ConversationTranslatorEventArgs\";\r\n\r\n/**\r\n * Internal conversation data\r\n */\r\nexport interface IInternalConversation {\r\n    // the token to use for connecting to the Speech Service\r\n    cognitiveSpeechAuthToken: string;\r\n    // the region to use for connecting to the Speech Service\r\n    cognitiveSpeechRegion: string;\r\n    // the unique id of the user who started or joined the Conversation\r\n    participantId: string;\r\n    // a descriptive name for the Conversation\r\n    name: string;\r\n    // a descriptive name for the Conversation\r\n    description: string;\r\n    // the speech model ID for custom speech\r\n    speechModel: string;\r\n    // represents the level of speech supported in the Conversation (0: everyone can speak, 2: only host can speak, 3: no-one can speak)\r\n    modalities: number;\r\n    // ?\r\n    isApproved: boolean;\r\n    // the mute flag has been set at conversation level and only the host can speak\r\n    isMuted: boolean;\r\n    // the 5 character conversation Id\r\n    roomId: string;\r\n    // the hex color string to represent a user. If there are many users this hex color may be reused (?).\r\n    avatar: string;\r\n    // the token to use when calling the websocket\r\n    token: string;\r\n    // used for tracking the session and help with troubleshooting problems in the logs\r\n    correlationId: string;\r\n    // extracted from the headers\r\n    requestId: string;\r\n}\r\n\r\n/**\r\n * The user who is participating in the conversation.\r\n */\r\nexport interface IInternalParticipant {\r\n    avatar?: string;\r\n    displayName?: string;\r\n    id?: string;\r\n    isHost?: boolean;\r\n    isMuted?: boolean;\r\n    isUsingTts?: boolean;\r\n    preferredLanguage?: string;\r\n    voice?: string;\r\n}\r\n\r\n/** Users participating in the conversation */\r\nexport class InternalParticipants {\r\n\r\n    constructor(public participants: IInternalParticipant[] = [], public meId?: string) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Add or update a participant\r\n     * @param value\r\n     */\r\n    public addOrUpdateParticipant(value: IInternalParticipant): IInternalParticipant {\r\n        if (value === undefined) {\r\n            return;\r\n        }\r\n\r\n        const exists: number = this.getParticipantIndex(value.id);\r\n        if (exists > -1) {\r\n            this.participants.splice(exists, 1, value);\r\n        } else {\r\n            this.participants.push(value);\r\n        }\r\n\r\n        // ensure it was added ok\r\n        return this.getParticipant(value.id);\r\n    }\r\n\r\n    /**\r\n     * Find the participant's position in the participants list.\r\n     * @param id\r\n     */\r\n    public getParticipantIndex(id: string): number {\r\n        return this.participants.findIndex((p: IInternalParticipant) => p.id === id);\r\n    }\r\n\r\n    /**\r\n     * Find the participant by id.\r\n     * @param id\r\n     */\r\n    public getParticipant(id: string): IInternalParticipant {\r\n        return this.participants.find((p: IInternalParticipant) => p.id === id);\r\n    }\r\n\r\n    /***\r\n     * Remove a participant from the participants list.\r\n     */\r\n    public deleteParticipant(id: string): void {\r\n        this.participants = this.participants.filter((p: IInternalParticipant) => p.id !== id);\r\n    }\r\n\r\n    /***\r\n     * Helper to return the conversation host.\r\n     */\r\n    public get host(): IInternalParticipant {\r\n        return this.participants.find((p: IInternalParticipant) => p.isHost === true );\r\n    }\r\n\r\n    /**\r\n     * Helper to return the current user.\r\n     */\r\n    public get me(): IInternalParticipant {\r\n        return this.getParticipant(this.meId);\r\n    }\r\n}\r\n\r\n/**\r\n * Recognizer for handling Conversation Translator websocket messages\r\n */\r\nexport interface ConversationRecognizer {\r\n    isDisposed(): boolean;\r\n    sendRequest: (command: string, cb?: () => void, err?: (e: string) => void) => void;\r\n    cancelSpeech?: () => Promise<void>;\r\n    close?: () => Promise<void>;\r\n    conversationExpiration?: (sender: ConversationRecognizer, event: ConversationExpirationEventArgs) => void;\r\n    connected?: (e: ConnectionEventArgs) => void;\r\n    disconnected?: (e: ConnectionEventArgs) => void;\r\n    canceled?: (sender: ConversationRecognizer, event: ConversationTranslationCanceledEventArgs) => void;\r\n    connectionOpened?: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    connectionClosed?: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    participantsListReceived?: (sender: ConversationRecognizer, event: ParticipantsListEventArgs) => void;\r\n    translationReceived?: (sender: ConversationRecognizer, event: ConversationReceivedTranslationEventArgs) => void;\r\n    lockRoomCommandReceived?: (sender: ConversationRecognizer, event: LockRoomEventArgs) => void;\r\n    muteAllCommandReceived?: (sender: ConversationRecognizer, event: MuteAllEventArgs) => void;\r\n    participantJoinCommandReceived?: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    participantLeaveCommandReceived?: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    participantUpdateCommandReceived?: (sender: ConversationRecognizer, event: ParticipantAttributeEventArgs) => void;\r\n    connect?: (token: string, cb?: () => void, err?: (e: string) => void) => void;\r\n}\r\n\r\n/**\r\n * Error message returned from the Conversation Translator websocket\r\n */\r\nexport interface IConversationResponseErrorMessage {\r\n    code: string;\r\n    message: string;\r\n}\r\n\r\n/**\r\n * Error returned from the Conversation Translator websocket\r\n */\r\nexport interface IConversationResponseError {\r\n    error: IConversationResponseErrorMessage;\r\n}\r\n\r\n/**\r\n * Base message command\r\n */\r\nexport interface IClientMessage {\r\n    type: any;\r\n}\r\n\r\n/**\r\n * Command message\r\n */\r\nexport interface ICommandMessage extends IClientMessage {\r\n    command?: string;\r\n}\r\n\r\n/**\r\n * Text message command\r\n */\r\nexport interface IInstantMessageCommand extends ICommandMessage {\r\n    roomId: string;\r\n    nickname?: string;\r\n    participantId: string;\r\n    text: string;\r\n}\r\n\r\n/**\r\n * Lock command\r\n */\r\nexport interface ILockConversationCommand extends ICommandMessage {\r\n    id?: string; // incoming ws\r\n    nickname?: string; // incoming ws\r\n    participantId: string; // host - incoming ws\r\n    roomid: string;\r\n    value: boolean;\r\n}\r\n\r\n/**\r\n * Mute all command\r\n */\r\nexport interface IMuteAllCommand extends ICommandMessage {\r\n    roomid: string;\r\n    nickname?: string;  // incoming ws\r\n    participantId: string; // host\r\n    value: boolean;\r\n    id?: string; // incoming ws\r\n}\r\n\r\n/**\r\n * Mute participant command\r\n */\r\nexport interface IMuteCommand extends ICommandMessage {\r\n    roomid: string;\r\n    nickname?: string;\r\n    participantId: string; // participant\r\n    value: boolean;\r\n    id?: string; // incoming ws\r\n}\r\n\r\n/**\r\n * Remove participant command\r\n */\r\nexport interface IEjectParticipantCommand extends ICommandMessage {\r\n    roomid: string;\r\n    participantId: string; // participant\r\n}\r\n\r\n/**\r\n * Change nickname command\r\n */\r\nexport interface IChangeNicknameCommand extends ICommandMessage {\r\n    roomid: string;\r\n    participantId: string;\r\n    nickname: string;\r\n    value: string;\r\n}\r\n\r\n/**\r\n * List of command message types\r\n */\r\nexport const ConversationTranslatorMessageTypes = {\r\n    command: \"command\",\r\n    final: \"final\",\r\n    info: \"info\",\r\n    instantMessage: \"instant_message\",\r\n    keepAlive: \"keep_alive\",\r\n    partial: \"partial\",\r\n    participantCommand: \"participant_command\",\r\n    translatedMessage: \"translated_message\"\r\n};\r\n\r\n/**\r\n * List of command types\r\n */\r\nexport const ConversationTranslatorCommandTypes = {\r\n    changeNickname: \"ChangeNickname\",\r\n    disconnectSession: \"DisconnectSession\",\r\n    ejectParticipant: \"EjectParticipant\",\r\n    instant_message: \"instant_message\",\r\n    joinSession: \"JoinSession\",\r\n    leaveSession: \"LeaveSession\",\r\n    participantList: \"ParticipantList\",\r\n    roomExpirationWarning: \"RoomExpirationWarning\",\r\n    setLockState: \"SetLockState\",\r\n    setMute: \"SetMute\",\r\n    setMuteAll: \"SetMuteAll\",\r\n    setProfanityFiltering: \"SetProfanityFiltering\",\r\n    setTranslateToLanguages: \"SetTranslateToLanguages\",\r\n    setUseTTS: \"SetUseTTS\"\r\n};\r\n\r\n/**\r\n * HTTP response helper\r\n */\r\nexport interface IResponse {\r\n    ok: boolean;\r\n    status: number;\r\n    statusText: string;\r\n    data: string;\r\n    json: <T>() => T;\r\n    headers: string;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nexport enum ParticipantChangedReason {\r\n    /** Participant has joined the conversation. */\r\n    JoinedConversation,\r\n\r\n    /** Participant has left the conversation. This could be voluntary, or involuntary\r\n     *  (e.g. they are experiencing networking issues).\r\n     */\r\n    LeftConversation,\r\n\r\n    /** The participants' state has changed (e.g. they became muted, changed their nickname). */\r\n    Updated\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IRequestOptions,\r\n    IRestParams,\r\n    IRestResponse,\r\n    RestMessageAdapter,\r\n    RestRequestType\r\n} from \"../../common.browser/Exports\";\r\nimport { IErrorMessages, IStringDictionary } from \"../../common/Exports\";\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport { PropertyCollection, PropertyId } from \"../../sdk/Exports\";\r\nimport { ConversationConnectionConfig } from \"./ConversationConnectionConfig\";\r\nimport { IConversationResponseError, IInternalConversation, IResponse } from \"./ConversationTranslatorInterfaces\";\r\n\r\nexport class ConversationManager {\r\n\r\n    private privRequestParams: IRestParams;\r\n    private privErrors: IErrorMessages;\r\n    private privHost: string;\r\n    private privApiVersion: string;\r\n    private privRestPath: string;\r\n    private privRestAdapter: RestMessageAdapter;\r\n\r\n    public constructor() {\r\n        //\r\n        this.privRequestParams = ConversationConnectionConfig.configParams;\r\n        this.privErrors = ConversationConnectionConfig.restErrors;\r\n        this.privHost = ConversationConnectionConfig.host;\r\n        this.privApiVersion = ConversationConnectionConfig.apiVersion;\r\n        this.privRestPath = ConversationConnectionConfig.restPath;\r\n        this.privRestAdapter = new RestMessageAdapter({});\r\n    }\r\n\r\n    /**\r\n     * Make a POST request to the Conversation Manager service endpoint to create or join a conversation.\r\n     * @param args\r\n     * @param conversationCode\r\n     * @param callback\r\n     * @param errorCallback\r\n     */\r\n    public createOrJoin(args: PropertyCollection, conversationCode: string, cb?: any, err?: any): void {\r\n\r\n        try {\r\n\r\n            Contracts.throwIfNullOrUndefined(args, \"args\");\r\n\r\n            const languageCode: string = args.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, ConversationConnectionConfig.defaultLanguageCode);\r\n            const nickname: string = args.getProperty(PropertyId.ConversationTranslator_Name, \"conversation_host\");\r\n            const endpointHost: string = args.getProperty(PropertyId.ConversationTranslator_Host, this.privHost);\r\n            const correlationId: string = args.getProperty(PropertyId.ConversationTranslator_CorrelationId);\r\n            const subscriptionKey: string = args.getProperty(PropertyId.SpeechServiceConnection_Key);\r\n            const subscriptionRegion: string = args.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n            const authToken: string = args.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n\r\n            Contracts.throwIfNullOrWhitespace(languageCode, \"languageCode\");\r\n            Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\r\n            Contracts.throwIfNullOrWhitespace(endpointHost, \"endpointHost\");\r\n\r\n            const queryParams: IStringDictionary<string> = {};\r\n            queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\r\n            queryParams[this.privRequestParams.languageCode] = languageCode;\r\n            queryParams[this.privRequestParams.nickname] = nickname;\r\n\r\n            const headers: IStringDictionary<string> = {};\r\n            if (correlationId) {\r\n                headers[this.privRequestParams.correlationId] = correlationId;\r\n            }\r\n            headers[this.privRequestParams.clientAppId] = ConversationConnectionConfig.clientAppId;\r\n\r\n            if (conversationCode !== undefined) {\r\n                queryParams[this.privRequestParams.roomId] = conversationCode;\r\n            } else {\r\n                Contracts.throwIfNullOrUndefined(subscriptionRegion, this.privErrors.authInvalidSubscriptionRegion);\r\n                headers[this.privRequestParams.subscriptionRegion] = subscriptionRegion;\r\n                if (subscriptionKey) {\r\n                    headers[this.privRequestParams.subscriptionKey] = subscriptionKey;\r\n                } else if (authToken) {\r\n                    headers[this.privRequestParams.authorization] = `Bearer ${authToken}`;\r\n                } else {\r\n                    Contracts.throwIfNullOrUndefined(subscriptionKey, this.privErrors.authInvalidSubscriptionKey);\r\n                }\r\n            }\r\n\r\n            const config: IRequestOptions = {};\r\n            config.headers = headers;\r\n            this.privRestAdapter.options = config;\r\n\r\n            const endpoint: string = `https://${endpointHost}${this.privRestPath}`;\r\n\r\n            // TODO: support a proxy and certificate validation\r\n            this.privRestAdapter.request(RestRequestType.Post, endpoint, queryParams, null).then((response: IRestResponse) => {\r\n\r\n                const requestId: string = RestMessageAdapter.extractHeaderValue(this.privRequestParams.requestId, response.headers);\r\n\r\n                if (!response.ok) {\r\n                    if (!!err) {\r\n                        // get the error\r\n                        let errorMessage: string = this.privErrors.invalidCreateJoinConversationResponse.replace(\"{status}\", response.status.toString());\r\n                        let errMessageRaw: IConversationResponseError;\r\n                        try {\r\n                            errMessageRaw = JSON.parse(response.data) as IConversationResponseError;\r\n                            errorMessage += ` [${errMessageRaw.error.code}: ${errMessageRaw.error.message}]`;\r\n                        } catch (e) {\r\n                            errorMessage += ` [${response.data}]`;\r\n                        }\r\n                        if (requestId) {\r\n                            errorMessage += ` ${requestId}`;\r\n                        }\r\n\r\n                        err(errorMessage);\r\n                    }\r\n                    return;\r\n                }\r\n                const conversation: IInternalConversation = JSON.parse(response.data) as IInternalConversation;\r\n                if (conversation) {\r\n                    conversation.requestId = requestId;\r\n                }\r\n                if (!!cb) {\r\n                    try {\r\n                        cb(conversation);\r\n                    } catch (e) {\r\n                        if (!!err) {\r\n                            err(e);\r\n                        }\r\n                    }\r\n                    cb = undefined;\r\n                }\r\n            /* tslint:disable:no-empty */\r\n            }).catch( (e: any) => {});\r\n\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n\r\n                } else {\r\n                    err(error);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Make a DELETE request to the Conversation Manager service endpoint to leave the conversation.\r\n     * @param args\r\n     * @param sessionToken\r\n     * @param callback\r\n     */\r\n    public leave(args: PropertyCollection, sessionToken: string): Promise<void> {\r\n        return new Promise<void>((resolve: () => void, reject: (reason: string) => void): void => {\r\n            try {\r\n\r\n                Contracts.throwIfNullOrUndefined(args, this.privErrors.invalidArgs.replace(\"{arg}\", \"config\"));\r\n                Contracts.throwIfNullOrWhitespace(sessionToken, this.privErrors.invalidArgs.replace(\"{arg}\", \"token\"));\r\n\r\n                const endpointHost: string = args.getProperty(PropertyId.ConversationTranslator_Host, this.privHost);\r\n                const correlationId: string = args.getProperty(PropertyId.ConversationTranslator_CorrelationId);\r\n\r\n                const queryParams: IStringDictionary<string> = {};\r\n                queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\r\n                queryParams[this.privRequestParams.sessionToken] = sessionToken;\r\n\r\n                const headers: IStringDictionary<string> = {};\r\n                if (correlationId) {\r\n                    headers[this.privRequestParams.correlationId] = correlationId;\r\n                }\r\n\r\n                const config: IRequestOptions = {};\r\n                config.headers = headers;\r\n                this.privRestAdapter.options = config;\r\n\r\n                const endpoint: string = `https://${endpointHost}${this.privRestPath}`;\r\n\r\n                // TODO: support a proxy and certificate validation\r\n                this.privRestAdapter.request(RestRequestType.Delete, endpoint, queryParams, null).then((response: IRestResponse) => {\r\n\r\n                    if (!response.ok) {\r\n                        // ignore errors on delete\r\n                    }\r\n\r\n                    resolve();\r\n                /* tslint:disable:no-empty */\r\n                }).catch( (e: any) => {});\r\n\r\n            } catch (error) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    reject(typedError.name + \": \" + typedError.message);\r\n\r\n                } else {\r\n                    reject(error);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ConnectionMessage, IStringDictionary, MessageType } from \"../../common/Exports\";\r\n\r\nexport class ConversationConnectionMessage extends ConnectionMessage {\r\n    private privConversationMessageType: string;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        body: any,\r\n        headers?: IStringDictionary<string>,\r\n        id?: string) {\r\n            super(messageType, body, headers, id);\r\n            const json = JSON.parse(this.textBody);\r\n            if (json.type !== undefined) {\r\n                this.privConversationMessageType = json.type;\r\n            }\r\n    }\r\n\r\n    public get conversationMessageType(): string {\r\n        return this.privConversationMessageType;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionMessage,\r\n    Deferred,\r\n    IStringDictionary,\r\n    IWebsocketMessageFormatter,\r\n    MessageType,\r\n    RawWebsocketMessage,\r\n} from \"../../common/Exports\";\r\nimport { ConversationConnectionMessage } from \"./ConversationConnectionMessage\";\r\n\r\n/**\r\n * Based off WebsocketMessageFormatter. The messages for Conversation Translator have some variations from the Speech messages.\r\n */\r\nexport class ConversationWebsocketMessageFormatter implements IWebsocketMessageFormatter {\r\n\r\n    /**\r\n     * Format incoming messages: text (speech partial/final, IM) or binary (tts)\r\n     */\r\n    public toConnectionMessage = (message: RawWebsocketMessage): Promise<ConversationConnectionMessage> => {\r\n        const deferral = new Deferred<ConversationConnectionMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const incomingMessage: ConversationConnectionMessage = new ConversationConnectionMessage(message.messageType, message.textContent, {}, message.id);\r\n                deferral.resolve(incomingMessage);\r\n            } else if (message.messageType === MessageType.Binary) {\r\n                deferral.resolve(new ConversationConnectionMessage(message.messageType, message.binaryContent, undefined, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. Error: ${e}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n\r\n    /**\r\n     * Format outgoing messages: text (commands or IM)\r\n     */\r\n    public fromConnectionMessage = (message: ConnectionMessage): Promise<RawWebsocketMessage> => {\r\n\r\n        const deferral = new Deferred<RawWebsocketMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const payload = `${message.textBody ? message.textBody : \"\"}`;\r\n                deferral.resolve(new RawWebsocketMessage(MessageType.Text, payload, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. ${e}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ProxyInfo, WebsocketConnection } from \"../../common.browser/Exports\";\r\nimport { createGuid, IConnection, IStringDictionary } from \"../../common/Exports\";\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport { PropertyId } from \"../../sdk/Exports\";\r\nimport { ConnectionFactoryBase } from \"../ConnectionFactoryBase\";\r\nimport { AuthInfo, RecognizerConfig } from \"../Exports\";\r\nimport { ConversationConnectionConfig } from \"./ConversationConnectionConfig\";\r\nimport { ConversationWebsocketMessageFormatter } from \"./ConversationWebsocketMessageFormatter\";\r\n\r\n/**\r\n * Create a connection to the Conversation Translator websocket for sending instant messages and commands, and for receiving translated messages.\r\n * The conversation must already have been started or joined.\r\n */\r\nexport class ConversationConnectionFactory extends ConnectionFactoryBase  {\r\n\r\n    public create(config: RecognizerConfig, authInfo: AuthInfo, connectionId?: string): IConnection {\r\n\r\n        const endpointHost: string = config.parameters.getProperty(PropertyId.ConversationTranslator_Host, ConversationConnectionConfig.host);\r\n        const correlationId: string = config.parameters.getProperty(PropertyId.ConversationTranslator_CorrelationId, createGuid());\r\n\r\n        const endpoint: string = `wss://${endpointHost}${ConversationConnectionConfig.webSocketPath}`;\r\n        const token: string = config.parameters.getProperty(PropertyId.ConversationTranslator_Token, undefined);\r\n        Contracts.throwIfNullOrUndefined(token, \"token\");\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n        queryParams[ConversationConnectionConfig.configParams.apiVersion] = ConversationConnectionConfig.apiVersion;\r\n        queryParams[ConversationConnectionConfig.configParams.token] = token;\r\n        queryParams[ConversationConnectionConfig.configParams.correlationId] = correlationId;\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, {}, new ConversationWebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { CancellationEventArgsBase } from \"../CancellationEventArgsBase\";\r\n\r\nexport class ConversationTranslationCanceledEventArgs extends CancellationEventArgsBase {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { SessionEventArgs } from \"../Exports\";\r\n\r\nexport class ConversationExpirationEventArgs extends SessionEventArgs {\r\n    private privExpirationTime: number;\r\n\r\n    constructor(expirationTime: number, sessionId?: string) {\r\n        super(sessionId);\r\n        this.privExpirationTime = expirationTime;\r\n    }\r\n\r\n    /** How much longer until the conversation expires (in minutes). */\r\n    get expirationTime(): number {\r\n        return this.privExpirationTime;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { PropertyCollection } from \"../PropertyCollection\";\r\nimport { ResultReason } from \"../ResultReason\";\r\nimport { TranslationRecognitionResult } from \"../TranslationRecognitionResult\";\r\nimport { Translations } from \"../Translations\";\r\n\r\nexport class ConversationTranslationResult extends TranslationRecognitionResult {\r\n    private privId: string;\r\n    private privOrigLang: string;\r\n\r\n    public constructor(participantId: string,\r\n                       translations: Translations,\r\n                       originalLanguage?: string,\r\n                       resultId?: string,\r\n                       reason?: ResultReason,\r\n                       text?: string,\r\n                       duration?: number,\r\n                       offset?: number,\r\n                       errorDetails?: string,\r\n                       json?: string,\r\n                       properties?: PropertyCollection) {\r\n        super(translations, resultId, reason, text, duration, offset, errorDetails, json, properties);\r\n        this.privId = participantId;\r\n        this.privOrigLang = originalLanguage;\r\n    }\r\n\r\n    /**\r\n     * The unique identifier for the participant this result is for.\r\n     */\r\n    public get participantId(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    /**\r\n     * The original language this result was in.\r\n     */\r\n    public get originalLang(): string {\r\n        return this.privOrigLang;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    IDetachable,\r\n} from \"../../common/Exports\";\r\n\r\n/**\r\n * Placeholder class for the Conversation Request Session. Based off RequestSession.\r\n * TODO: define what telemetry is required.\r\n */\r\nexport class ConversationRequestSession {\r\n    private privIsDisposed: boolean = false;\r\n    private privDetachables: IDetachable[] = new Array<IDetachable>();\r\n    private privRequestId: string;\r\n    private privRequestCompletionDeferral: Deferred<void>;\r\n    private privSessionId: string;\r\n\r\n    constructor(sessionId: string) {\r\n        this.privSessionId = sessionId;\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privRequestCompletionDeferral = new Deferred<void>();\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get completionPromise(): Promise<void> {\r\n        return this.privRequestCompletionDeferral.promise;\r\n    }\r\n\r\n    public onPreConnectionStart = (authFetchEventId: string, connectionId: string): void => {\r\n        this.privSessionId = connectionId;\r\n    }\r\n\r\n    public onAuthCompleted = (isError: boolean, error?: string): void => {\r\n        if (isError) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onConnectionEstablishCompleted = (statusCode: number, reason?: string): void => {\r\n        if (statusCode === 200) {\r\n            return;\r\n        } else if (statusCode === 403) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onServiceTurnEndResponse = (continuousRecognition: boolean): void => {\r\n        if (!continuousRecognition) {\r\n            this.onComplete();\r\n        } else {\r\n            this.privRequestId = createNoDashGuid();\r\n        }\r\n    }\r\n\r\n    public async dispose(error?: string): Promise<void> {\r\n        if (!this.privIsDisposed) {\r\n            // we should have completed by now. If we did not its an unknown error.\r\n            this.privIsDisposed = true;\r\n            for (const detachable of this.privDetachables) {\r\n                await detachable.detach();\r\n            }\r\n        }\r\n    }\r\n\r\n    private onComplete = (): void => {\r\n        //\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\nimport { SessionEventArgs } from \"../../sdk/Exports\";\r\nimport { IInternalParticipant } from \"./ConversationTranslatorInterfaces\";\r\n\r\nexport class MuteAllEventArgs extends SessionEventArgs {\r\n    private privIsMuted: boolean;\r\n\r\n    public constructor(isMuted: boolean, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privIsMuted = isMuted;\r\n    }\r\n\r\n    public get isMuted(): boolean {\r\n        return this.privIsMuted;\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class LockRoomEventArgs extends SessionEventArgs {\r\n    private privIsLocked: boolean;\r\n\r\n    public constructor(isLocked: boolean, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privIsLocked = isLocked;\r\n    }\r\n\r\n    public get isMuted(): boolean {\r\n        return this.privIsLocked;\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ParticipantEventArgs extends SessionEventArgs {\r\n    private privParticipant: IInternalParticipant;\r\n\r\n    public constructor(participant: IInternalParticipant, sessionId?: string) {\r\n        super(sessionId);\r\n        this.privParticipant = participant;\r\n    }\r\n\r\n    public get participant(): IInternalParticipant {\r\n        return this.privParticipant;\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ParticipantAttributeEventArgs extends SessionEventArgs {\r\n    private privValue: boolean | number | string | string[];\r\n    private privKey: string;\r\n    private privParticipantId: string;\r\n\r\n    public constructor(participantId: string, key: string, value: boolean | number | string |  string[], sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privKey = key;\r\n        this.privValue = value;\r\n        this.privParticipantId = participantId;\r\n    }\r\n\r\n    public get value(): boolean | number | string |  string[] {\r\n        return this.privValue;\r\n    }\r\n\r\n    public get key(): string {\r\n        return this.privKey;\r\n    }\r\n    public get id(): string {\r\n        return this.privParticipantId;\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ParticipantsListEventArgs extends SessionEventArgs {\r\n\r\n    private privRoomId: string;\r\n    private privSessionToken: string;\r\n    private privTranslateTo: string[];\r\n    private privProfanityFilter: string;\r\n    private privRoomProfanityFilter: string;\r\n    private privIsRoomLocked: boolean;\r\n    private privIsMuteAll: boolean;\r\n    private privParticipants: IInternalParticipant[];\r\n\r\n    public constructor(conversationId: string, token: string, translateTo: string[], profanityFilter: string,\r\n                       roomProfanityFilter: string, isRoomLocked: boolean, isMuteAll: boolean, participants: IInternalParticipant[], sessionId?: string) {\r\n        super(sessionId);\r\n        this.privRoomId = conversationId;\r\n        this.privSessionToken = token;\r\n        this.privTranslateTo = translateTo;\r\n        this.privProfanityFilter = profanityFilter;\r\n        this.privRoomProfanityFilter = roomProfanityFilter;\r\n        this.privIsRoomLocked = isRoomLocked;\r\n        this.privIsRoomLocked = isMuteAll;\r\n        this.privParticipants = participants;\r\n    }\r\n    public get sessionToken(): string {\r\n        return this.privSessionToken;\r\n    }\r\n\r\n    public get conversationId(): string {\r\n        return this.privRoomId;\r\n    }\r\n\r\n    public get translateTo(): string[] {\r\n        return this.privTranslateTo;\r\n    }\r\n\r\n    public get profanityFilter(): string {\r\n        return this.privProfanityFilter;\r\n    }\r\n\r\n    public get roomProfanityFilter(): string {\r\n        return this.privRoomProfanityFilter;\r\n    }\r\n\r\n    public get isRoomLocked(): boolean {\r\n        return this.privIsRoomLocked;\r\n    }\r\n\r\n    public get isMuteAll(): boolean {\r\n        return this.privIsMuteAll;\r\n    }\r\n\r\n    public get participants(): IInternalParticipant[] {\r\n        return this.privParticipants;\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ConversationReceivedTranslationEventArgs {\r\n    private privPayload: any;\r\n    private privCommand: string;\r\n    private privSessionId: string;\r\n\r\n    public constructor(command: string, payload: any,  sessionId?: string) {\r\n        this.privPayload = payload;\r\n        this.privCommand = command;\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    public get payload(): any {\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get command(): string {\r\n        return this.privCommand;\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the payload for incoming websocket commands\r\n */\r\nexport interface ICommandResponsePayload {\r\n    type: string;\r\n    command?: string;\r\n    id?: string; // incoming ws\r\n    nickname?: string; // incoming ws\r\n    participantId?: string;\r\n    roomid?: string;\r\n    value: boolean | number | string;\r\n    token?: string;\r\n}\r\n\r\nexport class CommandResponsePayload implements ICommandResponsePayload {\r\n    private privCommandResponse: ICommandResponsePayload;\r\n\r\n    public constructor(json: string) {\r\n        this.privCommandResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): CommandResponsePayload {\r\n        return new CommandResponsePayload(json);\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privCommandResponse.type;\r\n    }\r\n    public get command(): string {\r\n        return this.privCommandResponse.command;\r\n    }\r\n    public get id(): string {\r\n        return this.privCommandResponse.id;\r\n    }\r\n    public get nickname(): string {\r\n        return this.privCommandResponse.nickname;\r\n    }\r\n    public get participantId(): string {\r\n        return this.privCommandResponse.participantId;\r\n    }\r\n    public get roomid(): string {\r\n        return this.privCommandResponse.roomid;\r\n    }\r\n    public get value(): boolean | number | string {\r\n        return this.privCommandResponse.value;\r\n    }\r\n    public get token(): string {\r\n        return this.privCommandResponse.token;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the payload for incoming list of participants\r\n */\r\nexport interface IParticipantsListPayloadResponse {\r\n    roomid: string;\r\n    id: string;\r\n    command: string;\r\n    participants: IParticipantPayloadResponse[];\r\n    token: string;\r\n    translateTo: string[];\r\n    profanityFilter: string;\r\n    roomProfanityFilter: string;\r\n    roomLocked: boolean;\r\n    muteAll: boolean;\r\n    type: string;\r\n}\r\n\r\n/**\r\n * Defines the payload for incoming participant\r\n */\r\nexport interface IParticipantPayloadResponse {\r\n    nickname: string;\r\n    locale: string;\r\n    usetts: boolean;\r\n    ismuted: boolean;\r\n    ishost: boolean;\r\n    participantId: string;\r\n    avatar?: string;\r\n}\r\n\r\nexport class ParticipantsListPayloadResponse implements IParticipantsListPayloadResponse {\r\n    private privParticipantsPayloadResponse: IParticipantsListPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privParticipantsPayloadResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): ParticipantsListPayloadResponse {\r\n        return new ParticipantsListPayloadResponse(json);\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privParticipantsPayloadResponse.roomid;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privParticipantsPayloadResponse.id;\r\n    }\r\n\r\n    public get command(): string {\r\n        return this.privParticipantsPayloadResponse.command;\r\n    }\r\n\r\n    public get participants(): IParticipantPayloadResponse[] {\r\n        return this.privParticipantsPayloadResponse.participants;\r\n    }\r\n\r\n    public get token(): string {\r\n        return this.privParticipantsPayloadResponse.token;\r\n    }\r\n\r\n    public get translateTo(): string[] {\r\n        return this.privParticipantsPayloadResponse.translateTo;\r\n    }\r\n\r\n    public get profanityFilter(): string {\r\n        return this.privParticipantsPayloadResponse.profanityFilter;\r\n    }\r\n\r\n    public get roomProfanityFilter(): string {\r\n        return this.privParticipantsPayloadResponse.roomProfanityFilter;\r\n    }\r\n\r\n    public get roomLocked(): boolean {\r\n        return this.privParticipantsPayloadResponse.roomLocked;\r\n    }\r\n\r\n    public get muteAll(): boolean {\r\n        return this.privParticipantsPayloadResponse.muteAll;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privParticipantsPayloadResponse.type;\r\n    }\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ParticipantPayloadResponse implements IParticipantPayloadResponse {\r\n\r\n    private privParticipantPayloadResponse: IParticipantPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privParticipantPayloadResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): ParticipantPayloadResponse {\r\n        return new ParticipantPayloadResponse(json);\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privParticipantPayloadResponse.nickname;\r\n    }\r\n\r\n    public get locale(): string {\r\n        return this.privParticipantPayloadResponse.locale;\r\n    }\r\n\r\n    public get usetts(): boolean {\r\n        return this.privParticipantPayloadResponse.usetts;\r\n    }\r\n\r\n    public get ismuted(): boolean {\r\n        return this.privParticipantPayloadResponse.ismuted;\r\n    }\r\n\r\n    public get ishost(): boolean {\r\n        return this.privParticipantPayloadResponse.ishost;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privParticipantPayloadResponse.participantId;\r\n    }\r\n\r\n    public get avatar(): string {\r\n        return this.privParticipantPayloadResponse.avatar;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the payload for incoming translation messages\r\n */\r\nexport interface ITranslationResponsePayload {\r\n    lang: string;\r\n    translation: string;\r\n}\r\n\r\nexport interface ITranslationCommandMessage {\r\n    translations: ITranslationResponsePayload[];\r\n    id: string;\r\n    language: string;\r\n    nickname: string;\r\n    participantId: string;\r\n    roomid: string;\r\n    timestamp: string;\r\n    type: string;\r\n}\r\n\r\nexport interface ISpeechResponsePayload extends ITranslationCommandMessage {\r\n    recognition: string;\r\n    isFinal: boolean;\r\n}\r\n\r\nexport interface ITextResponsePayload extends ITranslationCommandMessage {\r\n    originalText: string;\r\n}\r\n\r\nexport class SpeechResponsePayload implements ISpeechResponsePayload {\r\n\r\n    private privSpeechResponse: ISpeechResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechResponsePayload {\r\n        return new SpeechResponsePayload(json);\r\n    }\r\n\r\n    public get recognition(): string {\r\n        return this.privSpeechResponse.recognition;\r\n    }\r\n\r\n    public get translations(): ITranslationResponsePayload[] {\r\n        return this.privSpeechResponse.translations;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privSpeechResponse.id;\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privSpeechResponse.language;\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privSpeechResponse.nickname;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privSpeechResponse.participantId;\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privSpeechResponse.roomid;\r\n    }\r\n\r\n    public get timestamp(): string {\r\n        return this.privSpeechResponse.timestamp;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privSpeechResponse.type;\r\n    }\r\n\r\n    public get isFinal(): boolean {\r\n        return this.privSpeechResponse.type === \"final\";\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class TextResponsePayload implements ITextResponsePayload {\r\n\r\n    private privTextResponse: ITextResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privTextResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): TextResponsePayload {\r\n        return new TextResponsePayload(json);\r\n    }\r\n\r\n    public get originalText(): string {\r\n        return this.privTextResponse.originalText;\r\n    }\r\n\r\n    public get translations(): ITranslationResponsePayload[] {\r\n        return this.privTextResponse.translations;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privTextResponse.id;\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privTextResponse.language;\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privTextResponse.nickname;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privTextResponse.participantId;\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privTextResponse.roomid;\r\n    }\r\n\r\n    public get timestamp(): string {\r\n        return this.privTextResponse.timestamp;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privTextResponse.type;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionMessage,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    IAudioSource,\r\n    IConnection,\r\n    MessageType,\r\n} from \"../../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ConversationExpirationEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    ConversationTranslationResult,\r\n    Translations\r\n} from \"../../sdk/Exports\";\r\nimport {\r\n    CognitiveTokenAuthentication,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase\r\n} from \"../Exports\";\r\nimport { ConversationConnectionMessage } from \"./ConversationConnectionMessage\";\r\nimport { ConversationRequestSession } from \"./ConversationRequestSession\";\r\nimport {\r\n    ConversationReceivedTranslationEventArgs,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs\r\n} from \"./ConversationTranslatorEventArgs\";\r\nimport {\r\n    ConversationTranslatorCommandTypes,\r\n    ConversationTranslatorMessageTypes,\r\n    IInternalParticipant\r\n} from \"./ConversationTranslatorInterfaces\";\r\nimport { ConversationTranslatorRecognizer } from \"./ConversationTranslatorRecognizer\";\r\nimport {\r\n    CommandResponsePayload,\r\n    IParticipantPayloadResponse,\r\n    IParticipantsListPayloadResponse,\r\n    ITranslationResponsePayload,\r\n    ParticipantPayloadResponse,\r\n    ParticipantsListPayloadResponse,\r\n    SpeechResponsePayload,\r\n    TextResponsePayload\r\n} from \"./ServiceMessages/Exports\";\r\n\r\n/***\r\n * The service adapter handles sending and receiving messages to the Conversation Translator websocket.\r\n */\r\nexport class ConversationServiceAdapter extends ServiceRecognizerBase {\r\n    private privConversationServiceConnector: ConversationTranslatorRecognizer;\r\n    private privConversationConnectionFactory: IConnectionFactory;\r\n    private privConversationAuthFetchEventId: string;\r\n    private privConversationAuthentication: IAuthentication;\r\n    private privConversationRequestSession: ConversationRequestSession;\r\n    private privConnectionConfigPromise: Promise<IConnection>;\r\n    private privConnectionLoop: Promise<void>;\r\n    private terminateMessageLoop: boolean;\r\n    private privLastPartialUtteranceId: string = \"\";\r\n    private privConversationIsDisposed: boolean;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        conversationServiceConnector: ConversationTranslatorRecognizer) {\r\n\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, conversationServiceConnector);\r\n\r\n        this.privConversationServiceConnector = conversationServiceConnector;\r\n        this.privConversationAuthentication = authentication;\r\n        this.receiveMessageOverride = this.receiveConversationMessageOverride;\r\n        this.recognizeOverride = this.noOp;\r\n        this.postConnectImplOverride = this.conversationConnectImpl;\r\n        this.configConnectionOverride = this.configConnection;\r\n        this.disconnectOverride = this.privDisconnect;\r\n        this.privConversationRequestSession = new ConversationRequestSession(createNoDashGuid());\r\n        this.privConversationConnectionFactory = connectionFactory;\r\n        this.privConversationIsDisposed = false;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return super.isDisposed() || this.privConversationIsDisposed;\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        this.privConversationIsDisposed = true;\r\n        if (this.privConnectionConfigPromise) {\r\n            const connection: IConnection = await this.privConnectionConfigPromise;\r\n            await connection.dispose(reason);\r\n        }\r\n        await super.dispose(reason);\r\n    }\r\n\r\n    public async sendMessage(message: string): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        return connection.send(new ConversationConnectionMessage(\r\n            MessageType.Text,\r\n            message));\r\n    }\r\n\r\n    public async sendMessageAsync(message: string): Promise<void> {\r\n        const sink: Deferred<void> = new Deferred<void>();\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n\r\n        await connection.send(new ConversationConnectionMessage(MessageType.Text, message));\r\n    }\r\n\r\n    protected privDisconnect(): Promise<void> {\r\n        if (this.terminateMessageLoop) {\r\n            return;\r\n        }\r\n        this.cancelRecognition(this.privConversationRequestSession.sessionId,\r\n            this.privConversationRequestSession.requestId,\r\n            CancellationReason.Error,\r\n            CancellationErrorCode.NoError,\r\n            \"Disconnecting\");\r\n\r\n        this.terminateMessageLoop = true;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(\r\n        connectionMessage: ConnectionMessage,\r\n        successCallback?: (e: any) => void,\r\n        errorCallBack?: (e: string) => void): Promise<boolean> {\r\n        return true;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        this.terminateMessageLoop = true;\r\n\r\n        const cancelEvent: ConversationTranslationCanceledEventArgs = new ConversationTranslationCanceledEventArgs(\r\n            cancellationReason,\r\n            error,\r\n            errorCode,\r\n            undefined,\r\n            sessionId);\r\n\r\n        try {\r\n            if (!!this.privConversationServiceConnector.canceled) {\r\n                this.privConversationServiceConnector.canceled(this.privConversationServiceConnector, cancelEvent);\r\n            }\r\n        } catch {\r\n            // continue on error\r\n        }\r\n    }\r\n\r\n    protected noOp = (): any => {\r\n        // operation not supported\r\n    }\r\n\r\n    /**\r\n     * Establishes a websocket connection to the end point.\r\n     */\r\n    protected async conversationConnectImpl(connection: Promise<IConnection>): Promise<IConnection> {\r\n        this.privConnectionLoop = this.startMessageLoop();\r\n        return connection;\r\n    }\r\n\r\n    /**\r\n     * Process incoming websocket messages\r\n     */\r\n    private async receiveConversationMessageOverride(): Promise<void> {\r\n        if (this.isDisposed() || this.terminateMessageLoop) {\r\n            return Promise.resolve();\r\n        }\r\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\r\n        const communicationCustodian: Deferred<void> = new Deferred<void>();\r\n\r\n        try {\r\n            const connection: IConnection = await this.fetchConnection();\r\n            const message: ConversationConnectionMessage = await connection.read() as ConversationConnectionMessage;\r\n            if (this.isDisposed() || this.terminateMessageLoop) {\r\n                // We're done.\r\n                communicationCustodian.resolve();\r\n                return Promise.resolve();\r\n            }\r\n\r\n            if (!message) {\r\n                return this.receiveConversationMessageOverride();\r\n            }\r\n\r\n            const sessionId: string = this.privConversationRequestSession.sessionId;\r\n            let sendFinal: boolean = false;\r\n\r\n            try {\r\n                switch (message.conversationMessageType.toLowerCase()) {\r\n                    case \"info\":\r\n                    case \"participant_command\":\r\n                    case \"command\":\r\n                        const commandPayload: CommandResponsePayload = CommandResponsePayload.fromJSON(message.textBody);\r\n                        switch (commandPayload.command.toLowerCase()) {\r\n\r\n                            /**\r\n                             * 'ParticpantList' is the first message sent to the user after the websocket connection has opened.\r\n                             * The consuming client must wait for this message to arrive\r\n                             * before starting to send their own data.\r\n                             */\r\n                            case \"participantlist\":\r\n\r\n                                const participantsPayload: IParticipantsListPayloadResponse = ParticipantsListPayloadResponse.fromJSON(message.textBody);\r\n\r\n                                const participantsResult: IInternalParticipant[] = participantsPayload.participants.map((p: IParticipantPayloadResponse) => {\r\n                                    const participant: IInternalParticipant = {\r\n                                        avatar: p.avatar,\r\n                                        displayName: p.nickname,\r\n                                        id: p.participantId,\r\n                                        isHost: p.ishost,\r\n                                        isMuted: p.ismuted,\r\n                                        isUsingTts: p.usetts,\r\n                                        preferredLanguage: p.locale\r\n                                    };\r\n                                    return participant;\r\n                                });\r\n\r\n                                if (!!this.privConversationServiceConnector.participantsListReceived) {\r\n                                    this.privConversationServiceConnector.participantsListReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantsListEventArgs(participantsPayload.roomid, participantsPayload.token,\r\n                                            participantsPayload.translateTo, participantsPayload.profanityFilter,\r\n                                            participantsPayload.roomProfanityFilter, participantsPayload.roomLocked,\r\n                                            participantsPayload.muteAll, participantsResult, sessionId));\r\n                                }\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetTranslateToLanguages' represents the list of languages being used in the Conversation by all users(?).\r\n                             * This is sent at the start of the Conversation\r\n                             */\r\n                            case \"settranslatetolanguages\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setTranslateToLanguages,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetProfanityFiltering' lets the client set the level of profanity filtering.\r\n                             * If sent by the participant the setting will effect only their own profanity level.\r\n                             * If sent by the host, the setting will effect all participants including the host.\r\n                             * Note: the profanity filters differ from Speech Service (?): 'marked', 'raw', 'removed', 'tagged'\r\n                             */\r\n                            case \"setprofanityfiltering\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setProfanityFiltering,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetMute' is sent if the participant has been muted by the host.\r\n                             * Check the 'participantId' to determine if the current user has been muted.\r\n                             */\r\n                            case \"setmute\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setMute,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetMuteAll' is sent if the Conversation has been muted by the host.\r\n                             */\r\n                            case \"setmuteall\":\r\n\r\n                                if (!!this.privConversationServiceConnector.muteAllCommandReceived) {\r\n                                    this.privConversationServiceConnector.muteAllCommandReceived(this.privConversationServiceConnector,\r\n                                        new MuteAllEventArgs(commandPayload.value as boolean, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'RoomExpirationWarning' is sent towards the end of the Conversation session to give a timeout warning.\r\n                             */\r\n                            case \"roomexpirationwarning\":\r\n\r\n                                if (!!this.privConversationServiceConnector.conversationExpiration) {\r\n                                    this.privConversationServiceConnector.conversationExpiration(this.privConversationServiceConnector,\r\n                                        new ConversationExpirationEventArgs(commandPayload.value as number, this.privConversationRequestSession.sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetUseTts' is sent as a confirmation if the user requests TTS to be turned on or off.\r\n                             */\r\n                            case \"setusetts\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setUseTTS,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetLockState' is set if the host has locked or unlocked the Conversation.\r\n                             */\r\n                            case \"setlockstate\":\r\n\r\n                                if (!!this.privConversationServiceConnector.lockRoomCommandReceived) {\r\n                                    this.privConversationServiceConnector.lockRoomCommandReceived(this.privConversationServiceConnector,\r\n                                        new LockRoomEventArgs(commandPayload.value as boolean, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'ChangeNickname' is received if a user changes their display name.\r\n                             * Any cached particpiants list should be updated to reflect the display name.\r\n                             */\r\n                            case \"changenickname\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.changeNickname,\r\n                                            commandPayload.nickname, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'JoinSession' is sent when a user joins the Conversation.\r\n                             */\r\n                            case \"joinsession\":\r\n\r\n                                const joinParticipantPayload: ParticipantPayloadResponse = ParticipantPayloadResponse.fromJSON(message.textBody);\r\n\r\n                                const joiningParticipant: IInternalParticipant = {\r\n                                    avatar: joinParticipantPayload.avatar,\r\n                                    displayName: joinParticipantPayload.nickname,\r\n                                    id: joinParticipantPayload.participantId,\r\n                                    isHost: joinParticipantPayload.ishost,\r\n                                    isMuted: joinParticipantPayload.ismuted,\r\n                                    isUsingTts: joinParticipantPayload.usetts,\r\n                                    preferredLanguage: joinParticipantPayload.locale,\r\n                                };\r\n\r\n                                if (!!this.privConversationServiceConnector.participantJoinCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantJoinCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantEventArgs(\r\n                                            joiningParticipant,\r\n                                            sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'LeaveSession' is sent when a user leaves the Conversation'.\r\n                             */\r\n                            case \"leavesession\":\r\n\r\n                                const leavingParticipant: IInternalParticipant = {\r\n                                    id: commandPayload.participantId\r\n                                };\r\n\r\n                                if (!!this.privConversationServiceConnector.participantLeaveCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantLeaveCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantEventArgs(leavingParticipant, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'DisconnectSession' is sent when a user is disconnected from the session (e.g. network problem).\r\n                             * Check the 'ParticipantId' to check whether the message is for the current user.\r\n                             */\r\n                            case \"disconnectsession\":\r\n\r\n                                const disconnectParticipant: IInternalParticipant = {\r\n                                    id: commandPayload.participantId\r\n                                };\r\n\r\n                                break;\r\n\r\n                            case \"token\":\r\n                                const token = new CognitiveTokenAuthentication(\r\n                                    (authFetchEventId: string): Promise<string> => {\r\n                                        const authorizationToken = commandPayload.token;\r\n                                        return Promise.resolve(authorizationToken);\r\n                                    },\r\n                                    (authFetchEventId: string): Promise<string> => {\r\n                                        const authorizationToken = commandPayload.token;\r\n                                        return Promise.resolve(authorizationToken);\r\n                                    });\r\n                                this.authentication = token;\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * Message not recognized.\r\n                             */\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n\r\n                    /**\r\n                     * 'partial' (or 'hypothesis') represents a unfinalized speech message.\r\n                     */\r\n                    case \"partial\":\r\n\r\n                    /**\r\n                     * 'final' (or 'phrase') represents a finalized speech message.\r\n                     */\r\n                    case \"final\":\r\n\r\n                        const speechPayload: SpeechResponsePayload = SpeechResponsePayload.fromJSON(message.textBody);\r\n\r\n                        const speechResult: ConversationTranslationResult = new ConversationTranslationResult(speechPayload.participantId,\r\n                            this.getTranslations(speechPayload.translations),\r\n                            speechPayload.language,\r\n                            undefined,\r\n                            undefined,\r\n                            speechPayload.recognition,\r\n                            undefined,\r\n                            undefined,\r\n                            message.textBody,\r\n                            undefined);\r\n\r\n                        if (speechPayload.isFinal) {\r\n                            // check the length, sometimes empty finals are returned\r\n                            if (speechResult.text !== undefined && speechResult.text.length > 0) {\r\n                                sendFinal = true;\r\n                            } else if (speechPayload.id === this.privLastPartialUtteranceId) {\r\n                                // send final as normal. We had a non-empty partial for this same utterance\r\n                                // so sending the empty final is important\r\n                                sendFinal = true;\r\n                            } else {\r\n                                // suppress unneeded final\r\n                            }\r\n\r\n                            if (sendFinal) {\r\n                                if (!!this.privConversationServiceConnector.translationReceived) {\r\n                                    this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector,\r\n                                        new ConversationReceivedTranslationEventArgs(ConversationTranslatorMessageTypes.final, speechResult, sessionId));\r\n                                }\r\n                            }\r\n                        } else if (speechResult.text !== undefined) {\r\n                            this.privLastPartialUtteranceId = speechPayload.id;\r\n                            if (!!this.privConversationServiceConnector.translationReceived) {\r\n                                this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector,\r\n                                    new ConversationReceivedTranslationEventArgs(ConversationTranslatorMessageTypes.partial, speechResult, sessionId));\r\n                            }\r\n                        }\r\n\r\n                        break;\r\n\r\n                    /**\r\n                     * \"translated_message\" is a text message or instant message (IM).\r\n                     */\r\n                    case \"translated_message\":\r\n\r\n                        const textPayload: TextResponsePayload = TextResponsePayload.fromJSON(message.textBody);\r\n\r\n                        const textResult: ConversationTranslationResult = new ConversationTranslationResult(textPayload.participantId,\r\n                            this.getTranslations(textPayload.translations),\r\n                            textPayload.language,\r\n                            undefined,\r\n                            undefined,\r\n                            textPayload.originalText,\r\n                            undefined,\r\n                            undefined,\r\n                            undefined,\r\n                            message.textBody,\r\n                            undefined);\r\n\r\n                        if (!!this.privConversationServiceConnector.translationReceived) {\r\n                            this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector,\r\n                                new ConversationReceivedTranslationEventArgs(ConversationTranslatorMessageTypes.instantMessage, textResult, sessionId));\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        // ignore any unsupported message types\r\n                        break;\r\n                }\r\n            } catch (e) {\r\n                // continue\r\n            }\r\n            return this.receiveConversationMessageOverride();\r\n        } catch (e) {\r\n            this.terminateMessageLoop = true;\r\n        }\r\n\r\n        return communicationCustodian.promise;\r\n    }\r\n\r\n    private async startMessageLoop(): Promise<void> {\r\n        if (this.isDisposed()) {\r\n            return Promise.resolve();\r\n        }\r\n        this.terminateMessageLoop = false;\r\n\r\n        const messageRetrievalPromise = this.receiveConversationMessageOverride();\r\n\r\n        try {\r\n            const r = await messageRetrievalPromise;\r\n            return r;\r\n        } catch (error) {\r\n            this.cancelRecognition(this.privRequestSession ? this.privRequestSession.sessionId : \"\", this.privRequestSession ? this.privRequestSession.requestId : \"\", CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint\r\n    private configConnection(): Promise<IConnection> {\r\n        if (this.isDisposed()) {\r\n            return Promise.resolve<IConnection>(undefined);\r\n        }\r\n        if (this.privConnectionConfigPromise) {\r\n            return this.privConnectionConfigPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionConfigPromise = null;\r\n                    return this.configConnection();\r\n                }\r\n                return this.privConnectionConfigPromise;\r\n            }, (error: string): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionConfigPromise = null;\r\n                return this.configConnection();\r\n            });\r\n        }\r\n        if (this.terminateMessageLoop) {\r\n            return Promise.resolve<IConnection>(undefined);\r\n        }\r\n\r\n        this.privConnectionConfigPromise = this.connectImpl().then((connection: IConnection): any => {\r\n            return connection;\r\n        });\r\n\r\n        return this.privConnectionConfigPromise;\r\n    }\r\n\r\n    private getTranslations(serviceResultTranslations: ITranslationResponsePayload[]): Translations {\r\n        let translations: Translations;\r\n\r\n        if (undefined !== serviceResultTranslations) {\r\n            translations = new Translations();\r\n            for (const translation of serviceResultTranslations) {\r\n                translations.set(translation.lang, translation.translation);\r\n            }\r\n        }\r\n\r\n        return translations;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig\r\n} from \"../../common.speech/Exports\";\r\nimport {\r\n    BackgroundEvent,\r\n    Events,\r\n    Timeout\r\n} from \"../../common/Exports\";\r\nimport { AudioConfigImpl } from \"../../sdk/Audio/AudioConfig\";\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    Connection,\r\n    ConnectionEventArgs,\r\n    ConversationExpirationEventArgs,\r\n    ConversationParticipantsChangedEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    PropertyCollection,\r\n    Recognizer,\r\n    SessionEventArgs,\r\n    SpeechTranslationConfig\r\n} from \"../../sdk/Exports\";\r\nimport { SpeechTranslationConfigImpl } from \"../../sdk/SpeechTranslationConfig\";\r\nimport { ConversationImpl } from \"../../sdk/Transcription/Conversation\";\r\nimport { Callback, IConversation } from \"../../sdk/Transcription/IConversation\";\r\nimport { ConversationConnectionFactory } from \"./ConversationConnectionFactory\";\r\nimport { ConversationServiceAdapter } from \"./ConversationServiceAdapter\";\r\nimport {\r\n    ConversationReceivedTranslationEventArgs,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs\r\n} from \"./ConversationTranslatorEventArgs\";\r\nimport {\r\n    ConversationRecognizer,\r\n    ConversationTranslatorMessageTypes\r\n} from \"./ConversationTranslatorInterfaces\";\r\n\r\nexport class ConversationRecognizerFactory {\r\n    public static fromConfig(conversation: IConversation, speechConfig: SpeechTranslationConfig, audioConfig?: AudioConfig): ConversationRecognizer {\r\n        return new ConversationTranslatorRecognizer(conversation, speechConfig, audioConfig);\r\n    }\r\n}\r\n\r\n/**\r\n * Sends messages to the Conversation Translator websocket and listens for incoming events containing websocket messages.\r\n * Based off the recognizers in the SDK folder.\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class ConversationTranslatorRecognizer extends Recognizer implements ConversationRecognizer {\r\n\r\n    private privIsDisposed: boolean;\r\n    private privSpeechRecognitionLanguage: string;\r\n    private privConnection: Connection;\r\n    private privConversation: ConversationImpl;\r\n    private privTimeoutToken: any;\r\n    private privSetTimeout: (cb: () => void, delay: number) => number;\r\n    private privClearTimeout: (id: number) => void;\r\n\r\n    public constructor(conversation: IConversation, speechConfig: SpeechTranslationConfig, audioConfig?: AudioConfig) {\r\n        const serviceConfigImpl = speechConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(serviceConfigImpl, \"speechConfig\");\r\n        const conversationImpl = conversation as ConversationImpl;\r\n        Contracts.throwIfNull(conversationImpl, \"conversationImpl\");\r\n\r\n        super(audioConfig, serviceConfigImpl.properties, new ConversationConnectionFactory());\r\n\r\n        this.privConversation = conversationImpl;\r\n        this.privIsDisposed = false;\r\n        this.privProperties = serviceConfigImpl.properties.clone();\r\n        this.privConnection = Connection.fromRecognizer(this);\r\n        this.privSetTimeout = (typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") ? Timeout.setTimeout : setTimeout;\r\n        this.privClearTimeout = (typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") ? Timeout.clearTimeout : clearTimeout;\r\n    }\r\n\r\n    public canceled: (sender: ConversationRecognizer, event: ConversationTranslationCanceledEventArgs) => void;\r\n    public conversationExpiration: (sender: ConversationRecognizer, event: ConversationExpirationEventArgs) => void;\r\n    public lockRoomCommandReceived: (sender: ConversationRecognizer, event: LockRoomEventArgs) => void;\r\n    public muteAllCommandReceived: (sender: ConversationRecognizer, event: MuteAllEventArgs) => void;\r\n    public participantJoinCommandReceived: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    public participantLeaveCommandReceived: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    public participantUpdateCommandReceived: (sender: ConversationRecognizer, event: ParticipantAttributeEventArgs) => void;\r\n    public connectionOpened: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    public connectionClosed: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    public translationReceived: (sender: ConversationRecognizer, event: ConversationReceivedTranslationEventArgs) => void;\r\n    public participantsListReceived: (sender: ConversationRecognizer, event: ParticipantsListEventArgs) => void;\r\n    public participantsChanged: (sender: ConversationRecognizer, event: ConversationParticipantsChangedEventArgs) => void;\r\n\r\n    public set connected(cb: (e: ConnectionEventArgs) => void) {\r\n        this.privConnection.connected = cb;\r\n    }\r\n\r\n    public set disconnected(cb: (e: ConnectionEventArgs) => void) {\r\n        this.privConnection.disconnected = cb;\r\n    }\r\n\r\n    /**\r\n     * Return the speech language used by the recognizer\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechRecognitionLanguage;\r\n    }\r\n\r\n    /**\r\n     * Return the properties for the recognizer\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    /**\r\n     * Connect to the recognizer\r\n     * @param token\r\n     */\r\n    public connect(token: string, cb?: () => void, err?: (e: string) => void): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n            this.privReco.conversationTranslatorToken = token;\r\n            this.resetConversationTimeout();\r\n            this.privReco.connectAsync(cb, err);\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disconnect from the recognizer\r\n     */\r\n    public disconnect(cb?: () => void, err?: (e: string) => void): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            if (this.privTimeoutToken !== undefined) {\r\n               this.privClearTimeout(this.privTimeoutToken);\r\n            }\r\n            this.privReco.disconnect().then(() => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string) => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error);\r\n                }\r\n            }\r\n            // Destroy the recognizer.\r\n            this.dispose(true).catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send the mute all participants command to the websocket\r\n     * @param conversationId\r\n     * @param participantId\r\n     * @param isMuted\r\n     */\r\n    public sendRequest(command: string, cb?: () => void, err?: (e: string) => void): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            this.sendMessage(command, cb, err);\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error);\r\n                }\r\n            }\r\n\r\n            // Destroy the recognizer.\r\n            this.dispose(true).catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Close and dispose the recognizer\r\n     */\r\n    public async close(): Promise<void> {\r\n        if (!this.privIsDisposed) {\r\n            this.privConnection?.closeConnection();\r\n            this.privConnection?.close();\r\n            this.privConnection = undefined;\r\n            await this.dispose(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dispose the recognizer\r\n     * @param disposing\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privIsDisposed) {\r\n            return;\r\n        }\r\n        if (disposing) {\r\n            if (this.privTimeoutToken !== undefined) {\r\n                this.privClearTimeout(this.privTimeoutToken);\r\n            }\r\n            this.privIsDisposed = true;\r\n            if (!!this.privConnection) {\r\n                this.privConnection.closeConnection();\r\n                this.privConnection.close();\r\n                this.privConnection = undefined;\r\n            }\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create the config for the recognizer\r\n     * @param speechConfig\r\n     */\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    /**\r\n     * Create the service recognizer.\r\n     * The audio source is redundnant here but is required by the implementation.\r\n     * @param authentication\r\n     * @param connectionFactory\r\n     * @param audioConfig\r\n     * @param recognizerConfig\r\n     */\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n\r\n        const audioSource: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n\r\n        return new ConversationServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\r\n    }\r\n\r\n    private sendMessage(msg: string, cb?: Callback, err?: Callback): void {\r\n        const withAsync = this.privReco as ConversationServiceAdapter;\r\n        function PromiseToEmptyCallback<T>(promise: Promise<T>, cb?: Callback, err?: Callback): void {\r\n            if (!!promise) {\r\n                promise.then((result: T): void => {\r\n                    try {\r\n                        if (!!cb) {\r\n                            cb();\r\n                        }\r\n                    } catch (e) {\r\n                        if (!!err) {\r\n                            err(`'Unhandled error on promise callback: ${e}'`);\r\n                        }\r\n                    }\r\n                }, (reason: any) => {\r\n                    try {\r\n                        if (!!err) {\r\n                            err(reason);\r\n                        }\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                    }\r\n                });\r\n            } else {\r\n                if (!!err) {\r\n                    err(\"Null promise\");\r\n                }\r\n            }\r\n        }\r\n\r\n        PromiseToEmptyCallback(withAsync.sendMessageAsync(msg), cb, err);\r\n        this.resetConversationTimeout();\r\n    }\r\n\r\n    private resetConversationTimeout(): void {\r\n        if (this.privTimeoutToken !== undefined) {\r\n            this.privClearTimeout(this.privTimeoutToken);\r\n        }\r\n\r\n        this.privTimeoutToken = this.privSetTimeout((): void => {\r\n            this.sendRequest(this.privConversation.getKeepAlive());\r\n        }, 60000);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { SessionEventArgs } from \"../Exports\";\r\nimport { ParticipantChangedReason } from \"./Exports\";\r\nimport { IParticipant } from \"./IParticipant\";\r\n\r\nexport class ConversationParticipantsChangedEventArgs extends SessionEventArgs {\r\n    private privReason: ParticipantChangedReason;\r\n    private privParticipant: IParticipant[];\r\n\r\n    public constructor(reason: ParticipantChangedReason, participants: IParticipant[], sessionId?: string) {\r\n        super(sessionId);\r\n        this.privReason = reason;\r\n        this.privParticipant = participants;\r\n    }\r\n\r\n    public get reason(): ParticipantChangedReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get participants(): IParticipant[] {\r\n        return this.privParticipant;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { RecognitionEventArgs } from \"../Exports\";\r\nimport { ConversationTranslationResult } from \"./Exports\";\r\n\r\nexport class ConversationTranslationEventArgs extends RecognitionEventArgs {\r\n    private privResult: ConversationTranslationResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {ConversationTranslationResult} result - The translation recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: ConversationTranslationResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @returns {ConversationTranslationResult} the recognition result.\r\n     */\r\n    public get result(): ConversationTranslationResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { ConversationConnectionConfig } from \"../../common.speech/Exports\";\r\nimport {\r\n    IDisposable,\r\n    IErrorMessages,\r\n    marshalPromiseToCallbacks\r\n} from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SessionEventArgs,\r\n    SpeechTranslationConfig,\r\n    TranslationRecognitionCanceledEventArgs,\r\n    TranslationRecognitionEventArgs,\r\n    TranslationRecognizer\r\n} from \"../Exports\";\r\nimport { ConversationImpl } from \"./Conversation\";\r\nimport {\r\n    ConversationCommon,\r\n    ConversationExpirationEventArgs,\r\n    ConversationHandler,\r\n    ConversationParticipantsChangedEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    ConversationTranslationEventArgs,\r\n    IConversationTranslator,\r\n    Participant,\r\n} from \"./Exports\";\r\nimport { Callback, IConversation } from \"./IConversation\";\r\n\r\nexport enum SpeechState {\r\n    Inactive, Connecting, Connected\r\n}\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\n// child class of TranslationRecognizer meant only for use with ConversationTranslator\r\nclass ConversationTranslationRecognizer extends TranslationRecognizer {\r\n    private privTranslator: ConversationTranslator;\r\n    private privSpeechState: SpeechState;\r\n    public constructor(speechConfig: SpeechTranslationConfig, audioConfig?: AudioConfig, translator?: ConversationTranslator) {\r\n        super(speechConfig, audioConfig);\r\n        this.privSpeechState = SpeechState.Inactive;\r\n        if (!!translator) {\r\n            this.privTranslator = translator;\r\n            this.sessionStarted = () => {\r\n                this.privSpeechState = SpeechState.Connected;\r\n            };\r\n\r\n            this.sessionStopped = () => {\r\n                this.privSpeechState = SpeechState.Inactive;\r\n            };\r\n\r\n            this.recognized = async (tr: TranslationRecognizer, e: TranslationRecognitionEventArgs) => {\r\n                // TODO: add support for getting recognitions from here if own speech\r\n\r\n                // if there is an error connecting to the conversation service from the speech service the error will be returned in the ErrorDetails field.\r\n                if (e.result?.errorDetails) {\r\n                    await this.cancelSpeech();\r\n                    // TODO: format the error message contained in 'errorDetails'\r\n                    this.fireCancelEvent(e.result.errorDetails);\r\n                }\r\n            };\r\n\r\n            this.canceled = async (r: TranslationRecognizer, e: TranslationRecognitionCanceledEventArgs) => {\r\n                if (this.privSpeechState !== SpeechState.Inactive) {\r\n                    try {\r\n                        await this.cancelSpeech();\r\n                    } catch (error) {\r\n                        this.privSpeechState = SpeechState.Inactive;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n    public get state(): SpeechState {\r\n        return this.privSpeechState;\r\n    }\r\n\r\n    public set state(newState: SpeechState) {\r\n        this.privSpeechState = newState;\r\n    }\r\n\r\n    public onConnection(): void {\r\n        this.privSpeechState = SpeechState.Connected;\r\n    }\r\n\r\n    public async onDisconnection(): Promise<void> {\r\n        this.privSpeechState = SpeechState.Inactive;\r\n        await this.cancelSpeech();\r\n    }\r\n\r\n    /**\r\n     * Fire a cancel event\r\n     * @param error\r\n     */\r\n    private fireCancelEvent(error: any): void {\r\n        try {\r\n            if (!!this.privTranslator.canceled) {\r\n                const cancelEvent: ConversationTranslationCanceledEventArgs = new ConversationTranslationCanceledEventArgs(\r\n                    error?.reason ?? CancellationReason.Error,\r\n                    error?.errorDetails ?? error,\r\n                    error?.errorCode ?? CancellationErrorCode.RuntimeError,\r\n                    undefined,\r\n                    error?.sessionId);\r\n\r\n                this.privTranslator.canceled(this.privTranslator, cancelEvent);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private async cancelSpeech(): Promise<void> {\r\n        try {\r\n            this.stopContinuousRecognitionAsync();\r\n            await this.privReco?.disconnect();\r\n            this.privSpeechState = SpeechState.Inactive;\r\n        } catch (e) {\r\n            // ignore the error\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/***\r\n * Join, leave or connect to a conversation.\r\n */\r\nexport class ConversationTranslator extends ConversationCommon implements IConversationTranslator, IDisposable {\r\n\r\n    private privSpeechRecognitionLanguage: string;\r\n    private privProperties: PropertyCollection;\r\n    private privIsDisposed: boolean = false;\r\n    private privCTRecognizer: ConversationTranslationRecognizer;\r\n    private privIsSpeaking: boolean = false;\r\n    private privConversation: ConversationImpl;\r\n    private privErrors: IErrorMessages = ConversationConnectionConfig.restErrors;\r\n    private privPlaceholderKey: string = \"abcdefghijklmnopqrstuvwxyz012345\";\r\n    private privPlaceholderRegion: string = \"westus\";\r\n\r\n    public constructor(audioConfig?: AudioConfig) {\r\n        super(audioConfig);\r\n        this.privProperties = new PropertyCollection();\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechRecognitionLanguage;\r\n    }\r\n\r\n    public get participants(): Participant[] {\r\n        return this.privConversation?.participants;\r\n    }\r\n\r\n    public canceled: (sender: ConversationHandler, event: ConversationTranslationCanceledEventArgs) => void;\r\n    public conversationExpiration: (sender: IConversationTranslator, event: ConversationExpirationEventArgs) => void;\r\n    public participantsChanged: (sender: IConversationTranslator, event: ConversationParticipantsChangedEventArgs) => void;\r\n    public sessionStarted: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n    public sessionStopped: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n    public textMessageReceived: (sender: IConversationTranslator, event: ConversationTranslationEventArgs) => void;\r\n    public transcribed: (sender: IConversationTranslator, event: ConversationTranslationEventArgs) => void;\r\n    public transcribing: (sender: IConversationTranslator, event: ConversationTranslationEventArgs) => void;\r\n\r\n    /**\r\n     * Join a conversation. If this is the host, pass in the previously created Conversation object.\r\n     * @param conversation\r\n     * @param nickname\r\n     * @param lang\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public joinConversationAsync(conversation: IConversation, nickname: string, cb?: Callback, err?: Callback): void;\r\n    public joinConversationAsync(conversationId: string, nickname: string, lang: string, cb?: Callback, err?: Callback): void;\r\n    public joinConversationAsync(conversation: any, nickname: string, param1?: string | Callback, param2?: Callback, param3?: Callback): void {\r\n\r\n        try {\r\n\r\n            if (typeof conversation === \"string\") {\r\n\r\n                Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\r\n                Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n\r\n                if (!!this.privConversation) {\r\n                    this.handleError(new Error(this.privErrors.permissionDeniedStart), param3);\r\n                }\r\n\r\n                let lang: string = param1 as string;\r\n                if (lang === undefined || lang === null || lang === \"\") { lang = ConversationConnectionConfig.defaultLanguageCode; }\r\n\r\n                // create a placeholder config\r\n                this.privSpeechTranslationConfig = SpeechTranslationConfig.fromSubscription(\r\n                    this.privPlaceholderKey,\r\n                    this.privPlaceholderRegion);\r\n                this.privSpeechTranslationConfig.setProfanity(ProfanityOption.Masked);\r\n                this.privSpeechTranslationConfig.addTargetLanguage(lang);\r\n                this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage], lang);\r\n                this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.ConversationTranslator_Name], nickname);\r\n\r\n                const endpoint: string = this.privProperties.getProperty(PropertyId.ConversationTranslator_Host);\r\n                if (endpoint) {\r\n                    this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.ConversationTranslator_Host], endpoint);\r\n                }\r\n                const speechEndpointHost: string = this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Host);\r\n                if (speechEndpointHost) {\r\n                    this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_Host], speechEndpointHost);\r\n                }\r\n\r\n                // join the conversation\r\n                this.privConversation = new ConversationImpl(this.privSpeechTranslationConfig);\r\n                this.privConversation.conversationTranslator = this;\r\n\r\n                this.privConversation.joinConversationAsync(\r\n                    conversation,\r\n                    nickname,\r\n                    lang,\r\n                    ((result: string) => {\r\n\r\n                        if (!result) {\r\n                            this.handleError(new Error(this.privErrors.permissionDeniedConnect), param3);\r\n                        }\r\n\r\n                        this.privSpeechTranslationConfig.authorizationToken = result;\r\n\r\n                        // connect to the ws\r\n                        this.privConversation.startConversationAsync(\r\n                            (() => {\r\n                                this.handleCallback(param2, param3);\r\n                            }),\r\n                            ((error: any) => {\r\n                                this.handleError(error, param3);\r\n                            }));\r\n\r\n                    }),\r\n                    ((error: any) => {\r\n                        this.handleError(error, param3);\r\n                    }));\r\n\r\n            } else if (typeof conversation === \"object\") {\r\n\r\n                Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\r\n                Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n\r\n                // save the nickname\r\n                this.privProperties.setProperty(PropertyId.ConversationTranslator_Name, nickname);\r\n                // ref the conversation object\r\n                this.privConversation = conversation as ConversationImpl;\r\n                // ref the conversation translator object\r\n                this.privConversation.conversationTranslator = this;\r\n\r\n                Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedConnect);\r\n                Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\r\n\r\n                this.privSpeechTranslationConfig = conversation.config;\r\n\r\n                this.handleCallback(param1 as Callback, param2);\r\n            } else {\r\n                this.handleError(\r\n                    new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"invalid conversation type\")),\r\n                    param2);\r\n            }\r\n\r\n        } catch (error) {\r\n            this.handleError(error, typeof param1 === \"string\" ? param3 : param2);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Leave the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public leaveConversationAsync(cb?: Callback, err?: Callback): void {\r\n\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n\r\n            // stop the speech websocket\r\n            await this.cancelSpeech();\r\n            // stop the websocket\r\n            await this.privConversation.endConversationImplAsync();\r\n            // https delete request\r\n            await this.privConversation.deleteConversationImplAsync();\r\n            this.dispose();\r\n\r\n        })(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Send a text message\r\n     * @param message\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public sendTextMessageAsync(message: string, cb?: Callback, err?: Callback): void {\r\n\r\n        try {\r\n            Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\r\n            Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", message));\r\n\r\n            this.privConversation?.sendTextMessageAsync(message, cb, err);\r\n        } catch (error) {\r\n\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Start speaking\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public startTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n            try {\r\n                Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\r\n                Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\r\n\r\n                if (this.privCTRecognizer === undefined) {\r\n                    await this.connectTranslatorRecognizer();\r\n                }\r\n                Contracts.throwIfNullOrUndefined(this.privCTRecognizer, this.privErrors.permissionDeniedSend);\r\n\r\n                if (!this.canSpeak) {\r\n                    this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n                }\r\n\r\n                await this.startContinuousRecognition();\r\n\r\n                this.privIsSpeaking = true;\r\n            } catch (error) {\r\n                this.privIsSpeaking = false;\r\n                await this.cancelSpeech();\r\n                throw error;\r\n            }\r\n        })(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stop speaking\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public stopTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n            try {\r\n                if (!this.privIsSpeaking) {\r\n                    // stop speech\r\n                    await this.cancelSpeech();\r\n                    return;\r\n                }\r\n\r\n                // stop the recognition but leave the websocket open\r\n                this.privIsSpeaking = false;\r\n                await new Promise((resolve: () => void, reject: (error: string) => void): void => {\r\n                    this.privCTRecognizer?.stopContinuousRecognitionAsync(resolve, reject);\r\n                });\r\n\r\n            } catch (error) {\r\n                await this.cancelSpeech();\r\n            }\r\n        })(), cb, err);\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public dispose(reason?: string, success?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n            if (this.isDisposed && !this.privIsSpeaking) {\r\n                return;\r\n            }\r\n            await this.cancelSpeech();\r\n            this.privIsDisposed = true;\r\n            this.privSpeechTranslationConfig?.close();\r\n            this.privSpeechRecognitionLanguage = undefined;\r\n            this.privProperties = undefined;\r\n            this.privAudioConfig = undefined;\r\n            this.privSpeechTranslationConfig = undefined;\r\n            this.privConversation?.dispose();\r\n            this.privConversation = undefined;\r\n        })(), success, err);\r\n    }\r\n\r\n    /**\r\n     * Cancel the speech websocket\r\n     */\r\n    private async cancelSpeech(): Promise<void> {\r\n        try {\r\n            this.privIsSpeaking = false;\r\n            await this.privCTRecognizer?.onDisconnection();\r\n            this.privCTRecognizer = undefined;\r\n        } catch (e) {\r\n            // ignore the error\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Connect to the speech translation recognizer.\r\n     * Currently there is no language validation performed before sending the SpeechLanguage code to the service.\r\n     * If it's an invalid language the raw error will be: 'Error during WebSocket handshake: Unexpected response code: 400'\r\n     * e.g. pass in 'fr' instead of 'fr-FR', or a text-only language 'cy'\r\n     */\r\n    private async connectTranslatorRecognizer(): Promise<void> {\r\n        try {\r\n\r\n            if (this.privAudioConfig === undefined) {\r\n                this.privAudioConfig = AudioConfig.fromDefaultMicrophoneInput();\r\n            }\r\n\r\n            // clear the temp subscription key if it's a participant joining\r\n            if (this.privSpeechTranslationConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Key])\r\n                === this.privPlaceholderKey) {\r\n                this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_Key], \"\");\r\n            }\r\n\r\n            // TODO\r\n            const token: string = encodeURIComponent(this.privConversation.room.token);\r\n\r\n            let endpointHost: string = this.privSpeechTranslationConfig.getProperty(\r\n                PropertyId[PropertyId.SpeechServiceConnection_Host], ConversationConnectionConfig.speechHost);\r\n            endpointHost = endpointHost.replace(\"{region}\", this.privConversation.room.cognitiveSpeechRegion);\r\n\r\n            const url: string = `wss://${endpointHost}${ConversationConnectionConfig.speechPath}?${ConversationConnectionConfig.configParams.token}=${token}`;\r\n\r\n            this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_Endpoint], url);\r\n\r\n            this.privCTRecognizer = new ConversationTranslationRecognizer(this.privSpeechTranslationConfig, this.privAudioConfig, this);\r\n        } catch (error) {\r\n            await this.cancelSpeech();\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle the start speaking request\r\n     */\r\n    private startContinuousRecognition(): Promise<void> {\r\n        return new Promise((resolve: () => void, reject: (error: string) => void): void => {\r\n            this.privCTRecognizer.startContinuousRecognitionAsync(resolve, reject);\r\n        });\r\n    }\r\n\r\n    private get canSpeak(): boolean {\r\n\r\n        // is there a Conversation websocket available and has the Recognizer been set up\r\n        if (!this.privConversation.isConnected || !this.privCTRecognizer) {\r\n            return false;\r\n        }\r\n\r\n        // is the user already speaking\r\n        if (this.privIsSpeaking || this.privCTRecognizer.state === SpeechState.Connected || this.privCTRecognizer.state === SpeechState.Connecting) {\r\n            return false;\r\n        }\r\n\r\n        // is the user muted\r\n        if (this.privConversation.isMutedByHost) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { PropertyCollection } from \"../Exports\";\r\n\r\n/**\r\n * Represents a user in a conversation.\r\n * Added in version 1.4.0\r\n */\r\nexport interface IUser {\r\n    /** Gets the user's ID */\r\n    readonly userId: string;\r\n}\r\n\r\nexport class User implements IUser {\r\n    private privUserId: string;\r\n\r\n    constructor(userId: string) {\r\n        this.privUserId = userId;\r\n    }\r\n\r\n    public get userId(): string {\r\n        return this.privUserId;\r\n    }\r\n}\r\n\r\nexport interface VoiceSignature {\r\n    Version: number;\r\n    Tag: string;\r\n    Data: string;\r\n}\r\n\r\nexport interface TranscriptionParticipant {\r\n    /** The unique identifier for the participant. */\r\n    readonly id: string;\r\n    /** The participant's preferred spoken language. */\r\n    readonly preferredLanguage: string;\r\n    /** The participant's voice signature */\r\n    readonly voice: string;\r\n}\r\n\r\n/**\r\n * Represents a participant in a conversation.\r\n * Added in version 1.4.0\r\n */\r\nexport interface IParticipant extends TranscriptionParticipant {\r\n    /** Gets the colour of the user's avatar as an HTML hex string (e.g. FF0000 for red). */\r\n    readonly avatar: string;\r\n    /**\r\n     * The participant's display name. Please note that there may be more than one participant\r\n     * with the same name. You can use <see cref=\"Id\"/> property to tell them apart.\r\n     */\r\n    readonly displayName: string;\r\n    /** Gets whether or not this participant is the host. */\r\n    readonly isHost: boolean;\r\n    /** Gets whether or not this participant is muted. */\r\n    readonly isMuted: boolean;\r\n    /** Gets whether or not the participant is using Text To Speech (TTS). */\r\n    readonly isUsingTts: boolean;\r\n    /** Contains properties of the participant. */\r\n    readonly properties: PropertyCollection;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class Participant implements IParticipant {\r\n    private privAvatar: string;\r\n    private privDisplayName: string;\r\n    private privId: string;\r\n    private privIsHost: boolean;\r\n    private privIsMuted: boolean;\r\n    private privIsUsingTts: boolean;\r\n    private privPreferredLanguage: string;\r\n    private privVoice: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    constructor(id: string, avatar: string, displayName: string, isHost: boolean, isMuted: boolean, isUsingTts: boolean, preferredLanguage: string, voice?: string) {\r\n        this.privId = id;\r\n        this.privAvatar = avatar;\r\n        this.privDisplayName = displayName;\r\n        this.privIsHost = isHost;\r\n        this.privIsMuted = isMuted;\r\n        this.privIsUsingTts = isUsingTts;\r\n        this.privPreferredLanguage = preferredLanguage;\r\n        this.privVoice = voice;\r\n        this.privProperties = new PropertyCollection();\r\n    }\r\n\r\n    public static From(id: string, language: string, voice: string): IParticipant {\r\n        return new Participant(id, \"\", id, false, false, false, language, voice);\r\n    }\r\n\r\n    public get avatar(): string {\r\n        return this.privAvatar;\r\n    }\r\n\r\n    public get displayName(): string {\r\n        return this.privDisplayName;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public get preferredLanguage(): string {\r\n        return this.privPreferredLanguage;\r\n    }\r\n\r\n    public get isHost(): boolean {\r\n        return this.privIsHost;\r\n    }\r\n\r\n    public get isMuted(): boolean {\r\n        return this.privIsMuted;\r\n    }\r\n\r\n    public get isUsingTts(): boolean {\r\n        return this.privIsUsingTts;\r\n    }\r\n\r\n    public get voice(): string {\r\n        return this.privVoice;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport {\r\n    ConversationConnectionConfig,\r\n    ConversationManager,\r\n    ConversationReceivedTranslationEventArgs,\r\n    ConversationRecognizer,\r\n    ConversationRecognizerFactory,\r\n    ConversationTranslatorCommandTypes,\r\n    ConversationTranslatorMessageTypes,\r\n    IInternalConversation,\r\n    IInternalParticipant,\r\n    InternalParticipants,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs,\r\n    TranscriberRecognizer\r\n} from \"../../common.speech/Exports\";\r\nimport {\r\n    IDisposable,\r\n    IErrorMessages,\r\n    marshalPromiseToCallbacks\r\n} from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    Connection,\r\n    ConnectionEventArgs,\r\n    ConversationExpirationEventArgs,\r\n    ConversationParticipantsChangedEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    ConversationTranslationEventArgs,\r\n    ConversationTranslator,\r\n    Participant,\r\n    ParticipantChangedReason,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SpeechTranslationConfig,\r\n} from \"../Exports\";\r\nimport { SpeechTranslationConfigImpl } from \"../SpeechTranslationConfig\";\r\nimport { Callback, ConversationInfo, IConversation } from \"./IConversation\";\r\nimport { IParticipant, IUser, TranscriptionParticipant } from \"./IParticipant\";\r\n\r\nexport abstract class Conversation implements IConversation {\r\n\r\n    public abstract get authorizationToken(): string;\r\n    public abstract set authorizationToken(value: string);\r\n\r\n    public abstract get config(): SpeechTranslationConfig;\r\n\r\n    public abstract get conversationId(): string;\r\n    public abstract get conversationInfo(): ConversationInfo;\r\n    public abstract get properties(): PropertyCollection;\r\n    public abstract get speechRecognitionLanguage(): string;\r\n    public abstract get participants(): Participant[];\r\n    public abstract get isConnected(): boolean;\r\n\r\n    protected constructor() { }\r\n\r\n    /**\r\n     * Create a conversation\r\n     * @param speechConfig\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public static createConversationAsync(speechConfig: SpeechTranslationConfig, arg2?: string | Callback, arg3?: Callback, arg4?: Callback): Conversation {\r\n        Contracts.throwIfNullOrUndefined(speechConfig, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"config\"));\r\n        Contracts.throwIfNullOrUndefined(speechConfig.region, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Region\"));\r\n        if (!speechConfig.subscriptionKey && !speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceAuthorization_Token])) {\r\n            Contracts.throwIfNullOrUndefined(speechConfig.subscriptionKey, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Key\"));\r\n        }\r\n        let conversationImpl: ConversationImpl;\r\n        let cb: Callback;\r\n        let err: Callback;\r\n        if (typeof arg2 === \"string\") {\r\n            conversationImpl = new ConversationImpl(speechConfig, arg2);\r\n            cb = arg3;\r\n            err = arg4;\r\n        } else {\r\n            conversationImpl = new ConversationImpl(speechConfig);\r\n            cb = arg2;\r\n            err = arg3;\r\n        }\r\n        conversationImpl.createConversationAsync(\r\n            (() => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }),\r\n            (error: any) => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        return conversationImpl;\r\n\r\n    }\r\n\r\n    /** Start a conversation. */\r\n    public abstract startConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Delete a conversation. After this no one will be able to join the conversation. */\r\n    public abstract deleteConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** End a conversation. */\r\n    public abstract endConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Lock a conversation. This will prevent new participants from joining. */\r\n    public abstract lockConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Add Participant to Conversation. */\r\n    public abstract addParticipantAsync(participant: IParticipant, cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Mute all other participants in the conversation. After this no other participants will\r\n     * have their speech recognitions broadcast, nor be able to send text messages.\r\n     */\r\n    public abstract muteAllParticipantsAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Mute a participant.\r\n     * @param userId A user identifier\r\n     */\r\n    public abstract muteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Remove a participant from a conversation using the user id, Participant or User object\r\n     * @param userId A user identifier\r\n     */\r\n    public abstract removeParticipantAsync(userId: string | IParticipant | IUser, cb?: Callback, err?: Callback): void;\r\n\r\n    /** Unlocks a conversation. */\r\n    public abstract unlockConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Unmute all other participants in the conversation. */\r\n    public abstract unmuteAllParticipantsAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Unmute a participant.\r\n     * @param userId A user identifier\r\n     */\r\n    public abstract unmuteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void;\r\n}\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class ConversationImpl extends Conversation implements IDisposable {\r\n\r\n    private privConfig: SpeechTranslationConfig;\r\n    private privProperties: PropertyCollection;\r\n    private privLanguage: string;\r\n    private privToken: string;\r\n    private privIsDisposed: boolean = false;\r\n    private privRoom: IInternalConversation;\r\n    private privManager: ConversationManager;\r\n    private privConversationRecognizer: ConversationRecognizer;\r\n    private privIsConnected: boolean = false;\r\n    private privParticipants: InternalParticipants;\r\n    private privIsReady: boolean;\r\n    private privConversationTranslator: ConversationTranslator;\r\n    private privTranscriberRecognizer: TranscriberRecognizer;\r\n    private privErrors: IErrorMessages = ConversationConnectionConfig.restErrors;\r\n    private privConversationId: string = \"\";\r\n    private readonly privTextMessageMaxLength: number;\r\n\r\n    public set conversationTranslator(conversationTranslator: ConversationTranslator) {\r\n        this.privConversationTranslator = conversationTranslator;\r\n    }\r\n\r\n    // get the internal data about a conversation\r\n    public get room(): IInternalConversation {\r\n        return this.privRoom;\r\n    }\r\n\r\n    // get the wrapper for connecting to the websockets\r\n    public get connection(): ConversationRecognizer {\r\n        return this.privConversationRecognizer; // this.privConnection;\r\n    }\r\n\r\n    // get / set the speech auth token\r\n    public get authorizationToken(): string {\r\n        return this.privToken;\r\n    }\r\n\r\n    public set authorizationToken(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"authorizationToken\");\r\n        this.privToken = value;\r\n    }\r\n\r\n    // get the config\r\n    public get config(): SpeechTranslationConfig {\r\n        return this.privConfig;\r\n    }\r\n\r\n    // get the conversation Id\r\n    public get conversationId(): string {\r\n        return this.privRoom ? this.privRoom.roomId : this.privConversationId;\r\n    }\r\n\r\n    // get the properties\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    // get the speech language\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    public get isMutedByHost(): boolean {\r\n        return this.privParticipants.me?.isHost ? false : this.privParticipants.me?.isMuted;\r\n    }\r\n\r\n    public get isConnected(): boolean {\r\n        return this.privIsConnected && this.privIsReady;\r\n    }\r\n\r\n    public get participants(): Participant[] {\r\n        return this.toParticipants(true);\r\n    }\r\n\r\n    public get me(): Participant {\r\n        return this.toParticipant(this.privParticipants.me);\r\n    }\r\n\r\n    public get host(): Participant {\r\n        return this.toParticipant(this.privParticipants.host);\r\n    }\r\n\r\n    /**\r\n     * Create a conversation impl\r\n     * @param speechConfig\r\n     * @param {string} id - optional conversationId\r\n     */\r\n    public constructor(speechConfig: SpeechTranslationConfig, id?: string) {\r\n        super();\r\n        this.privProperties = new PropertyCollection();\r\n        this.privManager = new ConversationManager();\r\n\r\n        // check the speech language\r\n        const language: string = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n        if (!language) {\r\n            speechConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage], ConversationConnectionConfig.defaultLanguageCode);\r\n        }\r\n        this.privLanguage = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        if (!id) {\r\n            // check the target language(s)\r\n            if (speechConfig.targetLanguages.length === 0) {\r\n                speechConfig.addTargetLanguage(this.privLanguage);\r\n            }\r\n\r\n            // check the profanity setting: speech and conversationTranslator should be in sync\r\n            const profanity: string = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceResponse_ProfanityOption]);\r\n            if (!profanity) {\r\n                speechConfig.setProfanity(ProfanityOption.Masked);\r\n            }\r\n            // check the nickname: it should pass this regex: ^\\w+([\\s-][\\w\\(\\)]+)*$\"\r\n            // TODO: specify the regex required. Nicknames must be unique or get the duplicate nickname error\r\n            // TODO: check what the max length is and if a truncation is required or if the service handles it without an error\r\n            let hostNickname: string = speechConfig.getProperty(PropertyId[PropertyId.ConversationTranslator_Name]);\r\n            if (hostNickname === undefined || hostNickname === null || hostNickname.length <= 1 || hostNickname.length > 50) {\r\n                hostNickname = \"Host\";\r\n            }\r\n            speechConfig.setProperty(PropertyId[PropertyId.ConversationTranslator_Name], hostNickname);\r\n\r\n        } else {\r\n            this.privConversationId = id;\r\n        }\r\n\r\n        // save the speech config for future usage\r\n        this.privConfig = speechConfig;\r\n\r\n        // save the config properties\r\n        const configImpl = speechConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(configImpl, \"speechConfig\");\r\n        this.privProperties = configImpl.properties.clone();\r\n        this.privIsConnected = false;\r\n        this.privParticipants = new InternalParticipants();\r\n        this.privIsReady = false;\r\n        this.privTextMessageMaxLength = 1000;\r\n    }\r\n\r\n    /**\r\n     * Create a new conversation as Host\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public createConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            if (!!this.privConversationRecognizer) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\r\n            }\r\n            this.privManager.createOrJoin(this.privProperties, undefined,\r\n                ((room: IInternalConversation) => {\r\n                    if (!room) {\r\n                        this.handleError(new Error(this.privErrors.permissionDeniedConnect), err);\r\n                    }\r\n                    this.privRoom = room;\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts a new conversation as host.\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public startConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            // check if there is already a recognizer\r\n            if (!!this.privConversationRecognizer) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\r\n            }\r\n            // check if there is conversation data available\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedConnect);\r\n            // connect to the conversation websocket\r\n            this.privParticipants.meId = this.privRoom.participantId;\r\n            this.privConversationRecognizer = ConversationRecognizerFactory.fromConfig(this, this.privConfig);\r\n\r\n            // Because ConversationTranslator manually sets up and manages the connection, Conversation\r\n            // has to forward serviceRecognizer connection events that usually get passed automatically\r\n            this.privConversationRecognizer.connected = this.onConnected;\r\n            this.privConversationRecognizer.disconnected = this.onDisconnected;\r\n            this.privConversationRecognizer.canceled = this.onCanceled;\r\n\r\n            this.privConversationRecognizer.participantUpdateCommandReceived = this.onParticipantUpdateCommandReceived;\r\n            this.privConversationRecognizer.lockRoomCommandReceived = this.onLockRoomCommandReceived;\r\n            this.privConversationRecognizer.muteAllCommandReceived = this.onMuteAllCommandReceived;\r\n            this.privConversationRecognizer.participantJoinCommandReceived = this.onParticipantJoinCommandReceived;\r\n            this.privConversationRecognizer.participantLeaveCommandReceived = this.onParticipantLeaveCommandReceived;\r\n            this.privConversationRecognizer.translationReceived = this.onTranslationReceived;\r\n            this.privConversationRecognizer.participantsListReceived = this.onParticipantsListReceived;\r\n            this.privConversationRecognizer.conversationExpiration = this.onConversationExpiration;\r\n\r\n            this.privConversationRecognizer.connect(this.privRoom.token,\r\n                (() => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Join a conversation as a participant.\r\n     * @param { IParticipant } participant - participant to add\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public addParticipantAsync(participant: IParticipant, cb?: Callback, err?: Callback): void {\r\n        Contracts.throwIfNullOrUndefined(participant, \"Participant\");\r\n        marshalPromiseToCallbacks(this.addParticipantImplAsync(participant), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Join a conversation as a participant.\r\n     * @param conversation\r\n     * @param nickname\r\n     * @param lang\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public joinConversationAsync(conversationId: string, nickname: string, lang: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            // TODO\r\n            // if (!!this.privConversationRecognizer) {\r\n            //     throw new Error(this.privErrors.permissionDeniedStart);\r\n            // }\r\n            Contracts.throwIfNullOrWhitespace(conversationId, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversationId\"));\r\n            Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n            Contracts.throwIfNullOrWhitespace(lang, this.privErrors.invalidArgs.replace(\"{arg}\", \"language\"));\r\n            // join the conversation\r\n            this.privManager.createOrJoin(this.privProperties, conversationId,\r\n                ((room: IInternalConversation) => {\r\n                    Contracts.throwIfNullOrUndefined(room, this.privErrors.permissionDeniedConnect);\r\n                    this.privRoom = room;\r\n                    this.privConfig.authorizationToken = room.cognitiveSpeechAuthToken;\r\n                    // join callback\r\n                    if (!!cb) {\r\n                        cb(room.cognitiveSpeechAuthToken);\r\n                    }\r\n                }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes a conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public deleteConversationAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks(this.deleteConversationImplAsync(), cb, err);\r\n    }\r\n\r\n    public async deleteConversationImplAsync(): Promise<void> {\r\n            Contracts.throwIfNullOrUndefined(this.privProperties, this.privErrors.permissionDeniedConnect);\r\n            Contracts.throwIfNullOrWhitespace(this.privRoom.token, this.privErrors.permissionDeniedConnect);\r\n            await this.privManager.leave(this.privProperties, this.privRoom.token);\r\n\r\n            this.dispose();\r\n    }\r\n\r\n    /**\r\n     * Issues a request to close the client websockets\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public endConversationAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks(this.endConversationImplAsync(), cb, err);\r\n    }\r\n\r\n    public endConversationImplAsync(): Promise<void> {\r\n        return this.close(true);\r\n    }\r\n\r\n    /**\r\n     * Issues a request to lock the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public lockConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"lock\")), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getLockCommand(true),\r\n                (() => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to mute the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public muteAllParticipantsAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privConversationRecognizer, this.privErrors.permissionDeniedSend);\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            // check the user's permissions\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"mute\")), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getMuteAllCommand(true),\r\n                (() => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to mute a participant in the conversation\r\n     * @param userId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public muteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            // check the connection is open (host + participant can perform the mute command)\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            // if not host, check the participant is not muting another participant\r\n            if (!this.me.isHost && this.me.id !== userId) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\r\n            }\r\n            // check the user exists\r\n            const exists: number = this.privParticipants.getParticipantIndex(userId);\r\n            if (exists === -1) {\r\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getMuteCommand(userId, true), (() => {\r\n                this.handleCallback(cb, err);\r\n            }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to remove a participant from the conversation\r\n     * @param userId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public removeParticipantAsync(userId: string | IParticipant | IUser, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            if (!!this.privTranscriberRecognizer && userId.hasOwnProperty(\"id\")) {\r\n                // Assume this is a transcription participant\r\n                marshalPromiseToCallbacks(this.removeParticipantImplAsync(userId as IParticipant), cb, err);\r\n            } else {\r\n                Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n                Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n                if (!this.canSendAsHost) {\r\n                    this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"remove\")), err);\r\n                }\r\n                let participantId: string = \"\";\r\n                if (typeof userId === \"string\") {\r\n                    participantId = userId as string;\r\n                } else if (userId.hasOwnProperty(\"id\")) {\r\n                    const participant: IParticipant = userId as IParticipant;\r\n                    participantId = participant.id;\r\n                } else if (userId.hasOwnProperty(\"userId\")) {\r\n                    const user: IUser = userId as IUser;\r\n                    participantId = user.userId;\r\n                }\r\n                Contracts.throwIfNullOrWhitespace(participantId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\r\n                // check the participant exists\r\n                const index: number = this.participants.findIndex((p: Participant) => p.id === participantId);\r\n                if (index === -1) {\r\n                    this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\r\n                }\r\n                this.privConversationRecognizer?.sendRequest(this.getEjectCommand(participantId), (() => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                    ((error: any) => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to unlock the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public unlockConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unlock\")), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getLockCommand(false), (() => {\r\n                this.handleCallback(cb, err);\r\n            }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to unmute all participants in the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public unmuteAllParticipantsAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unmute all\")), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getMuteAllCommand(false), (() => {\r\n                this.handleCallback(cb, err);\r\n            }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to unmute a participant in the conversation\r\n     * @param userId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public unmuteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            // check the connection is open (host + participant can perform the mute command)\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            // if not host, check the participant is not muting another participant\r\n            if (!this.me.isHost && this.me.id !== userId) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\r\n            }\r\n            // check the user exists\r\n            const exists: number = this.privParticipants.getParticipantIndex(userId);\r\n            if (exists === -1) {\r\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getMuteCommand(userId, false), (() => {\r\n                this.handleCallback(cb, err);\r\n            }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send a text message\r\n     * @param message\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public sendTextMessageAsync(message: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", \"message\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            // TODO: is a max length check required?\r\n            if (message.length > this.privTextMessageMaxLength) {\r\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"message length\")), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getMessageCommand(message), (() => {\r\n                this.handleCallback(cb, err);\r\n            }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change nickname\r\n     * @param message\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public changeNicknameAsync(nickname: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getChangeNicknameCommand(nickname), (() => {\r\n                this.handleCallback(cb, err);\r\n            }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public dispose(reason?: string): void {\r\n        if (this.isDisposed) {\r\n            return;\r\n        }\r\n        this.privIsDisposed = true;\r\n        this.config?.close();\r\n        this.privConfig = undefined;\r\n        this.privLanguage = undefined;\r\n        this.privProperties = undefined;\r\n        this.privRoom = undefined;\r\n        this.privToken = undefined;\r\n        this.privManager = undefined;\r\n        this.privIsConnected = false;\r\n        this.privIsReady = false;\r\n        this.privParticipants = undefined;\r\n    }\r\n\r\n    public get transcriberRecognizer(): TranscriberRecognizer {\r\n        return this.privTranscriberRecognizer;\r\n    }\r\n\r\n    public async connectTranscriberRecognizer(recognizer: TranscriberRecognizer): Promise<void> {\r\n        if (!!this.privTranscriberRecognizer) {\r\n            await this.privTranscriberRecognizer.close();\r\n        }\r\n        this.privTranscriberRecognizer = recognizer;\r\n        this.privTranscriberRecognizer.conversation = this;\r\n    }\r\n\r\n    public get conversationInfo(): ConversationInfo {\r\n        const convId: string = this.conversationId;\r\n        const p: TranscriptionParticipant[] = this.participants.map((part: Participant) => {\r\n            return {\r\n                id: part.id,\r\n                preferredLanguage: part.preferredLanguage,\r\n                voice: part.voice\r\n            };\r\n        });\r\n        const props: { [id: string]: string } = {};\r\n        for (const key of ConversationConnectionConfig.transcriptionEventKeys) {\r\n            const val: string = this.properties.getProperty(key, \"\");\r\n            if (val !== \"\") {\r\n                props[key] = val;\r\n            }\r\n        }\r\n        const info: ConversationInfo = { id: convId, participants: p, conversationProperties: props };\r\n        return info;\r\n    }\r\n\r\n    public getKeepAlive(): string {\r\n        const nickname: string = (!!this.me) ? this.me.displayName : \"default_nickname\";\r\n        return JSON.stringify({\r\n            // tslint:disable-next-line: object-literal-shorthand\r\n            id: \"0\",\r\n            nickname,\r\n            participantId: this.privRoom.participantId,\r\n            roomId: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.keepAlive\r\n        });\r\n    }\r\n\r\n    /** websocket callbacks */\r\n    private onConnected = (e: ConnectionEventArgs): void => {\r\n        this.privIsConnected = true;\r\n        try {\r\n            if (!!this.privConversationTranslator?.sessionStarted) {\r\n                this.privConversationTranslator.sessionStarted(this.privConversationTranslator, e);\r\n            }\r\n            if (!!this.privTranscriberRecognizer?.conversationStarted) {\r\n                this.privTranscriberRecognizer.conversationStarted(this.privTranscriberRecognizer, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onDisconnected = async (e: ConnectionEventArgs): Promise<void> => {\r\n        try {\r\n            if (!!this.privConversationTranslator?.sessionStopped) {\r\n                this.privConversationTranslator.sessionStopped(this.privConversationTranslator, e);\r\n            }\r\n            if (!!this.privTranscriberRecognizer?.conversationStopped) {\r\n                this.privTranscriberRecognizer.conversationStopped(this.privTranscriberRecognizer, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        } finally {\r\n            await this.close(false);\r\n        }\r\n    }\r\n\r\n    private onCanceled = async (r: ConversationRecognizer, e: ConversationTranslationCanceledEventArgs): Promise<void> => {\r\n        try {\r\n            if (!!this.privConversationTranslator?.canceled) {\r\n                this.privConversationTranslator.canceled(this.privConversationTranslator, e);\r\n            }\r\n            if (!!this.privTranscriberRecognizer?.conversationCanceled) {\r\n                this.privTranscriberRecognizer.conversationCanceled(this.privTranscriberRecognizer, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onParticipantUpdateCommandReceived = (r: ConversationRecognizer, e: ParticipantAttributeEventArgs): void => {\r\n        try {\r\n            const updatedParticipant: any = this.privParticipants.getParticipant(e.id);\r\n            if (updatedParticipant !== undefined) {\r\n\r\n                switch (e.key) {\r\n                    case ConversationTranslatorCommandTypes.changeNickname:\r\n                        updatedParticipant.displayName = e.value;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setUseTTS:\r\n                        updatedParticipant.useTts = e.value;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setProfanityFiltering:\r\n                        updatedParticipant.profanity = e.value;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setMute:\r\n                        updatedParticipant.isMuted = e.value;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setTranslateToLanguages:\r\n                        updatedParticipant.translateToLanguages = e.value;\r\n                        break;\r\n                }\r\n                this.privParticipants.addOrUpdateParticipant(updatedParticipant);\r\n\r\n                if (!!this.privConversationTranslator?.participantsChanged) {\r\n                    this.privConversationTranslator?.participantsChanged(\r\n                        this.privConversationTranslator,\r\n                        new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.Updated,\r\n                            [this.toParticipant(updatedParticipant)], e.sessionId));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onLockRoomCommandReceived = (r: ConversationRecognizer, e: LockRoomEventArgs): void => {\r\n        // TODO\r\n    }\r\n\r\n    private onMuteAllCommandReceived = (r: ConversationRecognizer, e: MuteAllEventArgs): void => {\r\n        try {\r\n            this.privParticipants.participants.forEach((p: IInternalParticipant) => p.isMuted = (p.isHost ? false : e.isMuted));\r\n            if (!!this.privConversationTranslator?.participantsChanged) {\r\n                this.privConversationTranslator?.participantsChanged(\r\n                    this.privConversationTranslator,\r\n                    new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.Updated,\r\n                        this.toParticipants(false), e.sessionId));\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onParticipantJoinCommandReceived = (r: ConversationRecognizer, e: ParticipantEventArgs): void => {\r\n        try {\r\n            const newParticipant: IInternalParticipant = this.privParticipants.addOrUpdateParticipant(e.participant);\r\n            if (newParticipant !== undefined) {\r\n                if (!!this.privConversationTranslator?.participantsChanged) {\r\n                    this.privConversationTranslator?.participantsChanged(\r\n                        this.privConversationTranslator,\r\n                        new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.JoinedConversation,\r\n                            [this.toParticipant(newParticipant)], e.sessionId));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onParticipantLeaveCommandReceived = (r: ConversationRecognizer, e: ParticipantEventArgs): void => {\r\n        try {\r\n            const ejectedParticipant: IInternalParticipant = this.privParticipants.getParticipant(e.participant.id);\r\n            if (ejectedParticipant !== undefined) {\r\n                // remove the participant from the internal participants list\r\n                this.privParticipants.deleteParticipant(e.participant.id);\r\n                if (!!this.privConversationTranslator?.participantsChanged) {\r\n                    // notify subscribers that the participant has left the conversation\r\n                    this.privConversationTranslator?.participantsChanged(\r\n                        this.privConversationTranslator,\r\n                        new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.LeftConversation,\r\n                            [this.toParticipant(ejectedParticipant)], e.sessionId));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onTranslationReceived = (r: ConversationRecognizer, e: ConversationReceivedTranslationEventArgs): void => {\r\n        try {\r\n            switch (e.command) {\r\n                case ConversationTranslatorMessageTypes.final:\r\n                    if (!!this.privConversationTranslator?.transcribed) {\r\n                        this.privConversationTranslator?.transcribed(\r\n                            this.privConversationTranslator,\r\n                            new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\r\n                    }\r\n                    break;\r\n                case ConversationTranslatorMessageTypes.partial:\r\n                    if (!!this.privConversationTranslator?.transcribing) {\r\n                        this.privConversationTranslator?.transcribing(\r\n                            this.privConversationTranslator,\r\n                            new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\r\n                    }\r\n                    break;\r\n                case ConversationTranslatorMessageTypes.instantMessage:\r\n                    if (!!this.privConversationTranslator?.textMessageReceived) {\r\n                        this.privConversationTranslator?.textMessageReceived(\r\n                            this.privConversationTranslator,\r\n                            new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\r\n                    }\r\n                    break;\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onParticipantsListReceived = (r: ConversationRecognizer, e: ParticipantsListEventArgs): void => {\r\n        try {\r\n            // check if the session token needs to be updated\r\n            if (e.sessionToken !== undefined && e.sessionToken !== null) {\r\n                this.privRoom.token = e.sessionToken;\r\n            }\r\n            // save the participants\r\n            this.privParticipants.participants = [...e.participants];\r\n            // enable the conversation\r\n            if (this.privParticipants.me !== undefined) {\r\n                this.privIsReady = true;\r\n            }\r\n            if (!!this.privConversationTranslator?.participantsChanged) {\r\n                this.privConversationTranslator?.participantsChanged(\r\n                    this.privConversationTranslator,\r\n                    new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.JoinedConversation, this.toParticipants(true), e.sessionId));\r\n            }\r\n            // if this is the host, update the nickname if needed\r\n            if (this.me.isHost) {\r\n                const nickname: string = this.privConversationTranslator?.properties.getProperty(PropertyId.ConversationTranslator_Name);\r\n                if (nickname !== undefined && nickname.length > 0 && nickname !== this.me.displayName) {\r\n                    // issue a change nickname request\r\n                    this.changeNicknameAsync(nickname);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onConversationExpiration = (r: ConversationRecognizer, e: ConversationExpirationEventArgs): void => {\r\n        try {\r\n            if (!!this.privConversationTranslator?.conversationExpiration) {\r\n                this.privConversationTranslator?.conversationExpiration(\r\n                    this.privConversationTranslator,\r\n                    e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private addParticipantImplAsync(participant: IParticipant): Promise<void> {\r\n        const newParticipant: IInternalParticipant = this.privParticipants.addOrUpdateParticipant(participant);\r\n        if (newParticipant !== undefined) {\r\n            if (!!this.privTranscriberRecognizer) {\r\n                const conversationInfo = this.conversationInfo;\r\n                conversationInfo.participants = [participant];\r\n                return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"join\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private removeParticipantImplAsync(participant: IParticipant): Promise<void> {\r\n        this.privParticipants.deleteParticipant(participant.id);\r\n        const conversationInfo = this.conversationInfo;\r\n        conversationInfo.participants = [participant];\r\n        return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"leave\");\r\n    }\r\n\r\n    private async close(dispose: boolean): Promise<void> {\r\n        try {\r\n            this.privIsConnected = false;\r\n            await this.privConversationRecognizer?.close();\r\n            this.privConversationRecognizer = undefined;\r\n            this.privConversationTranslator?.dispose();\r\n        } catch (e) {\r\n            // ignore error\r\n            throw e;\r\n        }\r\n        if (dispose) {\r\n            this.dispose();\r\n        }\r\n    }\r\n\r\n    /** Helpers */\r\n    private get canSend(): boolean {\r\n        return this.privIsConnected && !this.privParticipants.me?.isMuted;\r\n    }\r\n\r\n    private get canSendAsHost(): boolean {\r\n        return this.privIsConnected && this.privParticipants.me?.isHost;\r\n    }\r\n\r\n    private handleCallback(cb: any, err: any): void {\r\n        if (!!cb) {\r\n            try {\r\n                cb();\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }\r\n            cb = undefined;\r\n        }\r\n    }\r\n\r\n    private handleError(error: any, err: any): void {\r\n        if (!!err) {\r\n            if (error instanceof Error) {\r\n                const typedError: Error = error as Error;\r\n                err(typedError.name + \": \" + typedError.message);\r\n\r\n            } else {\r\n                err(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Participant Helpers */\r\n    private toParticipants(includeHost: boolean): Participant[] {\r\n\r\n        const participants: Participant[] = this.privParticipants.participants.map((p: IInternalParticipant) => {\r\n            return this.toParticipant(p);\r\n        });\r\n        if (!includeHost) {\r\n            return participants.filter((p: Participant) => p.isHost === false);\r\n        } else {\r\n            return participants;\r\n        }\r\n    }\r\n\r\n    private toParticipant(p: IInternalParticipant): Participant {\r\n        return new Participant(p.id, p.avatar, p.displayName, p.isHost, p.isMuted, p.isUsingTts, p.preferredLanguage, p.voice);\r\n    }\r\n\r\n    private getMuteAllCommand(isMuted: boolean): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setMuteAll,\r\n            // tslint:disable-next-line: object-literal-shorthand\r\n            participantId: this.privRoom.participantId, // the id of the host\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: isMuted\r\n        });\r\n    }\r\n\r\n    private getMuteCommand(participantId: string, isMuted: boolean): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setMute,\r\n            // tslint:disable-next-line: object-literal-shorthand\r\n            participantId: participantId, // the id of the host\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: isMuted\r\n        });\r\n    }\r\n\r\n    private getLockCommand(isLocked: boolean): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setLockState,\r\n            // tslint:disable-next-line: object-literal-shorthand\r\n            participantId: this.privRoom.participantId,\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: isLocked\r\n        });\r\n    }\r\n\r\n    private getEjectCommand(participantId: string): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.ejectParticipant,\r\n            // tslint:disable-next-line: object-literal-shorthand\r\n            participantId: participantId,\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n        });\r\n    }\r\n\r\n    private getChangeNicknameCommand(nickname: string): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.changeNickname,\r\n            nickname,\r\n            // tslint:disable-next-line: object-literal-shorthand\r\n            participantId: this.privRoom.participantId, // the id of the host\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: nickname\r\n        });\r\n    }\r\n\r\n    private getMessageCommand(message: string): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n        Contracts.throwIfNullOrWhitespace(message, \"message\");\r\n\r\n        return JSON.stringify({\r\n            // tslint:disable-next-line: object-literal-shorthand\r\n            participantId: this.privRoom.participantId,\r\n            roomId: this.privRoom.roomId,\r\n            text: message,\r\n            type: ConversationTranslatorMessageTypes.instantMessage\r\n        });\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    AudioConfig,\r\n    SpeechTranslationConfig,\r\n} from \"../Exports\";\r\nimport { Callback, IConversation } from \"./IConversation\";\r\n\r\nexport class ConversationCommon {\r\n\r\n    protected privAudioConfig: AudioConfig;\r\n    protected privSpeechTranslationConfig: SpeechTranslationConfig;\r\n\r\n    public constructor(audioConfig?: AudioConfig) {\r\n        this.privAudioConfig = audioConfig;\r\n    }\r\n\r\n    protected handleCallback(cb: Callback, err: Callback): void {\r\n        if (!!cb) {\r\n            try {\r\n                cb();\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }\r\n            cb = undefined;\r\n        }\r\n    }\r\n\r\n    protected handleError(error: any, err: Callback): void {\r\n        if (!!err) {\r\n            if (error instanceof Error) {\r\n                const typedError: Error = error as Error;\r\n                err(typedError.name + \": \" + typedError.message);\r\n\r\n            } else {\r\n                err(error);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection } from \"../sdk/Exports\";\r\nimport {Context, SpeechServiceConfig} from \"./Exports\";\r\n\r\nexport enum SynthesisServiceType {\r\n    Standard,\r\n    Custom,\r\n}\r\n\r\nexport class SynthesizerConfig {\r\n    private privSynthesisServiceType: SynthesisServiceType = SynthesisServiceType.Standard;\r\n    private privSpeechServiceConfig: SpeechServiceConfig;\r\n    private privParameters: PropertyCollection;\r\n\r\n    constructor(\r\n        speechServiceConfig: SpeechServiceConfig,\r\n        parameters: PropertyCollection) {\r\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new SpeechServiceConfig(new Context(null));\r\n        this.privParameters = parameters;\r\n    }\r\n\r\n    public get parameters(): PropertyCollection {\r\n        return this.privParameters;\r\n    }\r\n\r\n    public get synthesisServiceType(): SynthesisServiceType {\r\n        return this.privSynthesisServiceType;\r\n    }\r\n\r\n    public set synthesisServiceType(value: SynthesisServiceType) {\r\n        this.privSynthesisServiceType = value;\r\n    }\r\n\r\n    public get SpeechServiceConfig(): SpeechServiceConfig {\r\n        return this.privSpeechServiceConfig;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    OutputFormatPropertyName,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports\";\r\nimport {\r\n    OutputFormat,\r\n    PropertyId\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport {\r\n    QueryParameterNames\r\n} from \"./QueryParameterNames\";\r\n\r\nexport class TranscriberConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    private readonly multiaudioRelativeUri: string = \"/speech/recognition/multiaudio\";\r\n\r\n    public create = (\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection => {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, \"centralus\");\r\n        const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n        const hostDefault: string = \"wss://transcribe.\" + region + \".cts.speech\" + hostSuffix + this.multiaudioRelativeUri;\r\n        const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, hostDefault);\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n\r\n        const endpointId: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\r\n        const language: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\r\n\r\n        if (endpointId) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.CustomSpeechDeploymentId) === -1) {\r\n                queryParams[QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\r\n            }\r\n        } else if (language) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.Language) === -1) {\r\n                queryParams[QueryParameterNames.Language] = language;\r\n            }\r\n        }\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n        if (!endpoint) {\r\n            endpoint = host;\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationEventArgsBase,\r\n} from \"./CancellationEventArgsBase\";\r\n\r\n/**\r\n * Defines content of a RecognitionErrorEvent.\r\n * @class ConversationTranscriptionCanceledEventArgs\r\n */\r\nexport class ConversationTranscriptionCanceledEventArgs extends CancellationEventArgsBase {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAudioSource,\r\n    IConnection,\r\n    MessageType\r\n} from \"../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ConversationTranscriptionCanceledEventArgs,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"../sdk/Exports\";\r\nimport { ConversationInfo } from \"../sdk/Transcription/Exports\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    DetailedSpeechPhrase,\r\n    EnumTranslation,\r\n    OutputFormatPropertyName,\r\n    RecognitionStatus,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechHypothesis,\r\n    TranscriberRecognizer\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class TranscriptionServiceRecognizer extends ServiceRecognizerBase {\r\n\r\n    private privTranscriberRecognizer: TranscriberRecognizer;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        transcriber: TranscriberRecognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, transcriber);\r\n        this.privTranscriberRecognizer = transcriber;\r\n        this.sendPrePayloadJSONOverride = this.sendTranscriptionStartJSON;\r\n    }\r\n\r\n    public async sendSpeechEventAsync(info: ConversationInfo, command: string): Promise<void> {\r\n        if (!!this.privRequestSession.isRecognizing) {\r\n            const connection: IConnection = await this.fetchConnection();\r\n            await this.sendSpeechEvent(connection, this.createSpeechEventPayload(info, command));\r\n        }\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let result: SpeechRecognitionResult;\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        let processed: boolean = false;\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.hypothesis\":\r\n            case \"speech.fragment\":\r\n                const hypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\r\n                const offset: number = hypothesis.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n\r\n                result = new SpeechRecognitionResult(\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingSpeech,\r\n                    hypothesis.Text,\r\n                    hypothesis.Duration,\r\n                    offset,\r\n                    hypothesis.Language,\r\n                    hypothesis.LanguageDetectionConfidence,\r\n                    hypothesis.SpeakerId,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(offset);\r\n\r\n                const ev = new SpeechRecognitionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privTranscriberRecognizer.recognizing) {\r\n                    try {\r\n                        this.privTranscriberRecognizer.recognizing(this.privTranscriberRecognizer, ev);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.phrase\":\r\n                const simple: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n                const resultReason: ResultReason = EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\r\n\r\n                this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + simple.Offset + simple.Duration);\r\n\r\n                if (ResultReason.Canceled === resultReason) {\r\n                    const cancelReason: CancellationReason = EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\r\n                    const cancellationErrorCode: CancellationErrorCode = EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\r\n\r\n                    await this.cancelRecognitionLocal(\r\n                        cancelReason,\r\n                        cancellationErrorCode,\r\n                        EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\r\n\r\n                } else {\r\n                    if (!(this.privRequestSession.isSpeechEnded && resultReason === ResultReason.NoMatch && simple.RecognitionStatus !== RecognitionStatus.InitialSilenceTimeout)) {\r\n                        if (this.privRecognizerConfig.parameters.getProperty(OutputFormatPropertyName) === OutputFormat[OutputFormat.Simple]) {\r\n                            result = new SpeechRecognitionResult(\r\n                                this.privRequestSession.requestId,\r\n                                resultReason,\r\n                                simple.DisplayText,\r\n                                simple.Duration,\r\n                                simple.Offset + this.privRequestSession.currentTurnAudioOffset,\r\n                                simple.Language,\r\n                                simple.LanguageDetectionConfidence,\r\n                                simple.SpeakerId,\r\n                                undefined,\r\n                                connectionMessage.textBody,\r\n                                resultProps);\r\n                        } else {\r\n                            const detailed: DetailedSpeechPhrase = DetailedSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n                            const totalOffset: number = detailed.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n                            const offsetCorrectedJson: string = detailed.getJsonWithCorrectedOffsets(totalOffset);\r\n\r\n                            result = new SpeechRecognitionResult(\r\n                                this.privRequestSession.requestId,\r\n                                resultReason,\r\n                                detailed.Text,\r\n                                detailed.Duration,\r\n                                totalOffset,\r\n                                detailed.Language,\r\n                                detailed.LanguageDetectionConfidence,\r\n                                detailed.SpeakerId,\r\n                                undefined,\r\n                                offsetCorrectedJson,\r\n                                resultProps);\r\n                        }\r\n\r\n                        const event: SpeechRecognitionEventArgs = new SpeechRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privTranscriberRecognizer.recognized) {\r\n                            try {\r\n                                this.privTranscriberRecognizer.recognized(this.privTranscriberRecognizer, event);\r\n                                /* tslint:disable:no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (!!this.privSuccessCallback) {\r\n                        try {\r\n                            this.privSuccessCallback(result);\r\n                        } catch (e) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(e);\r\n                            }\r\n                        }\r\n                        // Only invoke the call back once.\r\n                        // and if it's successful don't invoke the\r\n                        // error after that.\r\n                        this.privSuccessCallback = undefined;\r\n                        this.privErrorCallback = undefined;\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privTranscriberRecognizer.canceled) {\r\n            const cancelEvent: ConversationTranscriptionCanceledEventArgs = new ConversationTranscriptionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                sessionId);\r\n            try {\r\n                this.privTranscriberRecognizer.canceled(this.privTranscriberRecognizer, cancelEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: SpeechRecognitionResult = new SpeechRecognitionResult(\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Duration\r\n                undefined, // Offset\r\n                undefined, // Language\r\n                undefined, // Language Detection Confidence\r\n                undefined, // Speaker Id\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                this.privSuccessCallback = undefined;\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    // Encapsulated for derived service recognizers that need to send additional JSON\r\n    protected async sendTranscriptionStartJSON(connection: IConnection): Promise<void> {\r\n        await this.sendSpeechContext(connection);\r\n        const info: ConversationInfo = this.privTranscriberRecognizer.getConversationInfo();\r\n        const payload: { [id: string]: any } = this.createSpeechEventPayload(info, \"start\");\r\n        await this.sendSpeechEvent(connection, payload);\r\n        await this.sendWaveHeader(connection);\r\n        return;\r\n    }\r\n\r\n    protected sendSpeechEvent = (connection: IConnection, payload: { [id: string]: any }): Promise<void> => {\r\n        const speechEventJson = JSON.stringify(payload);\r\n\r\n        if (speechEventJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.event\",\r\n                this.privRequestSession.requestId,\r\n                \"application/json\",\r\n                speechEventJson));\r\n        }\r\n        return;\r\n    }\r\n\r\n    private createSpeechEventPayload(info: ConversationInfo, command: string): { [id: string]: any } {\r\n        const meeting: string = \"meeting\";\r\n        const eventDict: { [id: string]: any } = { id: meeting, name: command, meeting: info.conversationProperties };\r\n        const idString: string = \"id\";\r\n        const attendees: string = \"attendees\";\r\n        const record: string = \"record\";\r\n        eventDict[meeting][idString] = info.id;\r\n        eventDict[meeting][attendees] = info.participants;\r\n        eventDict[meeting][record] = info.conversationProperties.audiorecording === \"on\" ? \"true\" : \"false\";\r\n        return eventDict;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { marshalPromiseToCallbacks } from \"../../common/Exports\";\r\nimport { AudioConfigImpl } from \"../../sdk/Audio/AudioConfig\";\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    CancellationEventArgs,\r\n    Conversation,\r\n    ConversationInfo,\r\n    ConversationTranscriber,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SessionEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechTranslationConfig,\r\n    SpeechTranslationConfigImpl,\r\n} from \"../../sdk/Exports\";\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n    TranscriberConnectionFactory,\r\n    TranscriptionServiceRecognizer,\r\n} from \"../Exports\";\r\n\r\nexport class TranscriberRecognizer extends Recognizer {\r\n    private privDisposedRecognizer: boolean;\r\n    private privConversation: Conversation;\r\n\r\n    /**\r\n     * TranscriberRecognizer constructor.\r\n     * @constructor\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public constructor(speechTranslationConfig: SpeechTranslationConfig, audioConfig?: AudioConfig) {\r\n        const speechTranslationConfigImpl: SpeechTranslationConfigImpl = speechTranslationConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(speechTranslationConfigImpl, \"speechTranslationConfig\");\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            speechTranslationConfigImpl.speechRecognitionLanguage,\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        super(audioConfig, speechTranslationConfigImpl.properties, new TranscriberConnectionFactory());\r\n        this.privDisposedRecognizer = false;\r\n    }\r\n\r\n    public recognizing: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    public recognized: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    public canceled: (sender: Recognizer, event: CancellationEventArgs) => void;\r\n\r\n    public conversationCanceled: (sender: Recognizer, event: CancellationEventArgs) => void;\r\n\r\n    public conversationStarted: (sender: Recognizer, event: SessionEventArgs) => void;\r\n\r\n    public conversationStopped: (sender: Recognizer, event: SessionEventArgs) => void;\r\n\r\n    public getConversationInfo(): ConversationInfo {\r\n        Contracts.throwIfNullOrUndefined(this.privConversation, \"Conversation\");\r\n        return this.privConversation.conversationInfo;\r\n    }\r\n\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    public set conversation(c: Conversation) {\r\n        Contracts.throwIfNullOrUndefined(c, \"Conversation\");\r\n        this.privConversation = c;\r\n    }\r\n\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    public async close(): Promise<void> {\r\n        if (!this.privDisposedRecognizer) {\r\n            await this.dispose(true);\r\n        }\r\n    }\r\n\r\n    // Push async join/leave conversation message via serviceRecognizer\r\n    public async pushConversationEvent(conversationInfo: ConversationInfo, command: string): Promise<void> {\r\n        const reco = (this.privReco) as TranscriptionServiceRecognizer;\r\n        Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\r\n        await reco.sendSpeechEventAsync(conversationInfo, command);\r\n    }\r\n\r\n    public connectCallbacks(transcriber: ConversationTranscriber): void {\r\n        this.canceled = (s: any, e: CancellationEventArgs): void => {\r\n            if (!!transcriber.canceled) {\r\n                transcriber.canceled(transcriber, e);\r\n            }\r\n        };\r\n        this.conversationCanceled = (s: any, e: CancellationEventArgs): void => {\r\n            if (!!transcriber.conversationCanceled) {\r\n                transcriber.conversationCanceled(transcriber, e);\r\n            }\r\n        };\r\n        this.recognizing = (s: any, e: SpeechRecognitionEventArgs): void => {\r\n            if (!!transcriber.transcribing) {\r\n                transcriber.transcribing(transcriber, e);\r\n            }\r\n        };\r\n        this.recognized = (s: any, e: SpeechRecognitionEventArgs): void => {\r\n            if (!!transcriber.transcribed) {\r\n                transcriber.transcribed(transcriber, e);\r\n            }\r\n        };\r\n        this.conversationStarted = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.conversationStarted) {\r\n                transcriber.conversationStarted(transcriber, e);\r\n            }\r\n        };\r\n        this.conversationStopped = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.conversationStopped) {\r\n                transcriber.conversationStopped(transcriber, e);\r\n            }\r\n        };\r\n        this.sessionStarted = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.sessionStarted) {\r\n                transcriber.sessionStarted(transcriber, e);\r\n            }\r\n        };\r\n        this.sessionStopped = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.sessionStopped) {\r\n                transcriber.sessionStopped(transcriber, e);\r\n            }\r\n        };\r\n    }\r\n\r\n    public disconnectCallbacks(): void {\r\n        this.canceled = undefined;\r\n        this.recognizing = undefined;\r\n        this.recognized = undefined;\r\n        this.sessionStarted = undefined;\r\n        this.sessionStopped = undefined;\r\n        this.conversationCanceled = undefined;\r\n        this.conversationStarted = undefined;\r\n        this.conversationStopped = undefined;\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member ConversationTranscriber.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n            await this.implRecognizerStop();\r\n        }\r\n\r\n        await super.dispose(disposing);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(\r\n            speechConfig,\r\n            this.properties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new TranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { TranscriberRecognizer } from \"../../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    CancellationEventArgs,\r\n    ConversationTranscriptionEventArgs,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SessionEventArgs,\r\n} from \"../Exports\";\r\nimport {\r\n    ConversationHandler,\r\n    ConversationImpl,\r\n    ConversationTranscriptionHandler,\r\n} from \"./Exports\";\r\nimport { Callback, IConversation } from \"./IConversation\";\r\n\r\nexport class ConversationTranscriber implements ConversationTranscriptionHandler {\r\n    private privDisposedRecognizer: boolean;\r\n    private privRecognizer: TranscriberRecognizer;\r\n    private privProperties: PropertyCollection;\r\n    protected privAudioConfig: AudioConfig;\r\n\r\n    /**\r\n     * ConversationTranscriber constructor.\r\n     * @constructor\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public constructor(audioConfig?: AudioConfig) {\r\n        this.privAudioConfig = audioConfig;\r\n        this.privProperties = new PropertyCollection();\r\n        this.privRecognizer = undefined;\r\n        this.privDisposedRecognizer = false;\r\n    }\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during the conversation.\r\n     * @member ConversationTranscriber.prototype.conversationCanceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public conversationCanceled: (sender: ConversationHandler, event: CancellationEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during transcription.\r\n     * @member ConversationTranscriber.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: ConversationHandler, event: CancellationEventArgs) => void;\r\n\r\n    /**\r\n     * @param {Conversation} converation - conversation to be recognized\r\n     */\r\n    public joinConversationAsync(conversation: IConversation, cb?: Callback, err?: Callback): void {\r\n        const conversationImpl = conversation as ConversationImpl;\r\n        Contracts.throwIfNullOrUndefined(conversationImpl, \"Conversation\");\r\n\r\n        // ref the conversation object\r\n        // create recognizer and subscribe to recognizer events\r\n        this.privRecognizer = new TranscriberRecognizer(conversation.config, this.privAudioConfig);\r\n        Contracts.throwIfNullOrUndefined(this.privRecognizer, \"Recognizer\");\r\n        this.privRecognizer.connectCallbacks(this);\r\n\r\n        marshalPromiseToCallbacks(conversationImpl.connectTranscriberRecognizer(this.privRecognizer), cb, err);\r\n    }\r\n\r\n     /**\r\n      * The event recognized signals that a final conversation transcription result is received.\r\n      * @member ConversationTranscriber.prototype.transcribed\r\n      * @function\r\n      * @public\r\n      */\r\n    public transcribed: (sender: ConversationTranscriptionHandler, event: ConversationTranscriptionEventArgs) => void;\r\n\r\n     /**\r\n      * The event recognizing signals that an intermediate conversation transcription result is received.\r\n      * @member ConversationTranscriber.prototype.transcribing\r\n      * @function\r\n      * @public\r\n      */\r\n    public transcribing: (sender: ConversationTranscriptionHandler, event: ConversationTranscriptionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for session started events.\r\n     * @member ConversationTranscriber.prototype.sessionStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStarted: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for session stopped events.\r\n     * @member ConversationTranscriber.prototype.sessionStopped\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStopped: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for conversation started events.\r\n     * @member ConversationTranscriber.prototype.conversationStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public conversationStarted: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for conversation stopped events.\r\n     * @member ConversationTranscriber.prototype.conversationStopped\r\n     * @function\r\n     * @public\r\n     */\r\n    public conversationStopped: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member ConversationTranscriber.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member ConversationTranscriber.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * Gets the spoken language of recognition.\r\n     * @member ConversationTranscriber.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} The spoken language of recognition.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this ConversationTranscriber.\r\n     * @member ConversationTranscriber.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this ConversationTranscriber.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Starts conversation transcription, until stopTranscribingAsync() is called.\r\n     * User must subscribe to events to receive transcription results.\r\n     * @member ConversationTranscriber.prototype.startTranscribingAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the transcription has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        this.privRecognizer.startContinuousRecognitionAsync(cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts conversation transcription, until stopTranscribingAsync() is called.\r\n     * User must subscribe to events to receive transcription results.\r\n     * @member ConversationTranscriber.prototype.stopTranscribingAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the transcription has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        this.privRecognizer.stopContinuousRecognitionAsync(cb, err);\r\n    }\r\n\r\n    /**\r\n     * Leave the current conversation. After this is called, you will no longer receive any events.\r\n     */\r\n    public leaveConversationAsync(cb?: Callback, err?: Callback): void {\r\n        this.privRecognizer.disconnectCallbacks();\r\n        marshalPromiseToCallbacks((async (): Promise<void> => { return; })(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member ConversationTranscriber.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member ConversationTranscriber.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n        if (!!this.privRecognizer) {\r\n            await this.privRecognizer.close();\r\n            this.privRecognizer = undefined;\r\n        }\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection, WebsocketMessageAdapter,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports\";\r\nimport { PropertyId } from \"../sdk/Exports\";\r\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    SynthesizerConfig,\r\n    WebsocketMessageFormatter\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { ISynthesisConnectionFactory } from \"./ISynthesisConnectionFactory\";\r\nimport {\r\n    QueryParameterNames\r\n} from \"./QueryParameterNames\";\r\n\r\nexport class SpeechSynthesisConnectionFactory implements ISynthesisConnectionFactory {\r\n\r\n    private readonly synthesisUri: string = \"/cognitiveservices/websocket/v1\";\r\n\r\n    public create = (\r\n        config: SynthesizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection => {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, undefined);\r\n        const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n        const endpointId = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\r\n        const hostPrefix = (endpointId === undefined) ? \"tts\" : \"voice\";\r\n        const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".\" + hostPrefix + \".speech\" + hostSuffix);\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n\r\n        if (!endpoint) {\r\n            endpoint = host + this.synthesisUri;\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n        if (endpointId !== undefined) {\r\n            headers[QueryParameterNames.CustomVoiceDeploymentId] = endpointId;\r\n        }\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromParameters(config.parameters), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n *  Defines the gender of synthesis voices.\r\n *  Added in version 1.20.0.\r\n */\r\nexport enum SynthesisVoiceGender {\r\n\r\n    /** Gender unknown */\r\n    Unknown,\r\n\r\n    /** Female voice */\r\n    Female,\r\n\r\n    /** Male voice */\r\n    Male\r\n}\r\n\r\nexport enum SynthesisVoiceType {\r\n    OnlineNeural = 1,\r\n    OnlineStandard = 2,\r\n    OfflineNeural = 3,\r\n    OfflineStandard = 4,\r\n}\r\n\r\n/**\r\n * Information about Speech Synthesis voice\r\n * Added in version 1.20.0.\r\n * @class VoiceInfo\r\n */\r\nexport class VoiceInfo {\r\n    private privName: string;\r\n    private privLocale: string;\r\n    private privShortName: string;\r\n    private privLocalName: string;\r\n    private privGender: SynthesisVoiceGender;\r\n    private privVoiceType: SynthesisVoiceType;\r\n    private privStyleList: string[] = [];\r\n    private privVoicePath: string = \"\";\r\n\r\n    public constructor(json: { Name: string, LocalName: string, ShortName: string, Gender: string, VoiceType: string, Locale: string, StyleList: any }) {\r\n        if (!!json) {\r\n            this.privName = json.Name;\r\n            this.privLocale = json.Locale;\r\n            this.privShortName = json.ShortName;\r\n            this.privLocalName = json.LocalName;\r\n            this.privVoiceType = json.VoiceType.endsWith(\"Standard\") ? SynthesisVoiceType.OnlineStandard : SynthesisVoiceType.OnlineNeural;\r\n            this.privGender = json.Gender === \"Male\" ? SynthesisVoiceGender.Male : json.Gender === \"Female\" ? SynthesisVoiceGender.Female : SynthesisVoiceGender.Unknown;\r\n            if (!!json.StyleList && Array.isArray(json.StyleList)) {\r\n                for (const style of json.StyleList) {\r\n                    this.privStyleList.push(style);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public get name(): string {\r\n        return this.privName;\r\n    }\r\n\r\n    public get locale(): string {\r\n        return this.privLocale;\r\n    }\r\n\r\n    public get shortName(): string {\r\n        return this.privShortName;\r\n    }\r\n\r\n    public get localName(): string {\r\n        return this.privLocalName;\r\n    }\r\n\r\n    public get gender(): SynthesisVoiceGender {\r\n        return this.privGender;\r\n    }\r\n\r\n    public get voiceType(): SynthesisVoiceType {\r\n        return this.privVoiceType;\r\n    }\r\n\r\n    public get styleList(): string[] {\r\n        return this.privStyleList;\r\n    }\r\n\r\n    public get voicePath(): string {\r\n        return this.privVoicePath;\r\n    }\r\n}\r\n","import {\r\n    IRequestOptions,\r\n    IRestResponse,\r\n    RestConfigBase,\r\n    RestMessageAdapter,\r\n    RestRequestType,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    PropertyId,\r\n} from \"../sdk/Exports\";\r\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase\";\r\nimport { SynthesizerConfig } from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\n\r\n/**\r\n * Implements methods for speaker recognition classes, sending requests to endpoint\r\n * and parsing response into expected format\r\n * @class SynthesisRestAdapter\r\n */\r\nexport class SynthesisRestAdapter {\r\n    private privRestAdapter: RestMessageAdapter;\r\n    private privUri: string;\r\n\r\n    public constructor(config: SynthesizerConfig) {\r\n\r\n        let endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        if (!endpoint) {\r\n            const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, \"westus\");\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, `https://${region}.tts.speech${hostSuffix}`);\r\n        }\r\n        this.privUri = `${endpoint}/cognitiveservices/voices/list`;\r\n\r\n        const options: IRequestOptions = RestConfigBase.requestOptions;\r\n        options.headers[RestConfigBase.configParams.subscriptionKey] = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\r\n\r\n        this.privRestAdapter = new RestMessageAdapter(options);\r\n    }\r\n\r\n    /**\r\n     * Sends list voices request to endpoint.\r\n     * @function\r\n     * @public\r\n     * @param connectionId - guid for connectionId\r\n     * @returns {Promise<IRestResponse>} rest response to status request\r\n     */\r\n    public getVoicesList(connectionId: string): Promise<IRestResponse> {\r\n        this.privRestAdapter.setHeaders(HeaderNames.ConnectionId, connectionId);\r\n        return this.privRestAdapter.request(RestRequestType.Get, this.privUri);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason, SynthesisResult, VoiceInfo } from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech synthesis.\r\n * @class SynthesisVoicesResult\r\n * Added in version 1.20.0\r\n */\r\nexport class SynthesisVoicesResult extends SynthesisResult {\r\n    private privVoices: VoiceInfo[];\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param requestId - result id for request.\r\n     * @param json - json payload from endpoint.\r\n     */\r\n    constructor(requestId: string, json: any) {\r\n        if (Array.isArray(json)) {\r\n            super(requestId, ResultReason.VoicesListRetrieved, undefined, new PropertyCollection());\r\n            this.privVoices = [];\r\n            for (const item of json) {\r\n                this.privVoices.push(new VoiceInfo(item));\r\n            }\r\n        } else {\r\n            super(requestId, ResultReason.Canceled, !!json.errorDetails ? json.errorDetails : \"Error information unavailable\", new PropertyCollection());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The list of voices\r\n     * @member SynthesisVoicesResult.prototype.voices\r\n     * @function\r\n     * @public\r\n     * @returns {VoiceInfo[]} List of synthesized voices.\r\n     */\r\n    public get voices(): VoiceInfo[] {\r\n        return this.privVoices;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PathLike } from \"fs\";\r\nimport { IRestResponse } from \"../common.browser/RestMessageAdapter\";\r\nimport {\r\n    AutoDetectSourceLanguagesOpenRangeOptionName,\r\n    CognitiveSubscriptionKeyAuthentication,\r\n    CognitiveTokenAuthentication,\r\n    Context,\r\n    IAuthentication,\r\n    ISynthesisConnectionFactory,\r\n    OS,\r\n    SpeechServiceConfig,\r\n    SpeechSynthesisConnectionFactory,\r\n    SynthesisAdapterBase,\r\n    SynthesisRestAdapter,\r\n    SynthesizerConfig,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    createNoDashGuid,\r\n    IAudioDestination,\r\n    IStringDictionary,\r\n    marshalPromiseToCallbacks,\r\n    Queue\r\n} from \"../common/Exports\";\r\nimport { AudioOutputConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { AudioFileWriter } from \"./Audio/AudioFileWriter\";\r\nimport { AudioOutputFormatImpl } from \"./Audio/AudioOutputFormat\";\r\nimport {\r\n    PullAudioOutputStreamImpl,\r\n    PushAudioOutputStreamImpl\r\n} from \"./Audio/AudioOutputStream\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    AudioOutputStream,\r\n    AutoDetectSourceLanguageConfig,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    PullAudioOutputStream,\r\n    PushAudioOutputStreamCallback,\r\n    SpeechConfig,\r\n    SpeechSynthesisBookmarkEventArgs,\r\n    SpeechSynthesisEventArgs,\r\n    SpeechSynthesisOutputFormat,\r\n    SpeechSynthesisResult,\r\n    SpeechSynthesisVisemeEventArgs,\r\n    SpeechSynthesisWordBoundaryEventArgs,\r\n    SynthesisVoicesResult,\r\n} from \"./Exports\";\r\nimport { SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Defines the class SpeechSynthesizer for text to speech.\r\n * Updated in version 1.16.0\r\n * @class SpeechSynthesizer\r\n */\r\nexport class SpeechSynthesizer {\r\n    protected audioConfig: AudioConfig;\r\n    protected privAdapter: SynthesisAdapterBase;\r\n    protected privRestAdapter: SynthesisRestAdapter;\r\n    protected privProperties: PropertyCollection;\r\n    protected synthesisRequestQueue: Queue<SynthesisRequest>;\r\n\r\n    /**\r\n     * Defines event handler for synthesis start events.\r\n     * @member SpeechSynthesizer.prototype.synthesisStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesisStarted: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for synthesizing events.\r\n     * @member SpeechSynthesizer.prototype.synthesizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesizing: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for synthesis completed events.\r\n     * @member SpeechSynthesizer.prototype.synthesisCompleted\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesisCompleted: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for synthesis cancelled events.\r\n     * @member SpeechSynthesizer.prototype.SynthesisCanceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public SynthesisCanceled: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for word boundary events\r\n     * @member SpeechSynthesizer.prototype.wordBoundary\r\n     * @function\r\n     * @public\r\n     */\r\n    public wordBoundary: (sender: SpeechSynthesizer, event: SpeechSynthesisWordBoundaryEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for bookmark reached events\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesizer.prototype.bookmarkReached\r\n     * @function\r\n     * @public\r\n     */\r\n    public bookmarkReached: (sender: SpeechSynthesizer, event: SpeechSynthesisBookmarkEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for viseme received event\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesizer.prototype.visemeReceived\r\n     * @function\r\n     * @public\r\n     */\r\n    public visemeReceived: (sender: SpeechSynthesizer, event: SpeechSynthesisVisemeEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member SpeechSynthesizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member SpeechSynthesizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this SpeechSynthesizer.\r\n     * @member SpeechSynthesizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechSynthesizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Indicates if auto detect source language is enabled\r\n     * @member SpeechSynthesizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {boolean} if auto detect source language is enabled\r\n     */\r\n    public get autoDetectSourceLanguage(): boolean {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages) === AutoDetectSourceLanguagesOpenRangeOptionName;\r\n    }\r\n\r\n    private privDisposed: boolean;\r\n    private privConnectionFactory: ISynthesisConnectionFactory;\r\n    private privSynthesizing: boolean;\r\n\r\n    /**\r\n     * SpeechSynthesizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer.\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer.\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig?: AudioConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        if (audioConfig !== null) {\r\n            if (audioConfig === undefined) {\r\n                this.audioConfig = (typeof window === \"undefined\") ? undefined : AudioConfig.fromDefaultSpeakerOutput();\r\n            } else {\r\n                this.audioConfig = audioConfig;\r\n            }\r\n        }\r\n\r\n        this.privProperties = speechConfigImpl.properties.clone();\r\n        this.privDisposed = false;\r\n        this.privSynthesizing = false;\r\n        this.privConnectionFactory = new SpeechSynthesisConnectionFactory();\r\n        this.synthesisRequestQueue = new Queue<SynthesisRequest>();\r\n        this.implCommonSynthesizeSetup();\r\n    }\r\n\r\n    /**\r\n     * SpeechSynthesizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this synthesizer\r\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the synthesizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer\r\n     */\r\n    public static FromConfig(speechConfig: SpeechConfig, autoDetectSourceLanguageConfig: AutoDetectSourceLanguageConfig, audioConfig?: AudioConfig): SpeechSynthesizer {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\r\n        return new SpeechSynthesizer(speechConfig, audioConfig);\r\n    }\r\n\r\n    public buildSsml(text: string): string {\r\n        const languageToDefaultVoice: IStringDictionary<string>  = {\r\n            [\"af-ZA\"]: \"af-ZA-AdriNeural\",\r\n            [\"am-ET\"]: \"am-ET-AmehaNeural\",\r\n            [\"ar-AE\"]: \"ar-AE-FatimaNeural\",\r\n            [\"ar-BH\"]: \"ar-BH-AliNeural\",\r\n            [\"ar-DZ\"]: \"ar-DZ-AminaNeural\",\r\n            [\"ar-EG\"]: \"ar-EG-SalmaNeural\",\r\n            [\"ar-IQ\"]: \"ar-IQ-BasselNeural\",\r\n            [\"ar-JO\"]: \"ar-JO-SanaNeural\",\r\n            [\"ar-KW\"]: \"ar-KW-FahedNeural\",\r\n            [\"ar-LY\"]: \"ar-LY-ImanNeural\",\r\n            [\"ar-MA\"]: \"ar-MA-JamalNeural\",\r\n            [\"ar-QA\"]: \"ar-QA-AmalNeural\",\r\n            [\"ar-SA\"]: \"ar-SA-HamedNeural\",\r\n            [\"ar-SY\"]: \"ar-SY-AmanyNeural\",\r\n            [\"ar-TN\"]: \"ar-TN-HediNeural\",\r\n            [\"ar-YE\"]: \"ar-YE-MaryamNeural\",\r\n            [\"bg-BG\"]: \"bg-BG-BorislavNeural\",\r\n            [\"bn-BD\"]: \"bn-BD-NabanitaNeural\",\r\n            [\"ca-ES\"]: \"ca-ES-JoanaNeural\",\r\n            [\"cs-CZ\"]: \"cs-CZ-AntoninNeural\",\r\n            [\"cy-GB\"]: \"cy-GB-AledNeural\",\r\n            [\"da-DK\"]: \"da-DK-ChristelNeural\",\r\n            [\"de-AT\"]: \"de-AT-IngridNeural\",\r\n            [\"de-CH\"]: \"de-CH-JanNeural\",\r\n            [\"de-DE\"]: \"de-DE-KatjaNeural\",\r\n            [\"el-GR\"]: \"el-GR-AthinaNeural\",\r\n            [\"en-AU\"]: \"en-AU-NatashaNeural\",\r\n            [\"en-CA\"]: \"en-CA-ClaraNeural\",\r\n            [\"en-GB\"]: \"en-GB-LibbyNeural\",\r\n            [\"en-HK\"]: \"en-HK-SamNeural\",\r\n            [\"en-IE\"]: \"en-IE-ConnorNeural\",\r\n            [\"en-IN\"]: \"en-IN-NeerjaNeural\",\r\n            [\"en-KE\"]: \"en-KE-AsiliaNeural\",\r\n            [\"en-NG\"]: \"en-NG-AbeoNeural\",\r\n            [\"en-NZ\"]: \"en-NZ-MitchellNeural\",\r\n            [\"en-PH\"]: \"en-PH-JamesNeural\",\r\n            [\"en-SG\"]: \"en-SG-LunaNeural\",\r\n            [\"en-TZ\"]: \"en-TZ-ElimuNeural\",\r\n            [\"en-US\"]: \"en-US-JennyNeural\",\r\n            [\"en-ZA\"]: \"en-ZA-LeahNeural\",\r\n            [\"es-AR\"]: \"es-AR-ElenaNeural\",\r\n            [\"es-BO\"]: \"es-BO-MarceloNeural\",\r\n            [\"es-CL\"]: \"es-CL-CatalinaNeural\",\r\n            [\"es-CO\"]: \"es-CO-GonzaloNeural\",\r\n            [\"es-CR\"]: \"es-CR-JuanNeural\",\r\n            [\"es-CU\"]: \"es-CU-BelkysNeural\",\r\n            [\"es-DO\"]: \"es-DO-EmilioNeural\",\r\n            [\"es-EC\"]: \"es-EC-AndreaNeural\",\r\n            [\"es-ES\"]: \"es-ES-AlvaroNeural\",\r\n            [\"es-GQ\"]: \"es-GQ-JavierNeural\",\r\n            [\"es-GT\"]: \"es-GT-AndresNeural\",\r\n            [\"es-HN\"]: \"es-HN-CarlosNeural\",\r\n            [\"es-MX\"]: \"es-MX-DaliaNeural\",\r\n            [\"es-NI\"]: \"es-NI-FedericoNeural\",\r\n            [\"es-PA\"]: \"es-PA-MargaritaNeural\",\r\n            [\"es-PE\"]: \"es-PE-AlexNeural\",\r\n            [\"es-PR\"]: \"es-PR-KarinaNeural\",\r\n            [\"es-PY\"]: \"es-PY-MarioNeural\",\r\n            [\"es-SV\"]: \"es-SV-LorenaNeural\",\r\n            [\"es-US\"]: \"es-US-AlonsoNeural\",\r\n            [\"es-UY\"]: \"es-UY-MateoNeural\",\r\n            [\"es-VE\"]: \"es-VE-PaolaNeural\",\r\n            [\"et-EE\"]: \"et-EE-AnuNeural\",\r\n            [\"fa-IR\"]: \"fa-IR-DilaraNeural\",\r\n            [\"fi-FI\"]: \"fi-FI-SelmaNeural\",\r\n            [\"fil-PH\"]: \"fil-PH-AngeloNeural\",\r\n            [\"fr-BE\"]: \"fr-BE-CharlineNeural\",\r\n            [\"fr-CA\"]: \"fr-CA-SylvieNeural\",\r\n            [\"fr-CH\"]: \"fr-CH-ArianeNeural\",\r\n            [\"fr-FR\"]: \"fr-FR-DeniseNeural\",\r\n            [\"ga-IE\"]: \"ga-IE-ColmNeural\",\r\n            [\"gl-ES\"]: \"gl-ES-RoiNeural\",\r\n            [\"gu-IN\"]: \"gu-IN-DhwaniNeural\",\r\n            [\"he-IL\"]: \"he-IL-AvriNeural\",\r\n            [\"hi-IN\"]: \"hi-IN-MadhurNeural\",\r\n            [\"hr-HR\"]: \"hr-HR-GabrijelaNeural\",\r\n            [\"hu-HU\"]: \"hu-HU-NoemiNeural\",\r\n            [\"id-ID\"]: \"id-ID-ArdiNeural\",\r\n            [\"it-IT\"]: \"it-IT-IsabellaNeural\",\r\n            [\"ja-JP\"]: \"ja-JP-NanamiNeural\",\r\n            [\"jv-ID\"]: \"jv-ID-DimasNeural\",\r\n            [\"km-KH\"]: \"km-KH-PisethNeural\",\r\n            [\"ko-KR\"]: \"ko-KR-SunHiNeural\",\r\n            [\"lt-LT\"]: \"lt-LT-LeonasNeural\",\r\n            [\"lv-LV\"]: \"lv-LV-EveritaNeural\",\r\n            [\"mr-IN\"]: \"mr-IN-AarohiNeural\",\r\n            [\"ms-MY\"]: \"ms-MY-OsmanNeural\",\r\n            [\"mt-MT\"]: \"mt-MT-GraceNeural\",\r\n            [\"my-MM\"]: \"my-MM-NilarNeural\",\r\n            [\"nb-NO\"]: \"nb-NO-PernilleNeural\",\r\n            [\"nl-BE\"]: \"nl-BE-ArnaudNeural\",\r\n            [\"nl-NL\"]: \"nl-NL-ColetteNeural\",\r\n            [\"pl-PL\"]: \"pl-PL-AgnieszkaNeural\",\r\n            [\"pt-BR\"]: \"pt-BR-FranciscaNeural\",\r\n            [\"pt-PT\"]: \"pt-PT-DuarteNeural\",\r\n            [\"ro-RO\"]: \"ro-RO-AlinaNeural\",\r\n            [\"ru-RU\"]: \"ru-RU-SvetlanaNeural\",\r\n            [\"sk-SK\"]: \"sk-SK-LukasNeural\",\r\n            [\"sl-SI\"]: \"sl-SI-PetraNeural\",\r\n            [\"so-SO\"]: \"so-SO-MuuseNeural\",\r\n            [\"su-ID\"]: \"su-ID-JajangNeural\",\r\n            [\"sv-SE\"]: \"sv-SE-SofieNeural\",\r\n            [\"sw-KE\"]: \"sw-KE-RafikiNeural\",\r\n            [\"sw-TZ\"]: \"sw-TZ-DaudiNeural\",\r\n            [\"ta-IN\"]: \"ta-IN-PallaviNeural\",\r\n            [\"ta-LK\"]: \"ta-LK-KumarNeural\",\r\n            [\"ta-SG\"]: \"ta-SG-AnbuNeural\",\r\n            [\"te-IN\"]: \"te-IN-MohanNeural\",\r\n            [\"th-TH\"]: \"th-TH-PremwadeeNeural\",\r\n            [\"tr-TR\"]: \"tr-TR-AhmetNeural\",\r\n            [\"uk-UA\"]: \"uk-UA-OstapNeural\",\r\n            [\"ur-IN\"]: \"ur-IN-GulNeural\",\r\n            [\"ur-PK\"]: \"ur-PK-AsadNeural\",\r\n            [\"uz-UZ\"]: \"uz-UZ-MadinaNeural\",\r\n            [\"vi-VN\"]: \"vi-VN-HoaiMyNeural\",\r\n            [\"zh-CN\"]: \"zh-CN-XiaoxiaoNeural\",\r\n            [\"zh-HK\"]: \"zh-HK-HiuMaanNeural\",\r\n            [\"zh-TW\"]: \"zh-TW-HsiaoChenNeural\",\r\n            [\"zu-ZA\"]: \"zu-ZA-ThandoNeural\",\r\n        };\r\n\r\n        let language = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage, \"en-US\");\r\n        let voice = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice, \"\");\r\n        let ssml: string = SpeechSynthesizer.XMLEncode(text);\r\n        if (this.autoDetectSourceLanguage) {\r\n            language = \"en-US\";\r\n        } else {\r\n            voice = voice || languageToDefaultVoice[language];\r\n        }\r\n        if (voice) {\r\n            ssml = `<voice name='${voice}'>${ssml}</voice>`;\r\n        }\r\n        ssml = `<speak version='1.0' xmlns='http://www.w3.org/2001/10/synthesis' xmlns:mstts='http://www.w3.org/2001/mstts' xmlns:emo='http://www.w3.org/2009/10/emotionml' xml:lang='${language}'>${ssml}</speak>`;\r\n        return ssml;\r\n    }\r\n\r\n    /**\r\n     * Executes speech synthesis on plain text.\r\n     * The task returns the synthesis result.\r\n     * @member SpeechSynthesizer.prototype.speakTextAsync\r\n     * @function\r\n     * @public\r\n     * @param text - Text to be synthesized.\r\n     * @param cb - Callback that received the SpeechSynthesisResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     * @param stream - AudioOutputStream to receive the synthesized audio.\r\n     */\r\n    public speakTextAsync(text: string, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, stream?: AudioOutputStream | PushAudioOutputStreamCallback | PathLike): void {\r\n        this.speakImpl(text, false, cb, err, stream);\r\n    }\r\n\r\n    /**\r\n     * Executes speech synthesis on SSML.\r\n     * The task returns the synthesis result.\r\n     * @member SpeechSynthesizer.prototype.speakSsmlAsync\r\n     * @function\r\n     * @public\r\n     * @param ssml - SSML to be synthesized.\r\n     * @param cb - Callback that received the SpeechSynthesisResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     * @param stream - AudioOutputStream to receive the synthesized audio.\r\n     */\r\n    public speakSsmlAsync(ssml: string, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, stream?: AudioOutputStream | PushAudioOutputStreamCallback | PathLike): void {\r\n        this.speakImpl(ssml, true, cb, err, stream);\r\n    }\r\n\r\n    /**\r\n     * Get list of synthesis voices available.\r\n     * The task returns the synthesis voice result.\r\n     * @member SpeechSynthesizer.prototype.getVoicesAsync\r\n     * @function\r\n     * @async\r\n     * @public\r\n     * @param locale - Locale of voices in BCP-47 format; if left empty, get all available voices.\r\n     * @return {Promise<SynthesisVoicesResult>} - Promise of a SynthesisVoicesResult.\r\n     */\r\n    public async getVoicesAsync(locale: string = \"\"): Promise<SynthesisVoicesResult> {\r\n        return this.getVoices(locale);\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member SpeechSynthesizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, err);\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public get internalData(): object {\r\n        return this.privAdapter;\r\n    }\r\n\r\n    /**\r\n     * This method performs cleanup of resources.\r\n     * The Boolean parameter disposing indicates whether the method is called\r\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\r\n     * Derived classes should override this method to dispose resource if needed.\r\n     * @member SpeechSynthesizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - Flag to request disposal.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            if (this.privAdapter) {\r\n                await this.privAdapter.dispose();\r\n            }\r\n        }\r\n\r\n        this.privDisposed = true;\r\n    }\r\n\r\n    //\r\n    // ################################################################################################################\r\n    // IMPLEMENTATION.\r\n    // Move to independent class\r\n    // ################################################################################################################\r\n    //\r\n    protected createSynthesizerConfig(speechConfig: SpeechServiceConfig): SynthesizerConfig {\r\n        return new SynthesizerConfig(\r\n            speechConfig,\r\n            this.privProperties);\r\n    }\r\n\r\n    // Creates the synthesis adapter\r\n    protected createSynthesisAdapter(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        synthesizerConfig: SynthesizerConfig): SynthesisAdapterBase {\r\n        return new SynthesisAdapterBase(authentication, connectionFactory,\r\n            synthesizerConfig, this, this.audioConfig as AudioOutputConfigImpl);\r\n    }\r\n\r\n    protected implCommonSynthesizeSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const synthesizerConfig = this.createSynthesizerConfig(\r\n            new SpeechServiceConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion))));\r\n\r\n        const subscriptionKey = this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\r\n        const authentication = (subscriptionKey && subscriptionKey !== \"\") ?\r\n            new CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\r\n            new CognitiveTokenAuthentication(\r\n                (authFetchEventId: string): Promise<string> => {\r\n                    const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                },\r\n                (authFetchEventId: string): Promise<string> => {\r\n                    const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                });\r\n\r\n        this.privAdapter = this.createSynthesisAdapter(\r\n            authentication,\r\n            this.privConnectionFactory,\r\n            this.audioConfig,\r\n            synthesizerConfig);\r\n\r\n        this.privAdapter.audioOutputFormat = AudioOutputFormatImpl.fromSpeechSynthesisOutputFormat(\r\n            (SpeechSynthesisOutputFormat as any)[this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)]\r\n        );\r\n\r\n        this.privRestAdapter = new SynthesisRestAdapter(synthesizerConfig);\r\n    }\r\n\r\n    protected speakImpl(text: string, IsSsml: boolean, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, dataStream?: AudioOutputStream | PushAudioOutputStreamCallback | PathLike): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privDisposed);\r\n            const requestId = createNoDashGuid();\r\n            let audioDestination;\r\n            if (dataStream instanceof PushAudioOutputStreamCallback) {\r\n                audioDestination = new PushAudioOutputStreamImpl(dataStream);\r\n            } else if (dataStream instanceof PullAudioOutputStream) {\r\n                audioDestination = dataStream as PullAudioOutputStreamImpl;\r\n            } else if (dataStream !== undefined) {\r\n                audioDestination = new AudioFileWriter(dataStream as PathLike);\r\n            } else {\r\n                audioDestination = undefined;\r\n            }\r\n            this.synthesisRequestQueue.enqueue(new SynthesisRequest(requestId, text, IsSsml, (e: SpeechSynthesisResult): void => {\r\n                this.privSynthesizing = false;\r\n                if (!!cb) {\r\n                    try {\r\n                        cb(e);\r\n                    } catch (e) {\r\n                        if (!!err) {\r\n                            err(e);\r\n                        }\r\n                    }\r\n                }\r\n                cb = undefined;\r\n                /* tslint:disable:no-empty */\r\n                this.adapterSpeak().catch(() => { });\r\n\r\n            }, (e: string): void => {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }, audioDestination));\r\n\r\n            /* tslint:disable:no-empty */\r\n            this.adapterSpeak().catch(() => { });\r\n\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error);\r\n                }\r\n            }\r\n\r\n            // Destroy the synthesizer.\r\n            /* tslint:disable:no-empty */\r\n            this.dispose(true).catch(() => { });\r\n        }\r\n    }\r\n\r\n    protected async getVoices(locale: string): Promise<SynthesisVoicesResult> {\r\n        const requestId = createNoDashGuid();\r\n        const response: IRestResponse = await this.privRestAdapter.getVoicesList(requestId);\r\n        if (response.ok && Array.isArray(response.json)) {\r\n            let json = response.json;\r\n            if (!!locale && locale.length > 0) {\r\n                json = json.filter((item: any) => !!item.Locale && item.Locale.toLowerCase() === locale.toLowerCase() );\r\n            }\r\n            return new SynthesisVoicesResult(requestId, json);\r\n        } else {\r\n            return new SynthesisVoicesResult(requestId, { errorDetails: `Error: ${response.status}: ${response.statusText}`});\r\n        }\r\n   }\r\n\r\n    protected async adapterSpeak(): Promise<void> {\r\n        if (!this.privDisposed && !this.privSynthesizing) {\r\n            this.privSynthesizing = true;\r\n            const request: SynthesisRequest = await this.synthesisRequestQueue.dequeue();\r\n            return this.privAdapter.Speak(request.text, request.isSSML, request.requestId, request.cb, request.err, request.dataStream);\r\n        }\r\n    }\r\n\r\n    private static XMLEncode(text: string): string {\r\n        return text.replace(/&/g, \"&amp;\")\r\n            .replace(/</g, \"&lt;\")\r\n            .replace(/>/g, \"&gt;\")\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/'/g, \"&apos;\");\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class SynthesisRequest {\r\n    public requestId: string;\r\n    public text: string;\r\n    public isSSML: boolean;\r\n    public cb: (e: SpeechSynthesisResult) => void;\r\n    public err: (e: string) => void;\r\n    public dataStream: IAudioDestination;\r\n\r\n    constructor(requestId: string, text: string, isSSML: boolean, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, dataStream?: IAudioDestination) {\r\n        this.requestId = requestId;\r\n        this.text = text;\r\n        this.isSSML = isSSML;\r\n        this.cb = cb;\r\n        this.err = err;\r\n        this.dataStream = dataStream;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {Contracts} from \"./Contracts\";\r\nimport {\r\n    PropertyId,\r\n    RecognitionResult\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Pronunciation assessment results.\r\n * @class PronunciationAssessmentResult\r\n * Added in version 1.15.0.\r\n */\r\nexport class PronunciationAssessmentResult {\r\n    private privPronJson: any;\r\n\r\n    private constructor(jsonString: string) {\r\n        const j = JSON.parse(jsonString);\r\n        Contracts.throwIfNullOrUndefined(j.NBest[0], \"NBest\");\r\n        this.privPronJson = j.NBest[0];\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentResult.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {RecognitionResult} result The recognition result.\r\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\r\n     * @summary Creates an instance of the PronunciationAssessmentResult from recognition result.\r\n     */\r\n    public static fromResult(result: RecognitionResult): PronunciationAssessmentResult {\r\n        Contracts.throwIfNullOrUndefined(result, \"result\");\r\n        const json: string = result.properties.getProperty(PropertyId.SpeechServiceResponse_JsonResult);\r\n        Contracts.throwIfNullOrUndefined(json, \"json\");\r\n        return new PronunciationAssessmentResult(json);\r\n    }\r\n\r\n    /**\r\n     * Gets the detail result of pronunciation assessment.\r\n     * @member PronunciationAssessmentConfig.prototype.detailResult\r\n     * @function\r\n     * @public\r\n     * @returns {any} detail result.\r\n     */\r\n    public get detailResult(): any {\r\n        return this.privPronJson;\r\n    }\r\n\r\n    /**\r\n     * The score indicating the pronunciation accuracy of the given speech, which indicates\r\n     * how closely the phonemes match a native speaker's pronunciation.\r\n     * @member PronunciationAssessmentResult.prototype.accuracyScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Accuracy score.\r\n     */\r\n    public get accuracyScore(): number {\r\n        return this.detailResult.PronunciationAssessment.AccuracyScore;\r\n    }\r\n\r\n    /**\r\n     * The overall score indicating the pronunciation quality of the given speech.\r\n     * This is calculated from AccuracyScore, FluencyScore and CompletenessScore with weight.\r\n     * @member PronunciationAssessmentResult.prototype.pronunciationScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Pronunciation score.\r\n     */\r\n    public get pronunciationScore(): number {\r\n        return this.detailResult.PronunciationAssessment.PronScore;\r\n    }\r\n\r\n    /**\r\n     * The score indicating the completeness of the given speech by calculating the ratio of pronounced words towards entire input.\r\n     * @member PronunciationAssessmentResult.prototype.completenessScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Completeness score.\r\n     */\r\n    public get completenessScore(): number {\r\n        return this.detailResult.PronunciationAssessment.CompletenessScore;\r\n    }\r\n\r\n    /**\r\n     * The score indicating the fluency of the given speech.\r\n     * @member PronunciationAssessmentResult.prototype.fluencyScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Fluency score.\r\n     */\r\n    public get fluencyScore(): number {\r\n        return this.detailResult.PronunciationAssessment.FluencyScore;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\nimport { ConsoleLoggingListener } from \"./src/common.browser/Exports\";\r\nimport { Events } from \"./src/common/Exports\";\r\n\r\n// Common.Storage.SetLocalStorage(new Common.Browser.LocalStorage());\r\n// Common.Storage.SetSessionStorage(new Common.Browser.SessionStorage());\r\nEvents.instance.attachListener(new ConsoleLoggingListener());\r\n\r\n// Speech SDK API\r\nexport * from \"./src/sdk/Exports\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * @class Contracts\r\n * @private\r\n */\r\nexport class Contracts {\r\n    public static throwIfNullOrUndefined(param: any, name: string): void {\r\n        if (param === undefined || param === null) {\r\n            throw new Error(\"throwIfNullOrUndefined:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfNull(param: any, name: string): void {\r\n        if (param === null) {\r\n            throw new Error(\"throwIfNull:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfNullOrWhitespace(param: string, name: string): void {\r\n        Contracts.throwIfNullOrUndefined(param, name);\r\n\r\n        if ((\"\" + param).trim().length < 1) {\r\n            throw new Error(\"throwIfNullOrWhitespace:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfDisposed(isDisposed: boolean): void {\r\n        if (isDisposed) {\r\n            throw new Error(\"the object is already disposed\");\r\n        }\r\n    }\r\n\r\n    public static throwIfArrayEmptyOrWhitespace(array: string[], name: string): void {\r\n        Contracts.throwIfNullOrUndefined(array, name);\r\n\r\n        if (array.length === 0) {\r\n            throw new Error(\"throwIfArrayEmptyOrWhitespace:\" + name);\r\n        }\r\n\r\n        for (const item of array) {\r\n            Contracts.throwIfNullOrWhitespace(item, name);\r\n        }\r\n    }\r\n\r\n    public static throwIfFileDoesNotExist(param: any, name: string): void {\r\n        Contracts.throwIfNullOrWhitespace(param, name);\r\n\r\n        // TODO check for file existence.\r\n    }\r\n\r\n    public static throwIfNotUndefined(param: any, name: string): void {\r\n        if (param !== undefined) {\r\n            throw new Error(\"throwIfNotUndefined:\" + name);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ServiceRecognizerBase } from \"../common.speech/ServiceRecognizerBase\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    PronunciationAssessmentGradingSystem,\r\n    PronunciationAssessmentGranularity,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Pronunciation assessment configuration.\r\n * @class PronunciationAssessmentConfig\r\n * Added in version 1.15.0.\r\n */\r\nexport class PronunciationAssessmentConfig {\r\n    private privProperties: PropertyCollection;\r\n    private privPhonemeAlphabet: string;\r\n    private privNBestPhonemeCount: number;\r\n\r\n    /**\r\n     * PronunciationAssessmentConfig constructor.\r\n     * @constructor\r\n     * @param {string} referenceText\r\n     * @param gradingSystem\r\n     * @param granularity\r\n     * @param enableMiscue\r\n     */\r\n    public constructor(referenceText: string,\r\n                       gradingSystem: PronunciationAssessmentGradingSystem = PronunciationAssessmentGradingSystem.FivePoint,\r\n                       granularity: PronunciationAssessmentGranularity = PronunciationAssessmentGranularity.Phoneme,\r\n                       enableMiscue: boolean = false) {\r\n        Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\r\n        this.privProperties = new PropertyCollection();\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_GradingSystem, PronunciationAssessmentGradingSystem[gradingSystem]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Granularity, PronunciationAssessmentGranularity[granularity]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.fromJSON\r\n     * @function\r\n     * @public\r\n     * @param {string} json The json string containing the pronunciation assessment parameters.\r\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\r\n     * @summary Creates an instance of the PronunciationAssessmentConfig from json.\r\n     */\r\n    public static fromJSON(json: string): PronunciationAssessmentConfig {\r\n        Contracts.throwIfNullOrUndefined(json, \"json\");\r\n        const config = new PronunciationAssessmentConfig(\"\");\r\n        config.privProperties = new PropertyCollection();\r\n        config.properties.setProperty(PropertyId.PronunciationAssessment_Json, json);\r\n        return config;\r\n    }\r\n\r\n    public toJSON(): string {\r\n        this.updateJson();\r\n        return this.privProperties.getProperty(PropertyId.PronunciationAssessment_Params);\r\n    }\r\n\r\n    public applyTo(recognizer: Recognizer): void {\r\n        this.updateJson();\r\n        const recoBase = recognizer.internalData as ServiceRecognizerBase;\r\n        recoBase.speechContext.setPronunciationAssessmentParams(this.properties.getProperty(PropertyId.PronunciationAssessment_Params));\r\n    }\r\n\r\n    /**\r\n     * Gets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @returns {string} Reference text.\r\n     */\r\n    public get referenceText(): string {\r\n        return this.properties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @param {string} referenceText - Reference text.\r\n     */\r\n    public set referenceText(referenceText: string) {\r\n        Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\r\n        this.properties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n    }\r\n\r\n    /**\r\n     * Sets the phoneme alphabet.\r\n     * The valid values are \"SAPI\" (default) and \"IPA\".\r\n     * Added in version 1.20.0\r\n     * @member PronunciationAssessmentConfig.prototype.phonemeAlphabet\r\n     * @function\r\n     * @public\r\n     * @param {string} phonemeAlphabet - Phoneme alphabet.\r\n     */\r\n    public set phonemeAlphabet(phonemeAlphabet: string) {\r\n        Contracts.throwIfNullOrWhitespace(phonemeAlphabet, \"phonemeAlphabet\");\r\n        this.privPhonemeAlphabet = phonemeAlphabet;\r\n    }\r\n\r\n    /**\r\n     * Sets the nbest phoneme count\r\n     * Added in version 1.20.0\r\n     * @member PronunciationAssessmentConfig.prototype.nbestPhonemeCount\r\n     * @function\r\n     * @public\r\n     * @param {number} nbestPhonemeCount - NBest phoneme count.\r\n     */\r\n    public set nbestPhonemeCount(nbestPhonemeCount: number) {\r\n        this.privNBestPhonemeCount = nbestPhonemeCount;\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @return {PropertyCollection} Properties of the config.\r\n     * @summary Gets a pronunciation assessment config properties\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    private updateJson(): void {\r\n        const jsonString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Json, \"{}\");\r\n        const paramsJson = JSON.parse(jsonString);\r\n\r\n        const referenceText = this.privProperties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n        if (referenceText) {\r\n            paramsJson.referenceText = referenceText;\r\n        }\r\n\r\n        const gradingSystem = this.privProperties.getProperty(PropertyId.PronunciationAssessment_GradingSystem);\r\n        if (gradingSystem) {\r\n            paramsJson.gradingSystem = gradingSystem;\r\n        }\r\n\r\n        const granularity = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Granularity);\r\n        if (granularity) {\r\n            paramsJson.granularity = granularity;\r\n        }\r\n\r\n        if (this.privPhonemeAlphabet) {\r\n            paramsJson.phonemeAlphabet = this.privPhonemeAlphabet;\r\n        }\r\n\r\n        if (this.privNBestPhonemeCount) {\r\n            paramsJson.nbestPhonemeCount = this.privNBestPhonemeCount;\r\n        }\r\n\r\n        // always set dimension to Comprehensive\r\n        paramsJson.dimension = \"Comprehensive\";\r\n\r\n        const enableMiscueString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_EnableMiscue);\r\n        if (enableMiscueString === \"true\") {\r\n            paramsJson.enableMiscue = true;\r\n        } else if (enableMiscueString === \"false\") {\r\n            paramsJson.enableMiscue = false;\r\n        }\r\n\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the point system for pronunciation score calibration; default value is FivePoint.\r\n * Added in version 1.15.0\r\n * @class PronunciationAssessmentGradingSystem\r\n */\r\nexport enum PronunciationAssessmentGradingSystem {\r\n    /**\r\n     * Five point calibration\r\n     * @member PronunciationAssessmentGradingSystem.FivePoint\r\n     */\r\n    FivePoint = 1,\r\n\r\n    /**\r\n     * Hundred mark\r\n     * @member PronunciationAssessmentGradingSystem.HundredMark\r\n     */\r\n    HundredMark,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the pronunciation evaluation granularity; default value is Phoneme.\r\n * Added in version 1.15.0\r\n * @class PronunciationAssessmentGranularity\r\n */\r\nexport enum PronunciationAssessmentGranularity {\r\n    /**\r\n     * Shows the score on the full text, word and phoneme level\r\n     * @member PronunciationAssessmentGranularity.Phoneme\r\n     */\r\n    Phoneme = 1,\r\n\r\n    /**\r\n     * Shows the score on the full text and word level\r\n     * @member PronunciationAssessmentGranularity.Word\r\n     */\r\n    Word,\r\n\r\n    /**\r\n     * Shows the score on the full text level only\r\n     * @member PronunciationAssessmentGranularity.FullText\r\n     */\r\n    FullText,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyId } from \"./Exports\";\r\n\r\n/**\r\n * Represents collection of properties and their values.\r\n * @class PropertyCollection\r\n */\r\nexport class PropertyCollection {\r\n    private privKeys: string[] = [] as string[];\r\n    private privValues: string[] = [] as string[];\r\n\r\n    /**\r\n     * Returns the property value in type String. The parameter must have the same type as String.\r\n     * Currently only String, int and bool are allowed.\r\n     * If the name is not available, the specified defaultValue is returned.\r\n     * @member PropertyCollection.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} def - The default value which is returned if the parameter\r\n     *        is not available in the collection.\r\n     * @returns {string} value of the parameter.\r\n     */\r\n    public getProperty(key: PropertyId | string, def?: string): string {\r\n        let keyToUse: string;\r\n\r\n        if (typeof key === \"string\") {\r\n            keyToUse = key;\r\n        } else {\r\n            keyToUse = PropertyId[key];\r\n        }\r\n\r\n        for (let n = 0; n < this.privKeys.length; n++) {\r\n            if (this.privKeys[n] === keyToUse) {\r\n                return this.privValues[n];\r\n            }\r\n        }\r\n\r\n        return def;\r\n    }\r\n\r\n    /**\r\n     * Sets the String value of the parameter specified by name.\r\n     * @member PropertyCollection.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} value - The value of the parameter.\r\n     */\r\n    public setProperty(key: string | PropertyId, value: string): void {\r\n        let keyToUse: string;\r\n\r\n        if (typeof key === \"string\") {\r\n            keyToUse = key;\r\n        } else {\r\n            keyToUse = PropertyId[key];\r\n        }\r\n\r\n        for (let n = 0; n < this.privKeys.length; n++) {\r\n            if (this.privKeys[n] === keyToUse) {\r\n                this.privValues[n] = value;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.privKeys.push(keyToUse);\r\n        this.privValues.push(value);\r\n    }\r\n\r\n    /**\r\n     * Clones the collection.\r\n     * @member PropertyCollection.prototype.clone\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} A copy of the collection.\r\n     */\r\n    public clone(): PropertyCollection {\r\n        const clonedMap = new PropertyCollection();\r\n\r\n        for (let n = 0; n < this.privKeys.length; n++) {\r\n            clonedMap.privKeys.push(this.privKeys[n]);\r\n            clonedMap.privValues.push(this.privValues[n]);\r\n        }\r\n\r\n        return clonedMap;\r\n    }\r\n\r\n    /**\r\n     * Merges this set of properties into another, no overwrites.\r\n     * @member PropertyCollection.prototype.mergeTo\r\n     * @function\r\n     * @public\r\n     * @param {PropertyCollection} The collection to merge into.\r\n     */\r\n    public mergeTo(destinationCollection: PropertyCollection): void {\r\n        this.privKeys.forEach((key: string | PropertyId) => {\r\n            if (destinationCollection.getProperty(key, undefined) === undefined) {\r\n                const value = this.getProperty(key);\r\n                destinationCollection.setProperty(key, value);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get the keys in Property Collection.\r\n     * @member PropertyCollection.prototype.keys\r\n     * @function\r\n     * @public\r\n     * @returns {string []} Keys in the collection.\r\n     */\r\n    public get keys(): string[] {\r\n        return this.privKeys;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines speech property ids.\r\n * @class PropertyId\r\n */\r\nexport enum PropertyId {\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service subscription Key. If you are using an intent recognizer, you need to specify\r\n     * to specify the LUIS endpoint key for your particular LUIS app. Under normal circumstances, you shouldn't\r\n     * have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromSubscription]].\r\n     * @member PropertyId.SpeechServiceConnection_Key\r\n     */\r\n    SpeechServiceConnection_Key = 0,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service endpoint (url). Under normal circumstances, you shouldn't\r\n     * have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromEndpoint]].\r\n     * NOTE: This endpoint is not the same as the endpoint used to obtain an access token.\r\n     * @member PropertyId.SpeechServiceConnection_Endpoint\r\n     */\r\n    SpeechServiceConnection_Endpoint,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service region. Under normal circumstances, you shouldn't have to\r\n     * use this property directly.\r\n     * Instead, use [[SpeechConfig.fromSubscription]], [[SpeechConfig.fromEndpoint]], [[SpeechConfig.fromAuthorizationToken]].\r\n     * @member PropertyId.SpeechServiceConnection_Region\r\n     */\r\n    SpeechServiceConnection_Region,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service authorization token (aka access token). Under normal circumstances,\r\n     * you shouldn't have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromAuthorizationToken]], [[SpeechRecognizer.authorizationToken]],\r\n     * [[IntentRecognizer.authorizationToken]], [[TranslationRecognizer.authorizationToken]], [[SpeakerRecognizer.authorizationToken]].\r\n     * @member PropertyId.SpeechServiceAuthorization_Token\r\n     */\r\n    SpeechServiceAuthorization_Token,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service authorization type. Currently unused.\r\n     * @member PropertyId.SpeechServiceAuthorization_Type\r\n     */\r\n    SpeechServiceAuthorization_Type,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service endpoint id. Under normal circumstances, you shouldn't\r\n     * have to use this property directly.\r\n     * Instead, use [[SpeechConfig.endpointId]].\r\n     * NOTE: The endpoint id is available in the Speech Portal, listed under Endpoint Details.\r\n     * @member PropertyId.SpeechServiceConnection_EndpointId\r\n     */\r\n    SpeechServiceConnection_EndpointId,\r\n\r\n    /**\r\n     * The list of comma separated languages (BCP-47 format) used as target translation languages. Under normal circumstances,\r\n     * you shouldn't have to use this property directly.\r\n     * Instead use [[SpeechTranslationConfig.addTargetLanguage]],\r\n     * [[SpeechTranslationConfig.targetLanguages]], [[TranslationRecognizer.targetLanguages]].\r\n     * @member PropertyId.SpeechServiceConnection_TranslationToLanguages\r\n     */\r\n    SpeechServiceConnection_TranslationToLanguages,\r\n\r\n    /**\r\n     * The name of the Cognitive Service Text to Speech Service Voice. Under normal circumstances, you shouldn't have to use this\r\n     * property directly.\r\n     * Instead, use [[SpeechTranslationConfig.voiceName]].\r\n     * NOTE: Valid voice names can be found <a href=\"https://aka.ms/csspeech/voicenames\">here</a>.\r\n     * @member PropertyId.SpeechServiceConnection_TranslationVoice\r\n     */\r\n    SpeechServiceConnection_TranslationVoice,\r\n\r\n    /**\r\n     * Translation features.\r\n     * @member PropertyId.SpeechServiceConnection_TranslationFeatures\r\n     */\r\n    SpeechServiceConnection_TranslationFeatures,\r\n\r\n    /**\r\n     * The Language Understanding Service Region. Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Instead, use [[LanguageUnderstandingModel]].\r\n     * @member PropertyId.SpeechServiceConnection_IntentRegion\r\n     */\r\n    SpeechServiceConnection_IntentRegion,\r\n\r\n    /**\r\n     * The host name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyHostName,\r\n\r\n    /**\r\n     * The port of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyPort,\r\n\r\n    /**\r\n     * The user name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyUserName,\r\n\r\n    /**\r\n     * The password of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyPassword,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service recognition Mode. Can be \"INTERACTIVE\", \"CONVERSATION\", \"DICTATION\".\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * @member PropertyId.SpeechServiceConnection_RecoMode\r\n     */\r\n    SpeechServiceConnection_RecoMode,\r\n\r\n    /**\r\n     * The spoken language to be recognized (in BCP-47 format). Under normal circumstances, you shouldn't have to use this property\r\n     * directly.\r\n     * Instead, use [[SpeechConfig.speechRecognitionLanguage]].\r\n     * @member PropertyId.SpeechServiceConnection_RecoLanguage\r\n     */\r\n    SpeechServiceConnection_RecoLanguage,\r\n\r\n    /**\r\n     * The session id. This id is a universally unique identifier (aka UUID) representing a specific binding of an audio input stream\r\n     * and the underlying speech recognition instance to which it is bound. Under normal circumstances, you shouldn't have to use this\r\n     * property directly.\r\n     * Instead use [[SessionEventArgs.sessionId]].\r\n     * @member PropertyId.Speech_SessionId\r\n     */\r\n    Speech_SessionId,\r\n\r\n    /**\r\n     * The spoken language to be synthesized (e.g. en-US)\r\n     * @member PropertyId.SpeechServiceConnection_SynthLanguage\r\n     */\r\n    SpeechServiceConnection_SynthLanguage,\r\n\r\n    /**\r\n     * The name of the TTS voice to be used for speech synthesis\r\n     * @member PropertyId.SpeechServiceConnection_SynthVoice\r\n     */\r\n    SpeechServiceConnection_SynthVoice,\r\n\r\n    /**\r\n     * The string to specify TTS output audio format\r\n     * @member PropertyId.SpeechServiceConnection_SynthOutputFormat\r\n     */\r\n    SpeechServiceConnection_SynthOutputFormat,\r\n\r\n    /**\r\n     * The list of comma separated languages used as possible source languages\r\n     * Added in version 1.13.0\r\n     * @member PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages\r\n     */\r\n    SpeechServiceConnection_AutoDetectSourceLanguages,\r\n\r\n    /**\r\n     * The requested Cognitive Services Speech Service response output format (simple or detailed). Under normal circumstances, you shouldn't have\r\n     * to use this property directly.\r\n     * Instead use [[SpeechConfig.outputFormat]].\r\n     * @member PropertyId.SpeechServiceResponse_RequestDetailedResultTrueFalse\r\n     */\r\n    SpeechServiceResponse_RequestDetailedResultTrueFalse,\r\n\r\n    /**\r\n     * The requested Cognitive Services Speech Service response output profanity level. Currently unused.\r\n     * @member PropertyId.SpeechServiceResponse_RequestProfanityFilterTrueFalse\r\n     */\r\n    SpeechServiceResponse_RequestProfanityFilterTrueFalse,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service response output (in JSON format). This property is available on recognition result objects only.\r\n     * @member PropertyId.SpeechServiceResponse_JsonResult\r\n     */\r\n    SpeechServiceResponse_JsonResult,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service error details (in JSON format). Under normal circumstances, you shouldn't have to\r\n     * use this property directly. Instead use [[CancellationDetails.errorDetails]].\r\n     * @member PropertyId.SpeechServiceResponse_JsonErrorDetails\r\n     */\r\n    SpeechServiceResponse_JsonErrorDetails,\r\n\r\n    /**\r\n     * The cancellation reason. Currently unused.\r\n     * @member PropertyId.CancellationDetails_Reason\r\n     */\r\n    CancellationDetails_Reason,\r\n\r\n    /**\r\n     * The cancellation text. Currently unused.\r\n     * @member PropertyId.CancellationDetails_ReasonText\r\n     */\r\n    CancellationDetails_ReasonText,\r\n\r\n    /**\r\n     * The Cancellation detailed text. Currently unused.\r\n     * @member PropertyId.CancellationDetails_ReasonDetailedText\r\n     */\r\n    CancellationDetails_ReasonDetailedText,\r\n\r\n    /**\r\n     * The Language Understanding Service response output (in JSON format). Available via [[IntentRecognitionResult]]\r\n     * @member PropertyId.LanguageUnderstandingServiceResponse_JsonResult\r\n     */\r\n    LanguageUnderstandingServiceResponse_JsonResult,\r\n\r\n    /**\r\n     * The URL string built from speech configuration.\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * NOTE: Added in version 1.7.0.\r\n     */\r\n    SpeechServiceConnection_Url,\r\n\r\n    /**\r\n     * The initial silence timeout value (in milliseconds) used by the service.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceConnection_InitialSilenceTimeoutMs,\r\n\r\n    /**\r\n     * The end silence timeout value (in milliseconds) used by the service.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceConnection_EndSilenceTimeoutMs,\r\n\r\n    /**\r\n     * A boolean value specifying whether audio logging is enabled in the service or not.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceConnection_EnableAudioLogging,\r\n\r\n    /**\r\n     * The requested Cognitive Services Speech Service response output profanity setting.\r\n     * Allowed values are \"masked\", \"removed\", and \"raw\".\r\n     * Added in version 1.7.0.\r\n     */\r\n    SpeechServiceResponse_ProfanityOption,\r\n\r\n    /**\r\n     * A string value specifying which post processing option should be used by service.\r\n     * Allowed values are \"TrueText\".\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceResponse_PostProcessingOption,\r\n\r\n    /**\r\n     *  A boolean value specifying whether to include word-level timestamps in the response result.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceResponse_RequestWordLevelTimestamps,\r\n\r\n    /**\r\n     * The number of times a word has to be in partial results to be returned.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceResponse_StablePartialResultThreshold,\r\n\r\n    /**\r\n     * A string value specifying the output format option in the response result. Internal use only.\r\n     * Added in version 1.7.0.\r\n     */\r\n    SpeechServiceResponse_OutputFormatOption,\r\n\r\n    /**\r\n     * A boolean value to request for stabilizing translation partial results by omitting words in the end.\r\n     * Added in version 1.7.0.\r\n     */\r\n    SpeechServiceResponse_TranslationRequestStablePartialResult,\r\n\r\n    /**\r\n     * Identifier used to connect to the backend service.\r\n     * @member PropertyId.Conversation_ApplicationId\r\n     */\r\n    Conversation_ApplicationId,\r\n\r\n    /**\r\n     * Type of dialog backend to connect to.\r\n     * @member PropertyId.Conversation_DialogType\r\n     */\r\n    Conversation_DialogType,\r\n\r\n    /**\r\n     * Silence timeout for listening\r\n     * @member PropertyId.Conversation_Initial_Silence_Timeout\r\n     */\r\n    Conversation_Initial_Silence_Timeout,\r\n\r\n    /**\r\n     * From Id to add to speech recognition activities.\r\n     * @member PropertyId.Conversation_From_Id\r\n     */\r\n    Conversation_From_Id,\r\n\r\n    /**\r\n     * ConversationId for the session.\r\n     * @member PropertyId.Conversation_Conversation_Id\r\n     */\r\n    Conversation_Conversation_Id,\r\n\r\n    /**\r\n     * Comma separated list of custom voice deployment ids.\r\n     * @member PropertyId.Conversation_Custom_Voice_Deployment_Ids\r\n     */\r\n    Conversation_Custom_Voice_Deployment_Ids,\r\n\r\n    /**\r\n     * Speech activity template, stamp properties from the template on the activity generated by the service for speech.\r\n     * @member PropertyId.Conversation_Speech_Activity_Template\r\n     * Added in version 1.10.0.\r\n     */\r\n    Conversation_Speech_Activity_Template,\r\n\r\n    /**\r\n     * Enables or disables the receipt of turn status messages as obtained on the turnStatusReceived event.\r\n     * @member PropertyId.Conversation_Request_Bot_Status_Messages\r\n     * Added in version 1.15.0.\r\n     */\r\n    Conversation_Request_Bot_Status_Messages,\r\n\r\n    /**\r\n     * Specifies the connection ID to be provided in the Agent configuration message, e.g. a Direct Line token for\r\n     * channel authentication.\r\n     * Added in version 1.15.1.\r\n     */\r\n    Conversation_Agent_Connection_Id,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service host (url). Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromHost]].\r\n     */\r\n    SpeechServiceConnection_Host,\r\n\r\n    /**\r\n     * Set the host for service calls to the Conversation Translator REST management and websocket calls.\r\n     */\r\n    ConversationTranslator_Host,\r\n\r\n    /**\r\n     * Optionally set the the host's display name.\r\n     * Used when joining a conversation.\r\n     */\r\n    ConversationTranslator_Name,\r\n\r\n    /**\r\n     * Optionally set a value for the X-CorrelationId request header.\r\n     * Used for troubleshooting errors in the server logs. It should be a valid guid.\r\n     */\r\n    ConversationTranslator_CorrelationId,\r\n\r\n    /**\r\n     * Set the conversation token to be sent to the speech service. This enables the\r\n     * service to service call from the speech service to the Conversation Translator service for relaying\r\n     * recognitions. For internal use.\r\n     */\r\n    ConversationTranslator_Token,\r\n\r\n    /**\r\n     * The reference text of the audio for pronunciation evaluation.\r\n     * For this and the following pronunciation assessment parameters, see\r\n     * https://docs.microsoft.com/azure/cognitive-services/speech-service/rest-speech-to-text#pronunciation-assessment-parameters for details.\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_ReferenceText,\r\n\r\n    /**\r\n     * The point system for pronunciation score calibration (FivePoint or HundredMark).\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_GradingSystem,\r\n\r\n    /**\r\n     * The pronunciation evaluation granularity (Phoneme, Word, or FullText).\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_Granularity,\r\n\r\n    /**\r\n     * Defines if enable miscue calculation.\r\n     * With this enabled, the pronounced words will be compared to the reference text,\r\n     * and will be marked with omission/insertion based on the comparison. The default setting is False.\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_EnableMiscue,\r\n\r\n    /**\r\n     * The json string of pronunciation assessment parameters\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_Json,\r\n\r\n    /**\r\n     * Pronunciation assessment parameters.\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_Params,\r\n\r\n    /**\r\n     * Version of Speaker Recognition API to use.\r\n     * Added in version 1.18.0\r\n     */\r\n    SpeakerRecognition_Api_Version\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the possible reasons a recognition result might be generated.\r\n * @class ResultReason\r\n */\r\nexport enum ResultReason {\r\n    /**\r\n     * Indicates speech could not be recognized. More details\r\n     * can be found in the NoMatchDetails object.\r\n     * @member ResultReason.NoMatch\r\n     */\r\n    NoMatch,\r\n\r\n    /**\r\n     * Indicates that the recognition was canceled. More details\r\n     * can be found using the CancellationDetails object.\r\n     * @member ResultReason.Canceled\r\n     */\r\n    Canceled,\r\n\r\n    /**\r\n     * Indicates the speech result contains hypothesis text.\r\n     * @member ResultReason.RecognizedSpeech\r\n     */\r\n    RecognizingSpeech,\r\n\r\n    /**\r\n     * Indicates the speech result contains final text that has been recognized.\r\n     * Speech Recognition is now complete for this phrase.\r\n     * @member ResultReason.RecognizedSpeech\r\n     */\r\n    RecognizedSpeech,\r\n\r\n    /**\r\n     * Indicates the speech result contains a finalized acceptance of a provided keyword.\r\n     * Speech recognition will continue unless otherwise configured.\r\n     * @member ResultReason.RecognizedKeyword\r\n     */\r\n    RecognizedKeyword,\r\n\r\n    /**\r\n     * Indicates the intent result contains hypothesis text and intent.\r\n     * @member ResultReason.RecognizingIntent\r\n     */\r\n    RecognizingIntent,\r\n\r\n    /**\r\n     * Indicates the intent result contains final text and intent.\r\n     * Speech Recognition and Intent determination are now complete for this phrase.\r\n     * @member ResultReason.RecognizedIntent\r\n     */\r\n    RecognizedIntent,\r\n\r\n    /**\r\n     * Indicates the translation result contains hypothesis text and its translation(s).\r\n     * @member ResultReason.TranslatingSpeech\r\n     */\r\n    TranslatingSpeech,\r\n\r\n    /**\r\n     * Indicates the translation result contains final text and corresponding translation(s).\r\n     * Speech Recognition and Translation are now complete for this phrase.\r\n     * @member ResultReason.TranslatedSpeech\r\n     */\r\n    TranslatedSpeech,\r\n\r\n    /**\r\n     * Indicates the synthesized audio result contains a non-zero amount of audio data\r\n     * @member ResultReason.SynthesizingAudio\r\n     */\r\n    SynthesizingAudio,\r\n\r\n    /**\r\n     * Indicates the synthesized audio is now complete for this phrase.\r\n     * @member ResultReason.SynthesizingAudioCompleted\r\n     */\r\n    SynthesizingAudioCompleted,\r\n\r\n    /**\r\n     * Indicates the speech synthesis is now started\r\n     * @member ResultReason.SynthesizingAudioStarted\r\n     */\r\n    SynthesizingAudioStarted,\r\n\r\n    /**\r\n     * Indicates the voice profile is being enrolled and customers need to send more audio to create a voice profile.\r\n     * @member ResultReason.EnrollingVoiceProfile\r\n     */\r\n    EnrollingVoiceProfile,\r\n\r\n    /**\r\n     * Indicates the voice profile has been enrolled.\r\n     * @member ResultReason.EnrolledVoiceProfile\r\n     */\r\n    EnrolledVoiceProfile,\r\n\r\n    /**\r\n     * Indicates successful identification of some speakers.\r\n     * @member ResultReason.RecognizedSpeakers\r\n     */\r\n    RecognizedSpeakers,\r\n\r\n    /**\r\n     * Indicates successfully verified one speaker.\r\n     * @member ResultReason.RecognizedSpeaker\r\n     */\r\n    RecognizedSpeaker,\r\n\r\n    /**\r\n     * Indicates a voice profile has been reset successfully.\r\n     * @member ResultReason.ResetVoiceProfile\r\n     */\r\n    ResetVoiceProfile,\r\n\r\n    /**\r\n     * Indicates a voice profile has been deleted successfully.\r\n     * @member ResultReason.DeletedVoiceProfile\r\n     */\r\n    DeletedVoiceProfile,\r\n\r\n    /**\r\n     * Indicates synthesis voices list has been successfully retrieved.\r\n     * @member ResultReason.VoicesListRetrieved\r\n     */\r\n    VoicesListRetrieved,\r\n}\r\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , CRHTLF = /[\\n\\r\\t]/g\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i\n  , windowsDriveLetter = /^[a-zA-Z]:/\n  , whitespace = /^[ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/;\n\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(whitespace, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4]\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    extracted.protocol === 'file:' && (\n      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      index = parse === '@'\n        ? address.lastIndexOf(parse)\n        : address.indexOf(parse);\n\n      if (~index) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n\n  if (url.auth) {\n    index = url.auth.indexOf(':');\n\n    if (~index) {\n      url.username = url.auth.slice(0, index);\n      url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n      url.password = url.auth.slice(index + 1);\n      url.password = encodeURIComponent(decodeURIComponent(url.password))\n    } else {\n      url.username = encodeURIComponent(decodeURIComponent(url.auth));\n    }\n\n    url.auth = url.password ? url.username +':'+ url.password : url.username;\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    case 'username':\n    case 'password':\n      url[part] = encodeURIComponent(value);\n      break;\n\n    case 'auth':\n      var index = value.indexOf(':');\n\n      if (~index) {\n        url.username = value.slice(0, index);\n        url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n        url.password = value.slice(index + 1);\n        url.password = encodeURIComponent(decodeURIComponent(url.password));\n      } else {\n        url.username = encodeURIComponent(decodeURIComponent(value));\n      }\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.auth = url.password ? url.username +':'+ url.password : url.username;\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result =\n    protocol +\n    ((url.protocol && url.slashes) || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  } else if (url.password) {\n    result += ':'+ url.password;\n    result += '@';\n  } else if (\n    url.protocol !== 'file:' &&\n    isSpecial(url.protocol) &&\n    !url.host &&\n    url.pathname !== '/'\n  ) {\n    //\n    // Add back the empty userinfo, otherwise the original invalid URL\n    // might be transformed into a valid one with `url.pathname` as host.\n    //\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"52918893\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"stt-react-azure:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/stt_react_azure/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkstt_react_azure\"] = self[\"webpackChunkstt_react_azure\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as cookie from 'cookie';\r\nexport function hasDocumentCookie() {\r\n    // Can we get/set cookies on document.cookie?\r\n    return typeof document === 'object' && typeof document.cookie === 'string';\r\n}\r\nexport function cleanCookies() {\r\n    document.cookie.split(';').forEach(function (c) {\r\n        document.cookie = c\r\n            .replace(/^ +/, '')\r\n            .replace(/=.*/, '=;expires=' + new Date().toUTCString() + ';path=/');\r\n    });\r\n}\r\nexport function parseCookies(cookies, options) {\r\n    if (typeof cookies === 'string') {\r\n        return cookie.parse(cookies, options);\r\n    }\r\n    else if (typeof cookies === 'object' && cookies !== null) {\r\n        return cookies;\r\n    }\r\n    else {\r\n        return {};\r\n    }\r\n}\r\nexport function isParsingCookie(value, doNotParse) {\r\n    if (typeof doNotParse === 'undefined') {\r\n        // We guess if the cookie start with { or [, it has been serialized\r\n        doNotParse =\r\n            !value || (value[0] !== '{' && value[0] !== '[' && value[0] !== '\"');\r\n    }\r\n    return !doNotParse;\r\n}\r\nexport function readCookie(value, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var cleanValue = cleanupCookieValue(value);\r\n    if (isParsingCookie(cleanValue, options.doNotParse)) {\r\n        try {\r\n            return JSON.parse(cleanValue);\r\n        }\r\n        catch (e) {\r\n            // At least we tried\r\n        }\r\n    }\r\n    // Ignore clean value if we failed the deserialization\r\n    // It is not relevant anymore to trim those values\r\n    return value;\r\n}\r\nfunction cleanupCookieValue(value) {\r\n    // express prepend j: before serializing a cookie\r\n    if (value && value[0] === 'j' && value[1] === ':') {\r\n        return value.substr(2);\r\n    }\r\n    return value;\r\n}\r\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as cookie from 'cookie';\r\nimport { hasDocumentCookie, parseCookies, readCookie } from './utils';\r\nvar Cookies = /** @class */ (function () {\r\n    function Cookies(cookies, options) {\r\n        var _this = this;\r\n        this.changeListeners = [];\r\n        this.HAS_DOCUMENT_COOKIE = false;\r\n        this.cookies = parseCookies(cookies, options);\r\n        new Promise(function () {\r\n            _this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\r\n        }).catch(function () { });\r\n    }\r\n    Cookies.prototype._updateBrowserValues = function (parseOptions) {\r\n        if (!this.HAS_DOCUMENT_COOKIE) {\r\n            return;\r\n        }\r\n        this.cookies = cookie.parse(document.cookie, parseOptions);\r\n    };\r\n    Cookies.prototype._emitChange = function (params) {\r\n        for (var i = 0; i < this.changeListeners.length; ++i) {\r\n            this.changeListeners[i](params);\r\n        }\r\n    };\r\n    Cookies.prototype.get = function (name, options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        return readCookie(this.cookies[name], options);\r\n    };\r\n    Cookies.prototype.getAll = function (options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        var result = {};\r\n        for (var name_1 in this.cookies) {\r\n            result[name_1] = readCookie(this.cookies[name_1], options);\r\n        }\r\n        return result;\r\n    };\r\n    Cookies.prototype.set = function (name, value, options) {\r\n        var _a;\r\n        if (typeof value === 'object') {\r\n            value = JSON.stringify(value);\r\n        }\r\n        this.cookies = __assign(__assign({}, this.cookies), (_a = {}, _a[name] = value, _a));\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, value, options);\r\n        }\r\n        this._emitChange({ name: name, value: value, options: options });\r\n    };\r\n    Cookies.prototype.remove = function (name, options) {\r\n        var finalOptions = (options = __assign(__assign({}, options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));\r\n        this.cookies = __assign({}, this.cookies);\r\n        delete this.cookies[name];\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, '', finalOptions);\r\n        }\r\n        this._emitChange({ name: name, value: undefined, options: options });\r\n    };\r\n    Cookies.prototype.addChangeListener = function (callback) {\r\n        this.changeListeners.push(callback);\r\n    };\r\n    Cookies.prototype.removeChangeListener = function (callback) {\r\n        var idx = this.changeListeners.indexOf(callback);\r\n        if (idx >= 0) {\r\n            this.changeListeners.splice(idx, 1);\r\n        }\r\n    };\r\n    return Cookies;\r\n}());\r\nexport default Cookies;\r\n","import Cookies from './Cookies';\r\nexport default Cookies;\r\n","import Cookie from \"universal-cookie\";\r\n\r\nexport const getTokenOrRefresh = async () => {\r\n    const cookie = new Cookie();\r\n    const speechToken = cookie.get('speech-token');\r\n    const speechKey = process.env.REACT_APP_SPEECH_KEY;\r\n    const speechRegion = process.env.REACT_APP_SPEECH_REGION;   \r\n\r\n    let tokenResponse;\r\n    \r\n    if( !speechToken ){\r\n        if (speechKey === 'paste-your-speech-key-here' || speechRegion === 'paste-your-speech-region-here') {\r\n            tokenResponse = {\r\n                authToken: null,\r\n                error: 'You forgot to add your speech key or region to the .env file'\r\n            };\r\n        } else {\r\n            const headers = {\r\n                'Ocp-Apim-Subscription-Key': speechKey,\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            };\r\n\r\n            await fetch(`https://${speechRegion}.api.cognitive.microsoft.com/sts/v1.0/issueToken`, {\r\n                method: \"post\",\r\n                headers\r\n            }).then( response => {\r\n                if(response.ok) {\r\n                    return response.text().then(data => {\r\n                        //console.log('Token fetched from API', data);\r\n                        cookie.set('speech-token', speechRegion + ':' + data, {maxAge: 540, path: '/'});\r\n                        tokenResponse = {\r\n                            authToken: data,\r\n                            region: speechRegion\r\n                        };\r\n                    });    \r\n                } else {\r\n                    tokenResponse = {\r\n                        authToken: null,\r\n                        error: \"Network reponse OK but HTTP response not OK\"\r\n                    };\r\n                }\r\n            }).catch(err => {\r\n                tokenResponse = {\r\n                    authToken: null,\r\n                    error: err\r\n                };\r\n            });\r\n\r\n            return tokenResponse;\r\n        }        \r\n    } else {\r\n        //console.log('Token fetched from cookie', speechToken);\r\n        const idx = speechToken.indexOf(\":\");\r\n        return { authToken: speechToken.slice(idx + 1), region: speechToken.slice(0, idx) };\r\n    }\r\n}","import * as React from 'react';\nexport var ManagerReferenceNodeContext = React.createContext();\nexport var ManagerReferenceNodeSetterContext = React.createContext();\nexport function Manager(_ref) {\n  var children = _ref.children;\n\n  var _React$useState = React.useState(null),\n      referenceNode = _React$useState[0],\n      setReferenceNode = _React$useState[1];\n\n  var hasUnmounted = React.useRef(false);\n  React.useEffect(function () {\n    return function () {\n      hasUnmounted.current = true;\n    };\n  }, []);\n  var handleSetReferenceNode = React.useCallback(function (node) {\n    if (!hasUnmounted.current) {\n      setReferenceNode(node);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(ManagerReferenceNodeContext.Provider, {\n    value: referenceNode\n  }, /*#__PURE__*/React.createElement(ManagerReferenceNodeSetterContext.Provider, {\n    value: handleSetReferenceNode\n  }, children));\n}","import * as React from 'react';\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array,\n * otherwise returns the argument. Used for Preact compatibility.\n */\nexport var unwrapArray = function unwrapArray(arg) {\n  return Array.isArray(arg) ? arg[0] : arg;\n};\n/**\n * Takes a maybe-undefined function and arbitrary args and invokes the function\n * only if it is defined.\n */\n\nexport var safeInvoke = function safeInvoke(fn) {\n  if (typeof fn === 'function') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return fn.apply(void 0, args);\n  }\n};\n/**\n * Sets a ref using either a ref callback or a ref object\n */\n\nexport var setRef = function setRef(ref, node) {\n  // if its a function call it\n  if (typeof ref === 'function') {\n    return safeInvoke(ref, node);\n  } // otherwise we should treat it as a ref object\n  else if (ref != null) {\n      ref.current = node;\n    }\n};\n/**\n * Simple ponyfill for Object.fromEntries\n */\n\nexport var fromEntries = function fromEntries(entries) {\n  return entries.reduce(function (acc, _ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    acc[key] = value;\n    return acc;\n  }, {});\n};\n/**\n * Small wrapper around `useLayoutEffect` to get rid of the warning on SSR envs\n */\n\nexport var useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? React.useLayoutEffect : React.useEffect;","export default function getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}","import getWindow from \"./getWindow.js\";\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nexport { isElement, isHTMLElement, isShadowRoot };","export var max = Math.max;\nexport var min = Math.min;\nexport var round = Math.round;","import { isHTMLElement } from \"./instanceOf.js\";\nimport { round } from \"../utils/math.js\";\nexport default function getBoundingClientRect(element, includeScale) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  var rect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (isHTMLElement(element) && includeScale) {\n    var offsetHeight = element.offsetHeight;\n    var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale\n    // Fallback to 1 in case both values are `0`\n\n    if (offsetWidth > 0) {\n      scaleX = round(rect.width) / offsetWidth || 1;\n    }\n\n    if (offsetHeight > 0) {\n      scaleY = round(rect.height) / offsetHeight || 1;\n    }\n  }\n\n  return {\n    width: rect.width / scaleX,\n    height: rect.height / scaleY,\n    top: rect.top / scaleY,\n    right: rect.right / scaleX,\n    bottom: rect.bottom / scaleY,\n    left: rect.left / scaleX,\n    x: rect.left / scaleX,\n    y: rect.top / scaleY\n  };\n}","import getWindow from \"./getWindow.js\";\nexport default function getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}","export default function getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}","import { isElement } from \"./instanceOf.js\";\nexport default function getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nexport default function getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}","import getWindow from \"./getWindow.js\";\nexport default function getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}","import getComputedStyle from \"./getComputedStyle.js\";\nexport default function isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport { round } from \"../utils/math.js\";\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}","import getWindowScroll from \"./getWindowScroll.js\";\nimport getWindow from \"./getWindow.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getHTMLElementScroll from \"./getHTMLElementScroll.js\";\nexport default function getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}","export default function getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}","import getNodeName from \"./getNodeName.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport { isShadowRoot } from \"./instanceOf.js\";\nexport default function getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}","import getParentNode from \"./getParentNode.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nexport default function getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}","import getScrollParent from \"./getScrollParent.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getWindow from \"./getWindow.js\";\nimport isScrollParent from \"./isScrollParent.js\";\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nexport default function listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}","import getNodeName from \"./getNodeName.js\";\nexport default function isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}","import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;\n  var isIE = navigator.userAgent.indexOf('Trident') !== -1;\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}","export var top = 'top';\nexport var bottom = 'bottom';\nexport var right = 'right';\nexport var left = 'left';\nexport var auto = 'auto';\nexport var basePlacements = [top, bottom, right, left];\nexport var start = 'start';\nexport var end = 'end';\nexport var clippingParents = 'clippingParents';\nexport var viewport = 'viewport';\nexport var popper = 'popper';\nexport var reference = 'reference';\nexport var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nexport var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nexport var beforeRead = 'beforeRead';\nexport var read = 'read';\nexport var afterRead = 'afterRead'; // pure-logic modifiers\n\nexport var beforeMain = 'beforeMain';\nexport var main = 'main';\nexport var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nexport var beforeWrite = 'beforeWrite';\nexport var write = 'write';\nexport var afterWrite = 'afterWrite';\nexport var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];","import { modifierPhases } from \"../enums.js\"; // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nexport default function orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}","export default function debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}","import getCompositeRect from \"./dom-utils/getCompositeRect.js\";\nimport getLayoutRect from \"./dom-utils/getLayoutRect.js\";\nimport listScrollParents from \"./dom-utils/listScrollParents.js\";\nimport getOffsetParent from \"./dom-utils/getOffsetParent.js\";\nimport getComputedStyle from \"./dom-utils/getComputedStyle.js\";\nimport orderModifiers from \"./utils/orderModifiers.js\";\nimport debounce from \"./utils/debounce.js\";\nimport validateModifiers from \"./utils/validateModifiers.js\";\nimport uniqueBy from \"./utils/uniqueBy.js\";\nimport getBasePlacement from \"./utils/getBasePlacement.js\";\nimport mergeByName from \"./utils/mergeByName.js\";\nimport detectOverflow from \"./utils/detectOverflow.js\";\nimport { isElement } from \"./dom-utils/instanceOf.js\";\nimport { auto } from \"./enums.js\";\nvar INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';\nvar INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nexport function popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        }); // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n\n        if (process.env.NODE_ENV !== \"production\") {\n          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref) {\n            var name = _ref.name;\n            return name;\n          });\n          validateModifiers(modifiers);\n\n          if (getBasePlacement(state.options.placement) === auto) {\n            var flipModifier = state.orderedModifiers.find(function (_ref2) {\n              var name = _ref2.name;\n              return name === 'flip';\n            });\n\n            if (!flipModifier) {\n              console.error(['Popper: \"auto\" placements require the \"flip\" modifier be', 'present and enabled to work.'].join(' '));\n            }\n          }\n\n          var _getComputedStyle = getComputedStyle(popper),\n              marginTop = _getComputedStyle.marginTop,\n              marginRight = _getComputedStyle.marginRight,\n              marginBottom = _getComputedStyle.marginBottom,\n              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can\n          // cause bugs with positioning, so we'll warn the consumer\n\n\n          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {\n            return parseFloat(margin);\n          })) {\n            console.warn(['Popper: CSS \"margin\" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));\n          }\n        }\n\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(INVALID_ELEMENT_ERROR);\n          }\n\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n        var __debug_loops__ = 0;\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (process.env.NODE_ENV !== \"production\") {\n            __debug_loops__ += 1;\n\n            if (__debug_loops__ > 100) {\n              console.error(INFINITE_LOOP_ERROR);\n              break;\n            }\n          }\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(INVALID_ELEMENT_ERROR);\n      }\n\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref3) {\n        var name = _ref3.name,\n            _ref3$options = _ref3.options,\n            options = _ref3$options === void 0 ? {} : _ref3$options,\n            effect = _ref3.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nexport var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\nexport { detectOverflow };","export default function mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}","import getWindow from \"../dom-utils/getWindow.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n};","import { auto } from \"../enums.js\";\nexport default function getBasePlacement(placement) {\n  return placement.split('-')[0];\n}","export default function getVariation(placement) {\n  return placement.split('-')[1];\n}","export default function getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}","import getBasePlacement from \"./getBasePlacement.js\";\nimport getVariation from \"./getVariation.js\";\nimport getMainAxisFromPlacement from \"./getMainAxisFromPlacement.js\";\nimport { top, right, bottom, left, start, end } from \"../enums.js\";\nexport default function computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}","import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};","import { top, left, right, bottom, end } from \"../enums.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getWindow from \"../dom-utils/getWindow.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getComputedStyle from \"../dom-utils/getComputedStyle.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport { round } from \"../utils/math.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var win = window;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0\n  };\n}\n\nexport function mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === top || (placement === left || placement === right) && variation === end) {\n      sideY = bottom;\n      var offsetY = isFixed && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left || (placement === top || placement === bottom) && variation === end) {\n      sideX = right;\n      var offsetX = isFixed && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || '';\n\n    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {\n      return transitionProperty.indexOf(property) >= 0;\n    })) {\n      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".', '\\n\\n', 'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\\n\\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));\n    }\n  }\n\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { top, left, right, placements } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};","var hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nexport default function getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}","var hash = {\n  start: 'end',\n  end: 'start'\n};\nexport default function getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}","import { isShadowRoot } from \"./instanceOf.js\";\nexport default function contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}","export default function rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}","import { viewport } from \"../enums.js\";\nimport getViewportRect from \"./getViewportRect.js\";\nimport getDocumentRect from \"./getDocumentRect.js\";\nimport listScrollParents from \"./listScrollParents.js\";\nimport getOffsetParent from \"./getOffsetParent.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport contains from \"./contains.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport rectToClientRect from \"../utils/rectToClientRect.js\";\nimport { max, min } from \"../utils/math.js\";\n\nfunction getInnerBoundingClientRect(element) {\n  var rect = getBoundingClientRect(element);\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nexport default function getClippingRect(element, boundary, rootBoundary) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}","import getWindow from \"./getWindow.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nexport default function getViewportRect(element) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper\n  // can be obscured underneath it.\n  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even\n  // if it isn't open, so if this isn't available, the popper will be detected\n  // to overflow the bottom of the screen too early.\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n    // errors due to floating point numbers, so we need to check precision.\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\n    // Feature detection fails in mobile emulation mode in Chrome.\n    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <\n    // 0.001\n    // Fallback here: \"Not Safari\" userAgent\n\n    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}","import getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nimport { max } from \"../utils/math.js\"; // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nexport default function getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}","import getFreshSideObject from \"./getFreshSideObject.js\";\nexport default function mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}","export default function getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}","export default function expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}","import getClippingRect from \"../dom-utils/getClippingRect.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getBoundingClientRect from \"../dom-utils/getBoundingClientRect.js\";\nimport computeOffsets from \"./computeOffsets.js\";\nimport rectToClientRect from \"./rectToClientRect.js\";\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from \"../enums.js\";\nimport { isElement } from \"../dom-utils/instanceOf.js\";\nimport mergePaddingObject from \"./mergePaddingObject.js\";\nimport expandToHashMap from \"./expandToHashMap.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport default function detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}","import { max as mathMax, min as mathMin } from \"./math.js\";\nexport function within(min, value, max) {\n  return mathMax(min, mathMin(value, max));\n}\nexport function withinMaxClamp(min, value, max) {\n  var v = within(min, value, max);\n  return v > max ? max : v;\n}","import { top, left, right, bottom, start } from \"../enums.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport getAltAxis from \"../utils/getAltAxis.js\";\nimport { within, withinMaxClamp } from \"../utils/within.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport getFreshSideObject from \"../utils/getFreshSideObject.js\";\nimport { min as mathMin, max as mathMax } from \"../utils/math.js\";\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = offset + overflow[mainSide];\n    var max = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? mathMin(min, tetherMin) : min, offset, tether ? mathMax(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n\n    var _mainSide = mainAxis === 'x' ? top : left;\n\n    var _altSide = mainAxis === 'x' ? bottom : right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _len = altAxis === 'y' ? 'height' : 'width';\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;\n\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};","export default function getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport contains from \"../dom-utils/contains.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport { within } from \"../utils/within.js\";\nimport mergePaddingObject from \"../utils/mergePaddingObject.js\";\nimport expandToHashMap from \"../utils/expandToHashMap.js\";\nimport { left, right, basePlacements, top, bottom } from \"../enums.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!isHTMLElement(arrowElement)) {\n      console.error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '));\n    }\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};","import { top, bottom, left, right } from \"../enums.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};","import { popperGenerator, detectOverflow } from \"./createPopper.js\";\nimport eventListeners from \"./modifiers/eventListeners.js\";\nimport popperOffsets from \"./modifiers/popperOffsets.js\";\nimport computeStyles from \"./modifiers/computeStyles.js\";\nimport applyStyles from \"./modifiers/applyStyles.js\";\nimport offset from \"./modifiers/offset.js\";\nimport flip from \"./modifiers/flip.js\";\nimport preventOverflow from \"./modifiers/preventOverflow.js\";\nimport arrow from \"./modifiers/arrow.js\";\nimport hide from \"./modifiers/hide.js\";\nvar defaultModifiers = [eventListeners, popperOffsets, computeStyles, applyStyles, offset, flip, preventOverflow, arrow, hide];\nvar createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow }; // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper as createPopperLite } from \"./popper-lite.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport * from \"./modifiers/index.js\";","import getNodeName from \"../dom-utils/getNodeName.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n};","import getOppositePlacement from \"../utils/getOppositePlacement.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getOppositeVariationPlacement from \"../utils/getOppositeVariationPlacement.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport computeAutoPlacement from \"../utils/computeAutoPlacement.js\";\nimport { bottom, top, start, right, left, auto } from \"../enums.js\";\nimport getVariation from \"../utils/getVariation.js\"; // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};","import getVariation from \"./getVariation.js\";\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\nimport detectOverflow from \"./detectOverflow.js\";\nimport getBasePlacement from \"./getBasePlacement.js\";\nexport default function computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(' '));\n    }\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}","import * as React from 'react';\nimport { createPopper as defaultCreatePopper } from '@popperjs/core';\nimport isEqual from 'react-fast-compare';\nimport { fromEntries, useIsomorphicLayoutEffect } from './utils';\nvar EMPTY_MODIFIERS = [];\nexport var usePopper = function usePopper(referenceElement, popperElement, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var prevOptions = React.useRef(null);\n  var optionsWithDefaults = {\n    onFirstUpdate: options.onFirstUpdate,\n    placement: options.placement || 'bottom',\n    strategy: options.strategy || 'absolute',\n    modifiers: options.modifiers || EMPTY_MODIFIERS\n  };\n\n  var _React$useState = React.useState({\n    styles: {\n      popper: {\n        position: optionsWithDefaults.strategy,\n        left: '0',\n        top: '0'\n      },\n      arrow: {\n        position: 'absolute'\n      }\n    },\n    attributes: {}\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var updateStateModifier = React.useMemo(function () {\n    return {\n      name: 'updateState',\n      enabled: true,\n      phase: 'write',\n      fn: function fn(_ref) {\n        var state = _ref.state;\n        var elements = Object.keys(state.elements);\n        setState({\n          styles: fromEntries(elements.map(function (element) {\n            return [element, state.styles[element] || {}];\n          })),\n          attributes: fromEntries(elements.map(function (element) {\n            return [element, state.attributes[element]];\n          }))\n        });\n      },\n      requires: ['computeStyles']\n    };\n  }, []);\n  var popperOptions = React.useMemo(function () {\n    var newOptions = {\n      onFirstUpdate: optionsWithDefaults.onFirstUpdate,\n      placement: optionsWithDefaults.placement,\n      strategy: optionsWithDefaults.strategy,\n      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {\n        name: 'applyStyles',\n        enabled: false\n      }])\n    };\n\n    if (isEqual(prevOptions.current, newOptions)) {\n      return prevOptions.current || newOptions;\n    } else {\n      prevOptions.current = newOptions;\n      return newOptions;\n    }\n  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);\n  var popperInstanceRef = React.useRef();\n  useIsomorphicLayoutEffect(function () {\n    if (popperInstanceRef.current) {\n      popperInstanceRef.current.setOptions(popperOptions);\n    }\n  }, [popperOptions]);\n  useIsomorphicLayoutEffect(function () {\n    if (referenceElement == null || popperElement == null) {\n      return;\n    }\n\n    var createPopper = options.createPopper || defaultCreatePopper;\n    var popperInstance = createPopper(referenceElement, popperElement, popperOptions);\n    popperInstanceRef.current = popperInstance;\n    return function () {\n      popperInstance.destroy();\n      popperInstanceRef.current = null;\n    };\n  }, [referenceElement, popperElement, options.createPopper]);\n  return {\n    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,\n    styles: state.styles,\n    attributes: state.attributes,\n    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,\n    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null\n  };\n};","import * as React from 'react';\nimport { ManagerReferenceNodeContext } from './Manager';\nimport { unwrapArray, setRef } from './utils';\nimport { usePopper } from './usePopper';\n\nvar NOOP = function NOOP() {\n  return void 0;\n};\n\nvar NOOP_PROMISE = function NOOP_PROMISE() {\n  return Promise.resolve(null);\n};\n\nvar EMPTY_MODIFIERS = [];\nexport function Popper(_ref) {\n  var _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,\n      _ref$strategy = _ref.strategy,\n      strategy = _ref$strategy === void 0 ? 'absolute' : _ref$strategy,\n      _ref$modifiers = _ref.modifiers,\n      modifiers = _ref$modifiers === void 0 ? EMPTY_MODIFIERS : _ref$modifiers,\n      referenceElement = _ref.referenceElement,\n      onFirstUpdate = _ref.onFirstUpdate,\n      innerRef = _ref.innerRef,\n      children = _ref.children;\n  var referenceNode = React.useContext(ManagerReferenceNodeContext);\n\n  var _React$useState = React.useState(null),\n      popperElement = _React$useState[0],\n      setPopperElement = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      arrowElement = _React$useState2[0],\n      setArrowElement = _React$useState2[1];\n\n  React.useEffect(function () {\n    setRef(innerRef, popperElement);\n  }, [innerRef, popperElement]);\n  var options = React.useMemo(function () {\n    return {\n      placement: placement,\n      strategy: strategy,\n      onFirstUpdate: onFirstUpdate,\n      modifiers: [].concat(modifiers, [{\n        name: 'arrow',\n        enabled: arrowElement != null,\n        options: {\n          element: arrowElement\n        }\n      }])\n    };\n  }, [placement, strategy, onFirstUpdate, modifiers, arrowElement]);\n\n  var _usePopper = usePopper(referenceElement || referenceNode, popperElement, options),\n      state = _usePopper.state,\n      styles = _usePopper.styles,\n      forceUpdate = _usePopper.forceUpdate,\n      update = _usePopper.update;\n\n  var childrenProps = React.useMemo(function () {\n    return {\n      ref: setPopperElement,\n      style: styles.popper,\n      placement: state ? state.placement : placement,\n      hasPopperEscaped: state && state.modifiersData.hide ? state.modifiersData.hide.hasPopperEscaped : null,\n      isReferenceHidden: state && state.modifiersData.hide ? state.modifiersData.hide.isReferenceHidden : null,\n      arrowProps: {\n        style: styles.arrow,\n        ref: setArrowElement\n      },\n      forceUpdate: forceUpdate || NOOP,\n      update: update || NOOP_PROMISE\n    };\n  }, [setPopperElement, setArrowElement, placement, state, styles, update, forceUpdate]);\n  return unwrapArray(children)(childrenProps);\n}","import * as React from 'react';\nimport warning from 'warning';\nimport { ManagerReferenceNodeSetterContext } from './Manager';\nimport { safeInvoke, unwrapArray, setRef } from './utils';\nexport function Reference(_ref) {\n  var children = _ref.children,\n      innerRef = _ref.innerRef;\n  var setReferenceNode = React.useContext(ManagerReferenceNodeSetterContext);\n  var refHandler = React.useCallback(function (node) {\n    setRef(innerRef, node);\n    safeInvoke(setReferenceNode, node);\n  }, [innerRef, setReferenceNode]); // ran on unmount\n\n  React.useEffect(function () {\n    return function () {\n      return setRef(innerRef, null);\n    };\n  });\n  React.useEffect(function () {\n    warning(Boolean(setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');\n  }, [setReferenceNode]);\n  return unwrapArray(children)({\n    ref: refHandler\n  });\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import PropTypes from 'prop-types';\n\n// https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/js/src/modal.js#L436-L443\nexport function getScrollbarWidth() {\n  let scrollDiv = document.createElement('div');\n  // .modal-scrollbar-measure styles // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/scss/_modal.scss#L106-L113\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.width = '50px';\n  scrollDiv.style.height = '50px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n}\n\nexport function setScrollbarWidth(padding) {\n  document.body.style.paddingRight = padding > 0 ? `${padding}px` : null;\n}\n\nexport function isBodyOverflowing() {\n  return document.body.clientWidth < window.innerWidth;\n}\n\nexport function getOriginalBodyPadding() {\n  const style = window.getComputedStyle(document.body, null);\n\n  return parseInt((style && style.getPropertyValue('padding-right')) || 0, 10);\n}\n\nexport function conditionallyUpdateScrollbar() {\n  const scrollbarWidth = getScrollbarWidth();\n  // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/js/src/modal.js#L433\n  const fixedContent = document.querySelectorAll(\n    '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\n  )[0];\n  const bodyPadding = fixedContent\n    ? parseInt(fixedContent.style.paddingRight || 0, 10)\n    : 0;\n\n  if (isBodyOverflowing()) {\n    setScrollbarWidth(bodyPadding + scrollbarWidth);\n  }\n}\n\nlet globalCssModule;\n\nexport function setGlobalCssModule(cssModule) {\n  globalCssModule = cssModule;\n}\n\nexport function mapToCssModules(className = '', cssModule = globalCssModule) {\n  if (!cssModule) return className;\n  return className\n    .split(' ')\n    .map(c => cssModule[c] || c)\n    .join(' ');\n}\n\n/**\n * Returns a new object with the key/value pairs from `obj` that are not in the array `omitKeys`.\n */\nexport function omit(obj, omitKeys) {\n  const result = {};\n  Object.keys(obj).forEach(key => {\n    if (omitKeys.indexOf(key) === -1) {\n      result[key] = obj[key];\n    }\n  });\n  return result;\n}\n\n/**\n * Returns a filtered copy of an object with only the specified keys.\n */\nexport function pick(obj, keys) {\n  const pickKeys = Array.isArray(keys) ? keys : [keys];\n  let length = pickKeys.length;\n  let key;\n  const result = {};\n\n  while (length > 0) {\n    length -= 1;\n    key = pickKeys[length];\n    result[key] = obj[key];\n  }\n  return result;\n}\n\nlet warned = {};\n\nexport function warnOnce(message) {\n  if (!warned[message]) {\n    /* istanbul ignore else */\n    if (typeof console !== 'undefined') {\n      console.error(message); // eslint-disable-line no-console\n    }\n    warned[message] = true;\n  }\n}\n\nexport function deprecated(propType, explanation) {\n  return function validate(props, propName, componentName, ...rest) {\n    if (props[propName] !== null && typeof props[propName] !== 'undefined') {\n      warnOnce(\n        `\"${propName}\" property of \"${componentName}\" has been deprecated.\\n${explanation}`\n      );\n    }\n\n    return propType(props, propName, componentName, ...rest);\n  };\n}\n\n// Shim Element if needed (e.g. in Node environment)\nconst Element = (typeof window === 'object' && window.Element) || function() {};\n\nexport function DOMElement(props, propName, componentName) {\n  if (!(props[propName] instanceof Element)) {\n    return new Error(\n      'Invalid prop `' +\n        propName +\n        '` supplied to `' +\n        componentName +\n        '`. Expected prop to be an instance of Element. Validation failed.'\n    );\n  }\n}\n\nexport const targetPropType = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.func,\n  DOMElement,\n  PropTypes.shape({ current: PropTypes.any }),\n]);\n\nexport const tagPropType = PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.string,\n  PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n  PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n  ]))\n]);\n\n/* eslint key-spacing: [\"error\", { afterColon: true, align: \"value\" }] */\n// These are all setup to match what is in the bootstrap _variables.scss\n// https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss\nexport const TransitionTimeouts = {\n  Fade:      150, // $transition-fade\n  Collapse:  350, // $transition-collapse\n  Modal:     300, // $modal-transition\n  Carousel:  600, // $carousel-transition\n  Offcanvas: 300, // $offcanvas-transition\n};\n\n// Duplicated Transition.propType keys to ensure that Reactstrap builds\n// for distribution properly exclude these keys for nested child HTML attributes\n// since `react-transition-group` removes propTypes in production builds.\nexport const TransitionPropTypeKeys = [\n  'in',\n  'mountOnEnter',\n  'unmountOnExit',\n  'appear',\n  'enter',\n  'exit',\n  'timeout',\n  'onEnter',\n  'onEntering',\n  'onEntered',\n  'onExit',\n  'onExiting',\n  'onExited',\n];\n\nexport const TransitionStatuses = {\n  ENTERING: 'entering',\n  ENTERED:  'entered',\n  EXITING:  'exiting',\n  EXITED:   'exited',\n};\n\nexport const keyCodes = {\n  esc:   27,\n  space: 32,\n  enter: 13,\n  tab:   9,\n  up:    38,\n  down:  40,\n  home:  36,\n  end:   35,\n  n:     78,\n  p:     80,\n};\n\nexport const PopperPlacements = [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n\nexport const canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function isReactRefObj(target) {\n  if (target && typeof target === 'object') {\n    return 'current' in target;\n  }\n  return false;\n}\n\nfunction getTag(value) {\n  if (value == null) {\n        return value === undefined ? '[object Undefined]' : '[object Null]'\n    }\n    return Object.prototype.toString.call(value)\n}\n\nexport function toNumber(value) {\n  const type = typeof value;\n  const NAN = 0 / 0;\n  if (type === 'number') {\n    return value\n  }\n  if (type === 'symbol' || (type === 'object' && getTag(value) === '[object Symbol]')) {\n    return NAN\n  }\n  if (isObject(value)) {\n    const other = typeof value.valueOf === 'function' ? value.valueOf() : value;\n    value = isObject(other) ? `${other}` : other\n  }\n  if (type !== 'string') {\n    return value === 0 ? value : +value\n  }\n  value = value.replace(/^\\s+|\\s+$/g, '');\n  const isBinary = /^0b[01]+$/i.test(value);\n  return (isBinary || /^0o[0-7]+$/i.test(value))\n    ? parseInt(value.slice(2), isBinary ? 2 : 8)\n    : (/^[-+]0x[0-9a-f]+$/i.test(value) ? NAN : +value)\n}\n\nexport function isObject(value) {\n  const type = typeof value;\n  return value != null && (type === 'object' || type === 'function')\n}\n\nexport function isFunction(value) {\n  if (!isObject(value)) {\n    return false\n  }\n\n  const tag = getTag(value);\n  return tag === '[object Function]' || tag === '[object AsyncFunction]' ||\n    tag === '[object GeneratorFunction]' || tag === '[object Proxy]'\n}\n\nexport function findDOMElements(target) {\n  if (isReactRefObj(target)) {\n    return target.current;\n  }\n  if (isFunction(target)) {\n    return target();\n  }\n  if (typeof target === 'string' && canUseDOM) {\n    let selection = document.querySelectorAll(target);\n    if (!selection.length) {\n      selection = document.querySelectorAll(`#${target}`);\n    }\n    if (!selection.length) {\n      throw new Error(\n        `The target '${target}' could not be identified in the dom, tip: check spelling`\n      );\n    }\n    return selection;\n  }\n  return target;\n}\n\nexport function isArrayOrNodeList(els) {\n  if (els === null) {\n    return false;\n  }\n  return Array.isArray(els) || (canUseDOM && typeof els.length === 'number');\n}\n\nexport function getTarget(target, allElements) {\n  const els = findDOMElements(target);\n  if (allElements) {\n    if (isArrayOrNodeList(els)) {\n      return els;\n    }\n    if (els === null) {\n      return [];\n    }\n    return [els];\n  } else {\n    if (isArrayOrNodeList(els)) {\n      return els[0];\n    }\n    return els;\n  }\n}\n\nexport const defaultToggleEvents = ['touchstart', 'click'];\n\nexport function addMultipleEventListeners(_els, handler, _events, useCapture) {\n  let els = _els;\n  if (!isArrayOrNodeList(els)) {\n    els = [els];\n  }\n\n  let events = _events;\n  if (typeof events === 'string') {\n    events = events.split(/\\s+/);\n  }\n\n  if (\n    !isArrayOrNodeList(els) ||\n    typeof handler !== 'function' ||\n    !Array.isArray(events)\n  ) {\n    throw new Error(`\n      The first argument of this function must be DOM node or an array on DOM nodes or NodeList.\n      The second must be a function.\n      The third is a string or an array of strings that represents DOM events\n    `);\n  }\n\n  Array.prototype.forEach.call(events, event => {\n    Array.prototype.forEach.call(els, el => {\n      el.addEventListener(event, handler, useCapture);\n    });\n  });\n  return function removeEvents() {\n    Array.prototype.forEach.call(events, event => {\n      Array.prototype.forEach.call(els, el => {\n        el.removeEventListener(event, handler, useCapture);\n      });\n    });\n  };\n}\n\nexport const focusableElements = [\n  'a[href]',\n  'area[href]',\n  'input:not([disabled]):not([type=hidden])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'object',\n  'embed',\n  '[tabindex]:not(.modal)',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\nconst Container = (props) => {\n  const {\n    className,\n    cssModule,\n    fluid,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  let containerClass = 'container';\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  }\n  else if (fluid) {\n    containerClass = `container-${fluid}`;\n  }\n\n  const classes = mapToCssModules(classNames(\n    className,\n    containerClass\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, deprecated } from './utils';\n\nconst rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\nconst rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\n\nconst propTypes = {\n  tag: tagPropType,\n  noGutters: deprecated(PropTypes.bool, \"Please use Bootstrap 5 gutter utility classes. https://getbootstrap.com/docs/5.0/layout/gutters/\"),\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType,\n  xxl: rowColsPropType\n};\n\nconst defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nconst Row = (props) => {\n  const {\n    className,\n    cssModule,\n    noGutters,\n    tag: Tag,\n    form,\n    widths,\n    ...attributes\n  } = props;\n\n  const colClasses = [];\n\n  widths.forEach((colWidth, i) => {\n    let colSize = props[colWidth];\n\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    const isXs = !i;\n    colClasses.push(isXs ? `row-cols-${colSize}` : `row-cols-${colWidth}-${colSize}`);\n  });\n\n  const classes = mapToCssModules(classNames(\n    className,\n    noGutters ? 'gx-0' : null,\n    form ? 'form-row' : 'row',\n    colClasses\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\n\nexport default Row;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\n\nconst colWidths = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\nconst stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\n\nconst columnProps = PropTypes.oneOfType([\n  PropTypes.bool,\n  PropTypes.number,\n  PropTypes.string,\n  PropTypes.shape({\n    size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n    order: stringOrNumberProp,\n    offset: stringOrNumberProp\n  })\n]);\n\nconst propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  xxl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array,\n};\n\nconst defaultProps = {\n  tag: 'div',\n  widths: colWidths,\n};\n\nconst getColumnSizeClass = (isXs, colWidth, colSize) => {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : `col-${colWidth}`;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : `col-${colWidth}-auto`;\n  }\n\n  return isXs ? `col-${colSize}` : `col-${colWidth}-${colSize}`;\n};\n\n\nexport const getColumnClasses = (attributes, cssModule, widths=colWidths) => {\n  const colClasses = [];\n  \n  widths.forEach((colWidth, i) => {\n    let columnProp = attributes[colWidth];\n\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    const isXs = !i;\n\n    if (isObject(columnProp)) {\n      const colSizeInterfix = isXs ? '-' : `-${colWidth}-`;\n      const colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n\n      colClasses.push(mapToCssModules(classNames({\n        [colClass]: columnProp.size || columnProp.size === '',\n        [`order${colSizeInterfix}${columnProp.order}`]: columnProp.order || columnProp.order === 0,\n        [`offset${colSizeInterfix}${columnProp.offset}`]: columnProp.offset || columnProp.offset === 0\n      }), cssModule));\n    } else {\n      const colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n\n  return {\n    colClasses,\n    attributes\n  }\n}\n\n\nconst Col = (props) => {\n  const {\n    className,\n    cssModule,\n    widths,\n    tag: Tag,\n    ...attributes\n  } = props;\n  \n  let { attributes : modifiedAttributes, colClasses } = getColumnClasses(attributes, cssModule, widths)\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  const classes = mapToCssModules(classNames(\n    className,\n    colClasses\n  ), cssModule);\n\n  return (\n    <Tag {...modifiedAttributes} className={classes} />\n  );\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\n\nexport default Col;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  light: PropTypes.bool,\n  dark: PropTypes.bool,\n  full: PropTypes.bool,\n  fixed: PropTypes.string,\n  sticky: PropTypes.string,\n  color: PropTypes.string,\n  role: PropTypes.string,\n  tag: tagPropType,\n  container: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  tag: 'nav',\n  expand: false,\n  container: 'fluid',\n};\n\nconst getExpandClass = (expand) => {\n  if (expand === false) {\n    return false;\n  } else if (expand === true || expand === 'xs') {\n    return 'navbar-expand';\n  }\n\n  return `navbar-expand-${expand}`;\n};\n\nconst Navbar = (props) => {\n  const {\n    expand,\n    className,\n    cssModule,\n    light,\n    dark,\n    fixed,\n    sticky,\n    color,\n    container,\n    tag: Tag,\n    children,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'navbar',\n    getExpandClass(expand),\n    {\n      'navbar-light': light,\n      'navbar-dark': dark,\n      [`bg-${color}`]: color,\n      [`fixed-${fixed}`]: fixed,\n      [`sticky-${sticky}`]: sticky,\n    }\n  ), cssModule);\n\n  const containerClass = container && (container === true) ? 'container' : `container-${container}`;\n\n  return (\n    <Tag {...attributes} className={classes}>\n      { container ?\n        <div className={containerClass}>\n          {children}\n        </div> :\n        children\n      }\n    </Tag>\n  );\n};\n\nNavbar.propTypes = propTypes;\nNavbar.defaultProps = defaultProps;\n\nexport default Navbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'a'\n};\n\nconst NavbarBrand = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'navbar-brand'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nNavbarBrand.propTypes = propTypes;\nNavbarBrand.defaultProps = defaultProps;\n\nexport default NavbarBrand;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\n\nconst defaultProps = {\n  tag: 'span'\n};\n\nconst NavbarText = (props) => {\n  const {\n    className,\n    cssModule,\n    active,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'navbar-text'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nNavbarText.propTypes = propTypes;\nNavbarText.defaultProps = defaultProps;\n\nexport default NavbarText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  tag: 'button',\n  type: 'button'\n};\n\nconst NavbarToggler = (props) => {\n  const {\n    className,\n    cssModule,\n    children,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'navbar-toggler'\n  ), cssModule);\n\n  return (\n    <Tag aria-label=\"Toggle navigation\" {...attributes} className={classes}>\n      {children || <span className={mapToCssModules('navbar-toggler-icon', cssModule)} />}\n    </Tag>\n  );\n};\n\nNavbarToggler.propTypes = propTypes;\nNavbarToggler.defaultProps = defaultProps;\n\nexport default NavbarToggler;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'ul',\n  vertical: false,\n};\n\nconst getVerticalClass = (vertical) => {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return `flex-${vertical}-column`;\n};\n\nconst Nav = (props) => {\n  const {\n    className,\n    cssModule,\n    tabs,\n    pills,\n    vertical,\n    horizontal,\n    justified,\n    fill,\n    navbar,\n    card,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    navbar ? 'navbar-nav' : 'nav',\n    horizontal ? `justify-content-${horizontal}` : false,\n    getVerticalClass(vertical),\n    {\n      'nav-tabs': tabs,\n      'card-header-tabs': card && tabs,\n      'nav-pills': pills,\n      'card-header-pills': card && pills,\n      'nav-justified': justified,\n      'nav-fill': fill,\n    }\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\n\nexport default Nav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'li'\n};\n\nconst NavItem = (props) => {\n  const {\n    className,\n    cssModule,\n    active,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'nav-item',\n    active ? 'active' : false\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nNavItem.propTypes = propTypes;\nNavItem.defaultProps = defaultProps;\n\nexport default NavItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  onClick: PropTypes.func,\n  href: PropTypes.any,\n};\n\nconst defaultProps = {\n  tag: 'a',\n};\n\nclass NavLink extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.href === '#') {\n      e.preventDefault();\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  }\n\n  render() {\n    let {\n      className,\n      cssModule,\n      active,\n      tag: Tag,\n      innerRef,\n      ...attributes\n    } = this.props;\n\n    const classes = mapToCssModules(classNames(\n      className,\n      'nav-link',\n      {\n        disabled: attributes.disabled,\n        active: active\n      }\n    ), cssModule);\n\n    return (\n      <Tag {...attributes} ref={innerRef} onClick={this.onClick} className={classes} />\n    );\n  }\n}\n\nNavLink.propTypes = propTypes;\nNavLink.defaultProps = defaultProps;\n\nexport default NavLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\n\nconst defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nconst Breadcrumb = (props) => {\n  const {\n    className,\n    listClassName,\n    cssModule,\n    children,\n    tag: Tag,\n    listTag: ListTag,\n    'aria-label': label,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className\n  ), cssModule);\n\n  const listClasses = mapToCssModules(classNames(\n    'breadcrumb',\n    listClassName\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} aria-label={label}>\n      <ListTag className={listClasses}>\n        {children}\n      </ListTag>\n    </Tag>\n  );\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\n\nexport default Breadcrumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'li'\n};\n\nconst BreadcrumbItem = (props) => {\n  const {\n    className,\n    cssModule,\n    active,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    active ? 'active' : false,\n    'breadcrumb-item'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} aria-current={active ? 'page' : undefined} />\n  );\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\n\nexport default BreadcrumbItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool,\n};\n\nconst defaultProps = {\n  color: 'secondary',\n  tag: 'button',\n};\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      return this.props.onClick(e);\n    }\n  }\n\n  render() {\n    let {\n      active,\n      'aria-label': ariaLabel,\n      block,\n      className,\n      close,\n      cssModule,\n      color,\n      outline,\n      size,\n      tag: Tag,\n      innerRef,\n      ...attributes\n    } = this.props;\n\n    const btnOutlineColor = `btn${outline ? '-outline' : ''}-${color}`;\n\n    const classes = mapToCssModules(classNames(\n      className,\n      close && 'btn-close',\n      close || 'btn',\n      close || btnOutlineColor,\n      size ? `btn-${size}` : false,\n      block ? 'd-block w-100' : false,\n      { active, disabled: this.props.disabled }\n    ), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    const defaultAriaLabel = close ? 'Close' : null;\n\n    return (\n      <Tag\n        type={(Tag === 'button' && attributes.onClick) ? 'button' : undefined}\n        {...attributes}\n        className={classes}\n        ref={innerRef}\n        onClick={this.onClick}\n        aria-label={ariaLabel || defaultAriaLabel}\n      />\n    );\n  }\n}\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Button from \"./Button\";\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\n\nconst propTypes = {\n  onClick: PropTypes.func,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  defaultValue: PropTypes.bool,\n};\n\nconst defaultProps = {\n  defaultValue: false,\n};\n\nclass ButtonToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      toggled: props.defaultValue,\n      focus: false,\n    }\n\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onBlur(e) {\n    if(this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n\n    this.setState({\n      focus: false,\n    });\n  }\n\n  onFocus(e) {\n    if(this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n\n    this.setState({\n      focus: true,\n    });\n  }\n\n  onClick(e) {\n    if(this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    this.setState(({ toggled }) => ({\n      toggled: !toggled,\n    }));\n  }\n\n  render() {\n    const {\n      className,\n      ...attributes\n    } = this.props;\n\n    const classes = mapToCssModules(classNames(\n      className, \n      { \n        focus: this.state.focus, \n      }\n      ), this.props.cssModule);\n\n    return <Button\n      active={this.state.toggled}\n      onBlur={this.onBlur} \n      onFocus={this.onFocus} \n      onClick={this.onClick}\n      className={classes}\n      {...attributes}\n    />;\n  }\n}\n\nButtonToggle.propTypes = propTypes;\nButtonToggle.defaultProps = defaultProps;\n\nexport default ButtonToggle;\n","import React from 'react';\n\n/**\n * DropdownContext\n * {\n *  toggle: PropTypes.func.isRequired,\n *  isOpen: PropTypes.bool.isRequired,\n *  direction: PropTypes.oneOf(['up', 'down', 'start', 'end']).isRequired,\n *  inNavbar: PropTypes.bool.isRequired,\n *  disabled: PropTypes.bool\n * }\n */\nexport const DropdownContext = React.createContext({});","/* eslint react/no-find-dom-node: 0 */\n// https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-find-dom-node.md\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Manager } from 'react-popper';\nimport classNames from 'classnames';\nimport { DropdownContext } from './DropdownContext';\nimport { mapToCssModules, omit, keyCodes, tagPropType } from './utils';\n\nconst propTypes = {\n  a11y: PropTypes.bool,\n  disabled: PropTypes.bool,\n  direction: PropTypes.oneOf(['up', 'down', 'start', 'end', 'left', 'right']),\n  group: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  nav: PropTypes.bool,\n  active: PropTypes.bool,\n  size: PropTypes.string,\n  tag: tagPropType,\n  toggle: PropTypes.func,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  inNavbar: PropTypes.bool,\n  setActiveFromChild: PropTypes.bool,\n  menuRole: PropTypes.oneOf(['listbox', 'menu'])\n};\n\nconst defaultProps = {\n  a11y: true,\n  isOpen: false,\n  direction: 'down',\n  nav: false,\n  active: false,\n  inNavbar: false,\n  setActiveFromChild: false\n};\n\nconst preventDefaultKeys = [\n  keyCodes.space,\n  keyCodes.enter,\n  keyCodes.up,\n  keyCodes.down,\n  keyCodes.end,\n  keyCodes.home\n]\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addEvents = this.addEvents.bind(this);\n    this.handleDocumentClick = this.handleDocumentClick.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.removeEvents = this.removeEvents.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.handleMenuRef = this.handleMenuRef.bind(this);\n\n    this.containerRef = React.createRef();\n    this.menuRef = React.createRef();\n  }\n\n  handleMenuRef(menuRef) {\n    this.menuRef.current = menuRef;\n  }\n\n  getContextValue() {\n    return {\n      toggle: this.toggle,\n      isOpen: this.props.isOpen,\n      direction: (this.props.direction === 'down' && this.props.dropup) ? 'up' : this.props.direction,\n      inNavbar: this.props.inNavbar,\n      disabled: this.props.disabled,\n      // Callback that should be called by DropdownMenu to provide a ref to\n      // a HTML tag that's used for the DropdownMenu\n      onMenuRef: this.handleMenuRef,\n      menuRole: this.props.menuRole\n    };\n  }\n\n  componentDidMount() {\n    this.handleProps();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isOpen !== prevProps.isOpen) {\n      this.handleProps();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeEvents();\n  }\n\n  getContainer() {\n    return this.containerRef.current;\n  }\n\n  getMenu() {\n    return this.menuRef.current;\n  }\n\n  getMenuCtrl() {\n    if (this._$menuCtrl) return this._$menuCtrl;\n    this._$menuCtrl = this.getContainer().querySelector('[aria-expanded]');\n    return this._$menuCtrl;\n  }\n\n  getItemType() {\n    if(this.context.menuRole === 'listbox') {\n      return 'option'\n    }\n    return 'menuitem'\n  }\n\n  getMenuItems() {\n    // In a real menu with a child DropdownMenu, `this.getMenu()` should never\n    // be null, but it is sometimes null in tests. To mitigate that, we just\n    // use `this.getContainer()` as the fallback `menuContainer`.\n    const menuContainer = this.getMenu() || this.getContainer();\n    return [].slice.call(menuContainer.querySelectorAll(`[role=\"${this.getItemType()}\"]`));\n  }\n\n  addEvents() {\n    ['click', 'touchstart', 'keyup'].forEach(event =>\n      document.addEventListener(event, this.handleDocumentClick, true)\n    );\n  }\n\n  removeEvents() {\n    ['click', 'touchstart', 'keyup'].forEach(event =>\n      document.removeEventListener(event, this.handleDocumentClick, true)\n    );\n  }\n\n  handleDocumentClick(e) {\n    if (e && (e.which === 3 || (e.type === 'keyup' && e.which !== keyCodes.tab))) return;\n    const container = this.getContainer();\n    const menu = this.getMenu();\n    const clickIsInContainer = container.contains(e.target) && container !== e.target;\n    const clickIsInInput = container.classList.contains('input-group') && container.classList.contains('dropdown') && e.target.tagName === 'INPUT';\n    const clickIsInMenu = menu && menu.contains(e.target) && menu !== e.target;\n    if (((clickIsInContainer && !clickIsInInput) || clickIsInMenu) && (e.type !== 'keyup' || e.which === keyCodes.tab)) {\n      return;\n    }\n\n    this.toggle(e);\n  }\n\n  handleKeyDown(e) {\n    const isTargetMenuItem = e.target.getAttribute('role') === 'menuitem' || e.target.getAttribute('role') === 'option';\n    const isTargetMenuCtrl = this.getMenuCtrl() === e.target;\n    const isTab = keyCodes.tab === e.which;\n\n    if (\n      /input|textarea/i.test(e.target.tagName)\n      || (isTab && !this.props.a11y)\n      || (isTab && !(isTargetMenuItem || isTargetMenuCtrl))\n    ) {\n      return;\n    }\n\n    if (preventDefaultKeys.indexOf(e.which) !== -1 || ((e.which >= 48) && (e.which <= 90))) {\n      e.preventDefault();\n    }\n\n    if (this.props.disabled) return;\n\n    if (isTargetMenuCtrl) {\n      if ([keyCodes.space, keyCodes.enter, keyCodes.up, keyCodes.down].indexOf(e.which) > -1) {\n        // Open the menu (if not open) and focus the first menu item\n        if (!this.props.isOpen) {\n          this.toggle(e);\n        }\n        setTimeout(() => this.getMenuItems()[0].focus());\n      } else if (this.props.isOpen && isTab) {\n        // Focus the first menu item if tabbing from an open menu. We need this\n        // for cases where the DropdownMenu sets a custom container, which may\n        // not be the natural next item to tab to from the DropdownToggle.\n        e.preventDefault();\n        this.getMenuItems()[0].focus();\n      } else if (this.props.isOpen && e.which === keyCodes.esc) {\n        this.toggle(e);\n      }\n    }\n\n    if (this.props.isOpen && isTargetMenuItem) {\n      if ([keyCodes.tab, keyCodes.esc].indexOf(e.which) > -1) {\n        this.toggle(e);\n        this.getMenuCtrl().focus();\n      } else if ([keyCodes.space, keyCodes.enter].indexOf(e.which) > -1) {\n        e.target.click();\n        this.getMenuCtrl().focus();\n      } else if (\n        [keyCodes.down, keyCodes.up].indexOf(e.which) > -1\n        || ([keyCodes.n, keyCodes.p].indexOf(e.which) > -1 && e.ctrlKey)\n      ) {\n        const $menuitems = this.getMenuItems();\n        let index = $menuitems.indexOf(e.target);\n        if (keyCodes.up === e.which || (keyCodes.p === e.which && e.ctrlKey)) {\n          index = index !== 0 ? index - 1 : $menuitems.length - 1;\n        } else if (keyCodes.down === e.which || (keyCodes.n === e.which && e.ctrlKey)) {\n          index = index === $menuitems.length - 1 ? 0 : index + 1;\n        }\n        $menuitems[index].focus();\n      } else if (keyCodes.end === e.which) {\n        const $menuitems = this.getMenuItems();\n        $menuitems[$menuitems.length - 1].focus();\n      } else if (keyCodes.home === e.which) {\n        const $menuitems = this.getMenuItems();\n        $menuitems[0].focus();\n      } else if ((e.which >= 48) && (e.which <= 90)) {\n        const $menuitems = this.getMenuItems();\n        const charPressed = String.fromCharCode(e.which).toLowerCase();\n        for (let i = 0; i < $menuitems.length; i += 1) {\n          const firstLetter = $menuitems[i].textContent && $menuitems[i].textContent[0].toLowerCase();\n          if (firstLetter === charPressed) {\n            $menuitems[i].focus();\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  handleProps() {\n    if (this.props.isOpen) {\n      this.addEvents();\n    } else {\n      this.removeEvents();\n    }\n  }\n\n  toggle(e) {\n    if (this.props.disabled) {\n      return e && e.preventDefault();\n    }\n\n    return this.props.toggle(e);\n  }\n\n  render() {\n    const {\n      className,\n      cssModule,\n      direction,\n      isOpen,\n      group,\n      size,\n      nav,\n      setActiveFromChild,\n      active,\n      tag,\n      menuRole,\n      ...attrs\n    } = omit(this.props, ['toggle', 'disabled', 'inNavbar', 'a11y']);\n\n    const Tag = tag || (nav ? 'li' : 'div');\n\n    let subItemIsActive = false;\n    if (setActiveFromChild) {\n      React.Children.map(this.props.children[1].props.children,\n        (dropdownItem) => {\n          if (dropdownItem && dropdownItem.props.active) subItemIsActive = true;\n        }\n      );\n    }\n\n    const classes = mapToCssModules(classNames(\n      className,\n      nav && active ? 'active' : false,\n      setActiveFromChild && subItemIsActive ? 'active' : false,\n      {\n        'btn-group': group,\n        [`btn-group-${size}`]: !!size,\n        dropdown: !group,\n        dropup: direction === 'up',\n        dropstart: direction === 'start' || direction === 'left',\n        dropend: direction === 'end' || direction === 'right',\n        show: isOpen,\n        'nav-item': nav\n      }\n    ), cssModule);\n\n    return (\n      <DropdownContext.Provider value={this.getContextValue()}>\n        <Manager>\n          <Tag\n            {...attrs}\n            {...{ [typeof Tag === 'string' ? 'ref' : 'innerRef']: this.containerRef }}\n            onKeyDown={this.handleKeyDown}\n            className={classes}\n          />\n        </Manager>\n      </DropdownContext.Provider>\n    );\n  }\n}\n\nDropdown.propTypes = propTypes;\nDropdown.defaultProps = defaultProps;\n\nexport default Dropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\n\nconst propTypes = {\n  children: PropTypes.node,\n};\n\nconst ButtonDropdown = (props) => {\n  return (\n    <Dropdown group {...props} />\n  );\n};\n\nButtonDropdown.propTypes = propTypes;\n\nexport default ButtonDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  'aria-label': PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  role: PropTypes.string,\n  size: PropTypes.string,\n  vertical: PropTypes.bool,\n};\n\nconst defaultProps = {\n  tag: 'div',\n  role: 'group',\n};\n\nconst ButtonGroup = (props) => {\n  const {\n    className,\n    cssModule,\n    size,\n    vertical,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    size ? 'btn-group-' + size : false,\n    vertical ? 'btn-group-vertical' : 'btn-group'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nButtonGroup.propTypes = propTypes;\nButtonGroup.defaultProps = defaultProps;\n\nexport default ButtonGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  'aria-label': PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  role: PropTypes.string,\n};\n\nconst defaultProps = {\n  tag: 'div',\n  role: 'toolbar',\n};\n\nconst ButtonToolbar = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'btn-toolbar'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nButtonToolbar.propTypes = propTypes;\nButtonToolbar.defaultProps = defaultProps;\n\nexport default ButtonToolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { DropdownContext } from './DropdownContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  divider: PropTypes.bool,\n  tag: tagPropType,\n  header: PropTypes.bool,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  toggle: PropTypes.bool,\n  text: PropTypes.bool\n};\n\nconst defaultProps = {\n  tag: 'button',\n  toggle: true\n};\n\nclass DropdownItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n    this.getTabIndex = this.getTabIndex.bind(this);\n  }\n\n  getRole() {\n    if(this.context.menuRole === 'listbox') {\n      return 'option'\n    }\n    return 'menuitem'\n  }\n\n  onClick(e) {\n    const { disabled, header, divider, text } = this.props;\n    if (disabled || header || divider || text) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    if (this.props.toggle) {\n      this.context.toggle(e);\n    }\n  }\n\n  getTabIndex() {\n    const { disabled, header, divider, text } = this.props;\n    if (disabled || header || divider || text) {\n      return '-1';\n    }\n\n    return '0';\n  }\n\n  render() {\n    const tabIndex = this.getTabIndex();\n    const role = tabIndex > -1 ? this.getRole() : undefined;\n    let {\n      className,\n      cssModule,\n      divider,\n      tag: Tag,\n      header,\n      active,\n      text,\n      ...props } = omit(this.props, ['toggle']);\n\n    const classes = mapToCssModules(classNames(\n      className,\n      {\n        disabled: props.disabled,\n        'dropdown-item': !divider && !header && !text,\n        active: active,\n        'dropdown-header': header,\n        'dropdown-divider': divider,\n        'dropdown-item-text': text\n      }\n    ), cssModule);\n\n    if (Tag === 'button') {\n      if (header) {\n        Tag = 'h6';\n      } else if (divider) {\n        Tag = 'div';\n      } else if (props.href) {\n        Tag = 'a';\n      } else if (text) {\n        Tag = 'span';\n      }\n    }\n\n    return (\n      <Tag\n        type={(Tag === 'button' && (props.onClick || this.props.toggle)) ? 'button' : undefined}\n        {...props}\n        tabIndex={tabIndex}\n        role={role}\n        className={classes}\n        onClick={this.onClick}\n      />\n    );\n  }\n}\n\nDropdownItem.propTypes = propTypes;\nDropdownItem.defaultProps = defaultProps;\nDropdownItem.contextType = DropdownContext;\n\nexport default DropdownItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { Popper } from 'react-popper';\nimport { DropdownContext } from './DropdownContext';\nimport { mapToCssModules, tagPropType, targetPropType, getTarget, deprecated } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  children: PropTypes.node.isRequired,\n  dark: PropTypes.bool,\n  end: PropTypes.bool,\n  flip: PropTypes.bool,\n  modifiers: PropTypes.array,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  persist: PropTypes.bool,\n  strategy: PropTypes.string,\n  container: targetPropType,\n  right: deprecated(PropTypes.bool, 'Please use \"end\" instead.'),\n};\n\nconst defaultProps = {\n  tag: 'div',\n  flip: true,\n  modifiers: [],\n};\n\nconst directionPositionMap = {\n  up: 'top',\n  left: 'left',\n  right: 'right',\n  start: 'left',\n  end: 'right',\n  down: 'bottom',\n};\n\nclass DropdownMenu extends React.Component {\n\n  getRole() {\n    if(this.context.menuRole === 'listbox') {\n      return 'listbox'\n    }\n    return 'menu'\n  }\n\n  render() {\n    const {\n      className,\n      cssModule,\n      dark,\n      end,\n      right,\n      tag,\n      flip,\n      modifiers,\n      persist,\n      strategy,\n      container,\n      ...attrs\n    } = this.props;\n\n    const classes = mapToCssModules(classNames(\n      className,\n      'dropdown-menu',\n      {\n        'dropdown-menu-dark': dark,\n        'dropdown-menu-end': end || right,\n        show: this.context.isOpen,\n      }\n    ), cssModule);\n\n    const Tag = tag;\n\n    if (persist || (this.context.isOpen && !this.context.inNavbar)) {\n\n      const position1 = directionPositionMap[this.context.direction] || 'bottom';\n      const position2 = (end || right) ? 'end' : 'start';\n      const poperPlacement = `${position1}-${position2}`;\n      const poperModifiers = [\n        ...modifiers,\n        {\n          name: 'flip',\n          enabled: !!flip,\n        },\n       ];\n\n      const popper = (\n        <Popper\n          placement={poperPlacement}\n          modifiers={poperModifiers}\n          strategy={strategy}\n        >\n          {({ ref, style, placement }) => {\n            let combinedStyle = { ...this.props.style, ...style };\n\n            const handleRef = (tagRef) => {\n              // Send the ref to `react-popper`\n              ref(tagRef);\n              // Send the ref to the parent Dropdown so that clicks outside\n              // it will cause it to close\n              const { onMenuRef } = this.context;\n              if (onMenuRef) onMenuRef(tagRef);\n            };\n\n            return (\n              <Tag\n                tabIndex=\"-1\"\n                role={this.getRole()}\n                ref={handleRef}\n                {...attrs}\n                style={combinedStyle}\n                aria-hidden={!this.context.isOpen}\n                className={classes}\n                data-popper-placement={placement}\n              />\n            );\n          }}\n        </Popper>\n      );\n\n      if (container) {\n        return ReactDOM.createPortal(popper, getTarget(container));\n      } else {\n        return popper;\n      }\n    }\n\n    return (\n      <Tag\n        tabIndex=\"-1\"\n        role={this.getRole()}\n        {...attrs}\n        aria-hidden={!this.context.isOpen}\n        className={classes}\n        data-popper-placement={attrs.placement}\n      />\n    );\n  }\n};\n\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\nDropdownMenu.contextType = DropdownContext;\n\nexport default DropdownMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Reference } from 'react-popper';\nimport { DropdownContext } from './DropdownContext';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Button from './Button';\n\nconst propTypes = {\n  caret: PropTypes.bool,\n  color: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  'aria-haspopup': PropTypes.bool,\n  split: PropTypes.bool,\n  tag: tagPropType,\n  nav: PropTypes.bool,\n};\n\nconst defaultProps = {\n  color: 'secondary',\n  'aria-haspopup': true\n};\n\nclass DropdownToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e) {\n    if (this.props.disabled || this.context.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.nav && !this.props.tag) {\n      e.preventDefault();\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    this.context.toggle(e);\n  }\n\n  getRole() {\n    return this.context.menuRole || this.props['aria-haspopup'];\n  }\n\n  render() {\n    const { className, color, cssModule, caret, split, nav, tag, innerRef, ...props } = this.props;\n    const ariaLabel = props['aria-label'] || 'Toggle Dropdown';\n    const classes = mapToCssModules(classNames(\n      className,\n      {\n        'dropdown-toggle': caret || split,\n        'dropdown-toggle-split': split,\n        'nav-link': nav\n      }\n    ), cssModule);\n    const children =\n      typeof props.children !== 'undefined' ? (\n        props.children\n      ) : (\n        <span className=\"visually-hidden\">{ariaLabel}</span>\n      );\n\n    let Tag;\n\n    if (nav && !tag) {\n      Tag = 'a';\n      props.href = '#';\n    } else if (!tag) {\n      Tag = Button;\n      props.color = color;\n      props.cssModule = cssModule;\n    } else {\n      Tag = tag;\n    }\n\n    if (this.context.inNavbar) {\n      return (\n        <Tag\n          {...props}\n          className={classes}\n          onClick={this.onClick}\n          aria-expanded={this.context.isOpen}\n          aria-haspopup={this.getRole()}\n          children={children}\n        />\n      );\n    }\n\n    return (\n      <Reference innerRef={innerRef}>\n        {({ ref }) => (\n          <Tag\n            {...props}\n            {...{ [typeof Tag === 'string' ? 'ref' : 'innerRef']: ref }}\n\n            className={classes}\n            onClick={this.onClick}\n            aria-expanded={this.context.isOpen}\n            aria-haspopup={this.getRole()}\n            children={children}\n          />\n        )}\n      </Reference>\n    );\n  }\n}\n\nDropdownToggle.propTypes = propTypes;\nDropdownToggle.defaultProps = defaultProps;\nDropdownToggle.contextType = DropdownContext;\n\nexport default DropdownToggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionPropTypeKeys, TransitionTimeouts, tagPropType } from './utils';\n\nconst propTypes = {\n  ...Transition.propTypes,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]),\n  tag: tagPropType,\n  baseClass: PropTypes.string,\n  baseClassActive: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n};\n\nconst defaultProps = {\n  ...Transition.defaultProps,\n  tag: 'div',\n  baseClass: 'fade',\n  baseClassActive: 'show',\n  timeout: TransitionTimeouts.Fade,\n  appear: true,\n  enter: true,\n  exit: true,\n  in: true,\n};\n\nfunction Fade(props) {\n  const {\n    tag: Tag,\n    baseClass,\n    baseClassActive,\n    className,\n    cssModule,\n    children,\n    innerRef,\n    ...otherProps\n  } = props;\n\n  const transitionProps = pick(otherProps, TransitionPropTypeKeys);\n  const childProps = omit(otherProps, TransitionPropTypeKeys);\n\n  return (\n    <Transition {...transitionProps}>\n      {(status) => {\n        const isActive = status === 'entered';\n        const classes = mapToCssModules(classNames(\n          className,\n          baseClass,\n          isActive && baseClassActive\n        ), cssModule);\n        return (\n          <Tag className={classes} {...childProps} ref={innerRef}>\n            {children}\n          </Tag>\n        );\n      }}\n    </Transition>\n  );\n}\n\nFade.propTypes = propTypes;\nFade.defaultProps = defaultProps;\n\nexport default Fade;\n","import React from 'react';\n\n/**\n * AccordionContext\n * {\n *  toggle: PropTypes.func.isRequired,\n *  openId: PropTypes.string,    \n * }\n */\nexport const AccordionContext = React.createContext({});\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport { AccordionContext } from './AccordionContext';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  children: PropTypes.node,\n  flush: PropTypes.bool,\n  open: PropTypes.oneOfType([PropTypes.array, PropTypes.string]).isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst Accordion = (props) => {\n  const {\n    flush,\n    open,\n    toggle,\n    className,\n    cssModule,\n    tag: Tag,\n    innerRef,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'accordion',\n    {\n      'accordion-flush': flush\n    }\n  ), cssModule);\n\n  const accordionContext = useMemo(() => ({\n    open,\n    toggle,\n  }));\n\n  return (\n    <AccordionContext.Provider value={accordionContext}>\n      <Tag {...attributes} className={classes} ref={innerRef} />\n    </AccordionContext.Provider>\n  );\n};\n\nAccordion.propTypes = propTypes;\nAccordion.defaultProps = defaultProps;\n\nexport default Accordion;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { tagPropType } from './utils';\nimport Accordion from './Accordion';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  children: PropTypes.node,\n  defaultOpen: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  stayOpen: PropTypes.bool,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst UncontrolledAccordion = ({ defaultOpen, stayOpen, ...props }) => {\n  const [open, setOpen] = useState(defaultOpen || (stayOpen ? [] : undefined));\n  const toggle = (id) => {\n    if (stayOpen) {\n      open.includes(id) ? setOpen(open.filter(accordionId => accordionId !== id)) : setOpen([...open, id]);\n    } else {\n      open === id ? setOpen(undefined) : setOpen(id);\n    }\n  };\n\n  return <Accordion {...props} open={open} toggle={toggle} />;\n};\n\nAccordion.propTypes = propTypes;\nAccordion.defaultProps = defaultProps;\n\nexport default UncontrolledAccordion;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport { AccordionContext } from './AccordionContext';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  children: PropTypes.node,\n  targetId: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n  tag: 'h2'\n};\n\nconst AccordionHeader = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    innerRef,\n    children,\n    targetId,\n    ...attributes\n  } = props;\n  const { open, toggle } = useContext(AccordionContext);\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'accordion-header',\n  ), cssModule);\n\n  const buttonClasses = mapToCssModules(classNames(\n    'accordion-button',\n    {\n      collapsed: !(Array.isArray(open) ? open.includes(targetId) : open === targetId)\n    },\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} ref={innerRef}>\n      <button type=\"button\" className={buttonClasses} onClick={() => toggle(targetId)}>\n        {children}\n      </button>\n    </Tag>\n  );\n};\n\nAccordionHeader.propTypes = propTypes;\nAccordionHeader.defaultProps = defaultProps;\n\nexport default AccordionHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst AccordionItem = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    innerRef,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'accordion-item',\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} ref={innerRef} />\n  );\n};\n\nAccordionItem.propTypes = propTypes;\nAccordionItem.defaultProps = defaultProps;\n\nexport default AccordionItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nconst propTypes = {\n  ...Transition.propTypes,\n  horizontal: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object\n  ]),\n};\n\nconst defaultProps = {\n  ...Transition.defaultProps,\n  horizontal: false,\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse,\n};\n\nconst transitionStatusToClassHash = {\n  [TransitionStatuses.ENTERING]: 'collapsing',\n  [TransitionStatuses.ENTERED]: 'collapse show',\n  [TransitionStatuses.EXITING]: 'collapsing',\n  [TransitionStatuses.EXITED]: 'collapse',\n};\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nclass Collapse extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dimension: null\n    };\n\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach((name) => {\n      this[name] = this[name].bind(this);\n    });\n  }\n\n  getDimension(node) {\n    return this.props.horizontal ? node.scrollWidth : node.scrollHeight;\n  }\n\n  onEntering(node, isAppearing) {\n    this.setState({ dimension: this.getDimension(node) });\n    this.props.onEntering(node, isAppearing);\n  }\n\n  onEntered(node, isAppearing) {\n    this.setState({ dimension: null });\n    this.props.onEntered(node, isAppearing);\n  }\n\n  onExit(node) {\n    this.setState({ dimension: this.getDimension(node) });\n    this.props.onExit(node);\n  }\n\n  onExiting(node) {\n    // getting this variable triggers a reflow\n    const _unused = this.getDimension(node); // eslint-disable-line no-unused-vars\n    this.setState({ dimension: 0 });\n    this.props.onExiting(node);\n  }\n\n  onExited(node) {\n    this.setState({ dimension: null });\n    this.props.onExited(node);\n  }\n\n  render() {\n    const {\n      tag: Tag,\n      horizontal,\n      isOpen,\n      className,\n      navbar,\n      cssModule,\n      children,\n      innerRef,\n      ...otherProps\n    } = this.props;\n\n    const { dimension } = this.state;\n\n    const transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    const childProps = omit(otherProps, TransitionPropTypeKeys);\n    return (\n      <Transition\n        {...transitionProps}\n        in={isOpen}\n        onEntering={this.onEntering}\n        onEntered={this.onEntered}\n        onExit={this.onExit}\n        onExiting={this.onExiting}\n        onExited={this.onExited}\n      >\n        {(status) => {\n          let collapseClass = getTransitionClass(status);\n          const classes = mapToCssModules(classNames(\n            className,\n            horizontal && 'collapse-horizontal',\n            collapseClass,\n            navbar && 'navbar-collapse'\n          ), cssModule);\n          const style = dimension === null ? null : { [horizontal ? 'width' : 'height']: dimension };\n          return (\n            <Tag\n              {...childProps}\n              style={{ ...childProps.style, ...style }}\n              className={classes}\n              ref={this.props.innerRef}\n            >\n              {children}\n            </Tag>\n          );\n        }}\n      </Transition>\n    );\n  }\n}\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Collapse from './Collapse';\nimport { AccordionContext } from './AccordionContext';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  children: PropTypes.node,\n  accordionId: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst AccordionItem = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    innerRef,\n    children,\n    accordionId,\n    ...attributes\n  } = props;\n\n  const { open } = useContext(AccordionContext);\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'accordion-collapse',\n  ), cssModule);\n\n  return (\n    <Collapse\n      {...attributes}\n      className={classes}\n      ref={innerRef} isOpen={Array.isArray(open) ? open.includes(accordionId) : open === accordionId }>\n      <Tag className=\"accordion-body\">{children}</Tag>\n    </Collapse>    \n  );\n};\n\nAccordionItem.propTypes = propTypes;\nAccordionItem.defaultProps = defaultProps;\n\nexport default AccordionItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nconst Badge = (props) => {\n  let {\n    className,\n    cssModule,\n    color,\n    innerRef,\n    pill,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'badge',\n    'bg-' + color,\n    pill ? 'rounded-pill' : false\n  ), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return (\n    <Tag {...attributes} className={classes} ref={innerRef} />\n  );\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\n\nexport default Badge;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst Card = (props) => {\n  const {\n    className,\n    cssModule,\n    color,\n    body,\n    inverse,\n    outline,\n    tag: Tag,\n    innerRef,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card',\n    inverse ? 'text-white' : false,\n    body ? 'card-body' : false,\n    color ? `${outline ? 'border' : 'bg'}-${color}` : false\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} ref={innerRef} />\n  );\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardGroup = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-group'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardGroup.propTypes = propTypes;\nCardGroup.defaultProps = defaultProps;\n\nexport default CardGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\nconst CardDeck = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-deck'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardDeck.propTypes = propTypes;\nCardDeck.defaultProps = defaultProps;\n\nexport default CardDeck;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardColumns = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-columns'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardColumns.propTypes = propTypes;\nCardColumns.defaultProps = defaultProps;\n\nexport default CardColumns;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardBody = (props) => {\n  const {\n    className,\n    cssModule,\n    innerRef,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-body'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} ref={innerRef} />\n  );\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\n\nexport default CardBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'a'\n};\n\nconst CardLink = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    innerRef,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-link'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} ref={innerRef} className={classes} />\n  );\n};\n\nCardLink.propTypes = propTypes;\nCardLink.defaultProps = defaultProps;\n\nexport default CardLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardFooter = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-footer'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\n\nexport default CardFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardHeader = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-header'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\n\nexport default CardHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  top: PropTypes.bool,\n  bottom: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'img'\n};\n\nconst CardImg = (props) => {\n  const {\n    className,\n    cssModule,\n    top,\n    bottom,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  let cardImgClassName = 'card-img';\n  if (top) {\n    cardImgClassName = 'card-img-top';\n  }\n  if (bottom) {\n    cardImgClassName = 'card-img-bottom';\n  }\n\n  const classes = mapToCssModules(classNames(\n    className,\n    cardImgClassName\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardImg.propTypes = propTypes;\nCardImg.defaultProps = defaultProps;\n\nexport default CardImg;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardImgOverlay = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-img-overlay'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardImgOverlay.propTypes = propTypes;\nCardImgOverlay.defaultProps = defaultProps;\n\nexport default CardImgOverlay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, TransitionTimeouts, TransitionStatuses, tagPropType } from './utils';\n\nclass CarouselItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      startAnimation: false,\n    };\n\n    this.onEnter = this.onEnter.bind(this);\n    this.onEntering = this.onEntering.bind(this);\n    this.onExit = this.onExit.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n  }\n\n  onEnter(node, isAppearing) {\n    this.setState({ startAnimation: false });\n    this.props.onEnter(node, isAppearing);\n  }\n\n  onEntering(node, isAppearing) {\n    // getting this variable triggers a reflow\n    const offsetHeight = node.offsetHeight;\n    this.setState({ startAnimation: true });\n    this.props.onEntering(node, isAppearing);\n    return offsetHeight;\n  }\n\n  onExit(node) {\n    this.setState({ startAnimation: false });\n    this.props.onExit(node);\n  }\n\n  onExiting(node) {\n    this.setState({ startAnimation: true });\n    node.dispatchEvent(new CustomEvent('slide.bs.carousel'));\n    this.props.onExiting(node);\n  }\n\n  onExited(node) {\n    node.dispatchEvent(new CustomEvent('slid.bs.carousel'));\n    this.props.onExited(node);\n  }\n\n  render() {\n    const { in: isIn, children, cssModule, slide, tag: Tag, className, ...transitionProps } = this.props;\n\n    return (\n      <Transition\n        {...transitionProps}\n        enter={slide}\n        exit={slide}\n        in={isIn}\n        onEnter={this.onEnter}\n        onEntering={this.onEntering}\n        onExit={this.onExit}\n        onExiting={this.onExiting}\n        onExited={this.onExited}\n      >\n        {(status) => {\n          const { direction } = this.context;\n          const isActive = (status === TransitionStatuses.ENTERED) || (status === TransitionStatuses.EXITING);\n          const directionClassName = (status === TransitionStatuses.ENTERING || status === TransitionStatuses.EXITING) &&\n            this.state.startAnimation &&\n            (direction === 'end' ? 'carousel-item-start' : 'carousel-item-end');\n          const orderClassName = (status === TransitionStatuses.ENTERING) &&\n            (direction === 'end' ? 'carousel-item-next' : 'carousel-item-prev');\n          const itemClasses = mapToCssModules(classNames(\n            className,\n            'carousel-item',\n            isActive && 'active',\n            directionClassName,\n            orderClassName,\n          ), cssModule);\n\n          return (\n            <Tag className={itemClasses}>\n              {children}\n            </Tag>\n          );\n        }}\n      </Transition>\n    );\n  }\n}\n\nCarouselItem.propTypes = {\n  ...Transition.propTypes,\n  tag: tagPropType,\n  in: PropTypes.bool,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  slide: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nCarouselItem.defaultProps = {\n  ...Transition.defaultProps,\n  tag: 'div',\n  timeout: TransitionTimeouts.Carousel,\n  slide: true,\n};\n\nCarouselItem.contextTypes = {\n  direction: PropTypes.string\n};\n\nexport default CarouselItem;\n","import React from 'react';\n\n/**\n * CarouselContext\n * {\n *  direction: PropTypes.oneOf(['start', 'end']).isRequired,\n * }\n */\nexport const CarouselContext = React.createContext({});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CarouselItem from './CarouselItem';\nimport { CarouselContext } from './CarouselContext';\nimport { mapToCssModules } from './utils';\n    \nconst SWIPE_THRESHOLD = 40;\n\nclass Carousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.renderItems = this.renderItems.bind(this);\n    this.hoverStart = this.hoverStart.bind(this);\n    this.hoverEnd = this.hoverEnd.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleTouchEnd = this.handleTouchEnd.bind(this);\n    this.touchStartX = 0;\n    this.touchStartY = 0;\n    this.state = {\n      activeIndex: this.props.activeIndex,\n      direction: 'end',\n      indicatorClicked: false,\n    };\n  }\n\n  getContextValue() {\n    return { direction: this.state.direction };\n  }\n\n  componentDidMount() {\n    // Set up the cycle\n    if (this.props.ride === 'carousel') {\n      this.setInterval();\n    }\n\n    // TODO: move this to the specific carousel like bootstrap. Currently it will trigger ALL carousels on the page.\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let newState = null;\n    let { activeIndex, direction, indicatorClicked } = prevState;\n\n    if (nextProps.activeIndex !== activeIndex) {\n      // Calculate the direction to turn\n      if (nextProps.activeIndex === activeIndex + 1) {\n        direction = 'end';\n      } else if (nextProps.activeIndex === activeIndex -1) {\n        direction = 'start';\n      } else if (nextProps.activeIndex < activeIndex) {\n        direction = indicatorClicked ? 'start' : 'end';\n      } else if (nextProps.activeIndex !== activeIndex) {\n        direction = indicatorClicked ? 'end' : 'start';\n      }\n\n      newState = {\n        activeIndex: nextProps.activeIndex,\n        direction,\n        indicatorClicked: false,\n      }\n    }\n\n    return newState;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.activeIndex === this.state.activeIndex) return;\n    this.setInterval(this.props);\n  }\n\n  componentWillUnmount() {\n    this.clearInterval();\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  setInterval(props = this.props) {\n    // make sure not to have multiple intervals going...\n    this.clearInterval();\n    if (props.interval) {\n      this.cycleInterval = setInterval(() => {\n        props.next();\n      }, parseInt(props.interval, 10));\n    }\n  }\n\n  clearInterval() {\n    clearInterval(this.cycleInterval);\n  }\n\n  hoverStart(...args) {\n    if (this.props.pause === 'hover') {\n      this.clearInterval();\n    }\n    if (this.props.mouseEnter) {\n      this.props.mouseEnter(...args);\n    }\n  }\n\n  hoverEnd(...args) {\n    if (this.props.pause === 'hover') {\n      this.setInterval();\n    }\n    if (this.props.mouseLeave) {\n      this.props.mouseLeave(...args);\n    }\n  }\n\n  handleKeyPress(evt) {\n    if (this.props.keyboard) {\n      if (evt.keyCode === 37) {\n        this.props.previous();\n      } else if (evt.keyCode === 39) {\n        this.props.next();\n      }\n    }\n  }\n\n  handleTouchStart(e) {\n    if(!this.props.enableTouch) {\n      return;\n    }\n    this.touchStartX = e.changedTouches[0].screenX;\n    this.touchStartY = e.changedTouches[0].screenY;\n  }\n\n  handleTouchEnd(e) {\n    if(!this.props.enableTouch) {\n      return;\n    }\n\n    const currentX = e.changedTouches[0].screenX;\n    const currentY = e.changedTouches[0].screenY;\n    const diffX = Math.abs(this.touchStartX - currentX);\n    const diffY = Math.abs(this.touchStartY - currentY);\n\n    // Don't swipe if Y-movement is bigger than X-movement\n    if(diffX < diffY) {\n      return;\n    }\n\n    if(diffX < SWIPE_THRESHOLD) {\n      return;\n    }\n\n    if(currentX < this.touchStartX) {\n      this.props.next();\n    } else {\n      this.props.previous();\n    }\n  }\n\n  renderItems(carouselItems, className) {\n    const { slide } = this.props;\n    return (\n      <div className={className}>\n        {carouselItems.map((item, index) => {\n          const isIn = (index === this.state.activeIndex);\n          return React.cloneElement(item, {\n            in: isIn,\n            slide: slide,\n          });\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { cssModule, slide, className, dark, fade } = this.props;\n    const outerClasses = mapToCssModules(classNames(\n      className,\n      'carousel',\n      'carousel-fade' && fade,\n      slide && 'slide',\n      dark && 'carousel-dark'\n    ), cssModule);\n\n    const innerClasses = mapToCssModules(classNames(\n      'carousel-inner'\n    ), cssModule);\n\n    // filter out booleans, null, or undefined\n    const children = this.props.children.filter(child => child !== null && child !== undefined && typeof child !== 'boolean');\n\n    const slidesOnly = children.every(child => child.type === CarouselItem);\n\n    // Rendering only slides\n    if (slidesOnly) {\n      return (\n        <div className={outerClasses} onMouseEnter={this.hoverStart} onMouseLeave={this.hoverEnd}>\n          <CarouselContext.Provider value={this.getContextValue()}>\n            {this.renderItems(children, innerClasses)}\n          </CarouselContext.Provider>\n        </div>\n      );\n    }\n\n    // Rendering slides and controls\n    if (children[0] instanceof Array) {\n      const carouselItems = children[0];\n      const controlLeft = children[1];\n      const controlRight = children[2];\n\n      return (\n        <div className={outerClasses} onMouseEnter={this.hoverStart} onMouseLeave={this.hoverEnd}>\n          <CarouselContext.Provider value={this.getContextValue()}>\n            {this.renderItems(carouselItems, innerClasses)}\n            {controlLeft}\n            {controlRight}\n          </CarouselContext.Provider>\n        </div>\n      );\n    }\n\n    // Rendering indicators, slides and controls\n    const indicators = children[0];\n    const wrappedOnClick = (e) => {\n      if (typeof indicators.props.onClickHandler === 'function') {\n        this.setState({ indicatorClicked: true }, () => indicators.props.onClickHandler(e));\n      }\n    };\n    const wrappedIndicators = React.cloneElement(indicators, { onClickHandler: wrappedOnClick });\n    const carouselItems = children[1];\n    const controlLeft = children[2];\n    const controlRight = children[3];\n\n    return (\n      <div className={outerClasses} onMouseEnter={this.hoverStart} onMouseLeave={this.hoverEnd}\n        onTouchStart={this.handleTouchStart} onTouchEnd={this.handleTouchEnd}>\n        <CarouselContext.Provider value={this.getContextValue()}>\n          {wrappedIndicators}\n          {this.renderItems(carouselItems, innerClasses)}\n          {controlLeft}\n          {controlRight}\n        </CarouselContext.Provider>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  // the current active slide of the carousel\n  activeIndex: PropTypes.number,\n  // a function which should advance the carousel to the next slide (via activeIndex)\n  next: PropTypes.func.isRequired,\n  // a function which should advance the carousel to the previous slide (via activeIndex)\n  previous: PropTypes.func.isRequired,\n  // controls if the left and right arrow keys should control the carousel\n  keyboard: PropTypes.bool,\n  /* If set to \"hover\", pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on\n   * mouseleave. If set to false, hovering over the carousel won't pause it. (default: \"hover\")\n   */\n  pause: PropTypes.oneOf(['hover', false]),\n  // Autoplays the carousel after the user manually cycles the first item. If \"carousel\", autoplays the carousel on load.\n  // This is how bootstrap defines it... I would prefer a bool named autoplay or something...\n  ride: PropTypes.oneOf(['carousel']),\n  // the interval at which the carousel automatically cycles (default: 5000)\n  // eslint-disable-next-line react/no-unused-prop-types\n  interval: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  children: PropTypes.array,\n  // called when the mouse enters the Carousel\n  mouseEnter: PropTypes.func,\n  // called when the mouse exits the Carousel\n  mouseLeave: PropTypes.func,\n  // controls whether the slide animation on the Carousel works or not\n  slide: PropTypes.bool,\n  // make the controls, indicators and captions dark on the Carousel\n  dark: PropTypes.bool,\n  cssModule: PropTypes.object,\n  className: PropTypes.string,\n  enableTouch: PropTypes.bool,\n};\n\nCarousel.defaultProps = {\n  interval: 5000,\n  pause: 'hover',\n  keyboard: true,\n  slide: true,\n  enableTouch: true,\n  fade: false,\n};\n\nCarousel.childContextTypes = {\n  direction: PropTypes.string\n};\n\nexport default Carousel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\n\nconst CarouselControl = (props) => {\n  const { direction, onClickHandler, cssModule, directionText, className } = props;\n\n  const anchorClasses = mapToCssModules(classNames(\n    className,\n    `carousel-control-${direction}`\n  ), cssModule);\n\n  const iconClasses = mapToCssModules(classNames(\n    `carousel-control-${direction}-icon`\n  ), cssModule);\n\n  const screenReaderClasses = mapToCssModules(classNames(\n    'visually-hidden'\n  ), cssModule);\n\n\n  return (\n    // We need to disable this linting rule to use an `<a>` instead of\n    // `<button>` because that's what the Bootstrap examples require:\n    // https://getbootstrap.com/docs/4.5/components/carousel/#with-controls\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    <a\n      className={anchorClasses}\n      style={{cursor: \"pointer\"}}\n      role=\"button\"\n      tabIndex=\"0\"\n      onClick={(e) => {\n        e.preventDefault();\n        onClickHandler();\n      }}\n    >\n      <span className={iconClasses} aria-hidden=\"true\" />\n      <span className={screenReaderClasses}>{directionText || direction}</span>\n    </a>\n  );\n};\n\nCarouselControl.propTypes = {\n  direction: PropTypes.oneOf(['prev', 'next']).isRequired,\n  onClickHandler: PropTypes.func.isRequired,\n  cssModule: PropTypes.object,\n  directionText: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default CarouselControl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\n\nconst CarouselIndicators = (props) => {\n  const { items, activeIndex, cssModule, onClickHandler, className } = props;\n\n  const listClasses = mapToCssModules(classNames(className, 'carousel-indicators'), cssModule);\n  const indicators = items.map((item, idx) => {\n    const indicatorClasses = mapToCssModules(classNames(\n      { active: activeIndex === idx }\n    ), cssModule);\n    return (\n      <button\n        aria-label={item.caption}\n        data-bs-target\n        key={`${item.key || Object.values(item).join('')}`}\n        onClick={(e) => {\n          e.preventDefault();\n          onClickHandler(idx);\n        }}\n        className={indicatorClasses}\n      >\n        {item.caption}\n      </button>);\n  });\n\n  return (\n    <div className={listClasses}>\n      {indicators}\n    </div>\n  );\n};\n\nCarouselIndicators.propTypes = {\n  items: PropTypes.array.isRequired,\n  activeIndex: PropTypes.number.isRequired,\n  cssModule: PropTypes.object,\n  onClickHandler: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default CarouselIndicators;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\n\nconst CarouselCaption = (props) => {\n  const { captionHeader, captionText, cssModule, className } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'carousel-caption',\n    'd-none',\n    'd-md-block'\n  ), cssModule);\n\n  return (\n    <div className={classes}>\n      <h3>{captionHeader}</h3>\n      <p>{captionText}</p>\n    </div>\n  );\n};\n\nCarouselCaption.propTypes = {\n  captionHeader: PropTypes.node,\n  captionText: PropTypes.node.isRequired,\n  cssModule: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default CarouselCaption;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Carousel from './Carousel';\nimport CarouselItem from './CarouselItem';\nimport CarouselControl from './CarouselControl';\nimport CarouselIndicators from './CarouselIndicators';\nimport CarouselCaption from './CarouselCaption';\n\nconst propTypes = {\n  items: PropTypes.array.isRequired,\n  indicators: PropTypes.bool,\n  controls: PropTypes.bool,\n  autoPlay: PropTypes.bool,\n  defaultActiveIndex: PropTypes.number,\n  activeIndex: PropTypes.number,\n  next: PropTypes.func,\n  previous: PropTypes.func,\n  goToIndex: PropTypes.func,\n};\n\nclass UncontrolledCarousel extends Component {\n  constructor(props) {\n    super(props);\n    this.animating = false;\n    this.state = { activeIndex: props.defaultActiveIndex || 0 };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.goToIndex = this.goToIndex.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n  }\n\n  onExiting() {\n    this.animating = true;\n  }\n\n  onExited() {\n    this.animating = false;\n  }\n\n  next() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === this.props.items.length - 1 ? 0 : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === 0 ? this.props.items.length - 1 : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  render() {\n    const { defaultActiveIndex, autoPlay, indicators, controls, items, goToIndex, ...props } = this.props;\n    const { activeIndex } = this.state;\n\n    const slides = items.map((item) => {\n      const key = item.key || item.src;\n      return (\n        <CarouselItem\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n          key={key}\n        >\n          <img className=\"d-block w-100\" src={item.src} alt={item.altText} />\n          <CarouselCaption captionText={item.caption} captionHeader={item.header || item.caption} />\n        </CarouselItem>\n      );\n    });\n\n    return (\n      <Carousel\n        activeIndex={activeIndex}\n        next={this.next}\n        previous={this.previous}\n        ride={autoPlay ? 'carousel' : undefined}\n        {...props}\n      >\n        {indicators && <CarouselIndicators\n          items={items}\n          activeIndex={props.activeIndex || activeIndex}\n          onClickHandler={goToIndex || this.goToIndex}\n        />}\n        {slides}\n        {controls && <CarouselControl\n          direction=\"prev\"\n          directionText=\"Previous\"\n          onClickHandler={props.previous || this.previous}\n        />}\n        {controls && <CarouselControl\n          direction=\"next\"\n          directionText=\"Next\"\n          onClickHandler={props.next || this.next}\n        />}\n      </Carousel>\n    );\n  }\n}\n\nUncontrolledCarousel.propTypes = propTypes;\nUncontrolledCarousel.defaultProps = {\n  controls: true,\n  indicators: true,\n  autoPlay: true,\n};\n\nexport default UncontrolledCarousel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardSubtitle = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-subtitle'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardSubtitle.propTypes = propTypes;\nCardSubtitle.defaultProps = defaultProps;\n\nexport default CardSubtitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'p'\n};\n\nconst CardText = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-text'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\n\nexport default CardText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardTitle = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-title'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\n\nexport default CardTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { Popper as ReactPopper } from 'react-popper';\nimport { getTarget, targetPropType, mapToCssModules, DOMElement, tagPropType } from './utils';\nimport Fade from './Fade';\n\nfunction noop() {  }\n\nconst propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n  popperClassName: PropTypes.string,\n  placement: PropTypes.string,\n  placementPrefix: PropTypes.string,\n  arrowClassName: PropTypes.string,\n  hideArrow: PropTypes.bool,\n  tag: tagPropType,\n  isOpen: PropTypes.bool.isRequired,\n  cssModule: PropTypes.object,\n  offset: PropTypes.arrayOf(PropTypes.number),\n  fallbackPlacements: PropTypes.array,\n  flip: PropTypes.bool,\n  container: targetPropType,\n  target: targetPropType.isRequired,\n  modifiers: PropTypes.array,\n  strategy: PropTypes.string,\n  boundariesElement: PropTypes.oneOfType([PropTypes.string, DOMElement]),\n  onClosed: PropTypes.func,\n  fade: PropTypes.bool,\n  transition: PropTypes.shape(Fade.propTypes),\n};\n\nconst defaultProps = {\n  boundariesElement: 'scrollParent',\n  placement: 'auto',\n  hideArrow: false,\n  isOpen: false,\n  offset: [0, 0],\n  flip: true,\n  container: 'body',\n  modifiers: [],\n  onClosed: noop,\n  fade: true,\n  transition: {\n      ...Fade.defaultProps,\n  }\n};\n\nclass PopperContent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setTargetNode = this.setTargetNode.bind(this);\n    this.getTargetNode = this.getTargetNode.bind(this);\n    this.getRef = this.getRef.bind(this);\n    this.onClosed = this.onClosed.bind(this);\n    this.state = { isOpen: props.isOpen };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.isOpen && !state.isOpen) {\n      return { isOpen: props.isOpen };\n    }\n    else return null;\n  }\n\n  componentDidUpdate() {\n    if (this._element && this._element.childNodes && this._element.childNodes[0] && this._element.childNodes[0].focus) {\n      this._element.childNodes[0].focus();\n    }\n  }\n\n  setTargetNode(node) {\n    this.targetNode = typeof node === 'string' ? getTarget(node) : node;\n  }\n\n  getTargetNode() {\n    return this.targetNode;\n  }\n\n  getContainerNode() {\n    return getTarget(this.props.container);\n  }\n\n  getRef(ref) {\n    this._element = ref;\n  }\n\n  onClosed() {\n    this.props.onClosed();\n    this.setState({ isOpen: false });\n  }\n\n  renderChildren() {\n    const {\n      cssModule,\n      children,\n      isOpen,\n      flip,\n      target,\n      offset,\n      fallbackPlacements,\n      placementPrefix,\n      arrowClassName: _arrowClassName,\n      hideArrow,\n      popperClassName: _popperClassName,\n      tag,\n      container,\n      modifiers,\n      strategy,\n      boundariesElement,\n      onClosed,\n      fade,\n      transition,\n      placement,\n      ...attrs\n    } = this.props;\n    const arrowClassName = mapToCssModules(classNames(\n      'arrow',\n      _arrowClassName\n    ), cssModule);\n    const popperClassName = mapToCssModules(classNames(\n      _popperClassName,\n      placementPrefix ? `${placementPrefix}-auto` : ''\n    ), this.props.cssModule);\n\n    const modifierNames = modifiers.map(m => m.name);\n    const baseModifiers = [\n      {\n        name: 'offset',\n        options: {\n          offset,\n        },\n      },\n      {\n        name: 'flip',\n        enabled: flip,\n        options: {\n          fallbackPlacements,\n        },\n      },\n      {\n        name: 'preventOverflow',\n        options: {\n          boundary: boundariesElement,\n        },\n      },\n    ].filter(m => !modifierNames.includes(m.name));\n    const extendedModifiers = [ ...baseModifiers, ...modifiers];\n\n    const popperTransition = {\n      ...Fade.defaultProps,\n      ...transition,\n      baseClass: fade ? transition.baseClass : '',\n      timeout: fade ? transition.timeout : 0,\n    }\n\n    return (\n      <Fade\n        {...popperTransition}\n        {...attrs}\n        in={isOpen}\n        onExited={this.onClosed}\n        tag={tag}\n      >\n        <ReactPopper\n          referenceElement={this.targetNode}\n          modifiers={extendedModifiers}\n          placement={placement}\n          strategy={strategy}\n        >\n          {({ ref, style, placement: popperPlacement, isReferenceHidden, arrowProps, update }) => (\n            <div ref={ref} style={style} className={popperClassName} data-popper-placement={popperPlacement} data-popper-reference-hidden={isReferenceHidden ? 'true' : undefined}>\n              {typeof children === 'function' ? children({ update }) : children}\n              {!hideArrow && <span ref={arrowProps.ref} className={arrowClassName} style={arrowProps.style} />}\n            </div>\n          )}\n        </ReactPopper>\n      </Fade>\n    );\n  }\n\n  render() {\n    this.setTargetNode(this.props.target);\n\n    if (this.state.isOpen) {\n      return this.props.container === 'inline' ?\n        this.renderChildren() :\n        ReactDOM.createPortal((<div ref={this.getRef}>{this.renderChildren()}</div>), this.getContainerNode());\n    }\n\n    return null;\n  }\n}\n\nPopperContent.propTypes = propTypes;\nPopperContent.defaultProps = defaultProps;\n\nexport default PopperContent;\n","import PropTypes from 'prop-types';\nimport { getTarget, targetPropType } from './utils';\n\nconst PopperTargetHelper = (props, context) => {\n  context.popperManager.setTargetNode(getTarget(props.target));\n  return null;\n};\n\nPopperTargetHelper.contextTypes = {\n  popperManager: PropTypes.object.isRequired,\n};\n\nPopperTargetHelper.propTypes = {\n  target: targetPropType.isRequired,\n};\n\nexport default PopperTargetHelper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PopperContent from './PopperContent';\nimport {\n  getTarget,\n  targetPropType,\n  omit,\n  PopperPlacements,\n  mapToCssModules,\n  DOMElement\n} from './utils';\n\nexport const propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  placement: PropTypes.oneOf(PopperPlacements),\n  target: targetPropType.isRequired,\n  container: targetPropType,\n  isOpen: PropTypes.bool,\n  disabled: PropTypes.bool,\n  hideArrow: PropTypes.bool,\n  boundariesElement: PropTypes.oneOfType([PropTypes.string, DOMElement]),\n  className: PropTypes.string,\n  innerClassName: PropTypes.string,\n  arrowClassName: PropTypes.string,\n  popperClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  toggle: PropTypes.func,\n  autohide: PropTypes.bool,\n  placementPrefix: PropTypes.string,\n  delay: PropTypes.oneOfType([\n    PropTypes.shape({ show: PropTypes.number, hide: PropTypes.number }),\n    PropTypes.number\n  ]),\n  modifiers: PropTypes.array,\n  strategy: PropTypes.string,\n  offset: PropTypes.arrayOf(PropTypes.number),\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object\n  ]),\n  trigger: PropTypes.string,\n  fade: PropTypes.bool,\n  flip: PropTypes.bool,\n};\n\nconst DEFAULT_DELAYS = {\n  show: 0,\n  hide: 50\n};\n\nconst defaultProps = {\n  isOpen: false,\n  hideArrow: false,\n  autohide: false,\n  delay: DEFAULT_DELAYS,\n  toggle: function () {},\n  trigger: 'click',\n  fade: true,\n};\n\nfunction isInDOMSubtree(element, subtreeRoot) {\n  return subtreeRoot && (element === subtreeRoot || subtreeRoot.contains(element));\n}\n\nfunction isInDOMSubtrees(element, subtreeRoots = []) {\n  return subtreeRoots && subtreeRoots.length && subtreeRoots.filter(subTreeRoot=> isInDOMSubtree(element, subTreeRoot))[0];\n}\n\nclass TooltipPopoverWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._targets = [];\n    this.currentTargetElement = null;\n    this.addTargetEvents = this.addTargetEvents.bind(this);\n    this.handleDocumentClick = this.handleDocumentClick.bind(this);\n    this.removeTargetEvents = this.removeTargetEvents.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.showWithDelay = this.showWithDelay.bind(this);\n    this.hideWithDelay = this.hideWithDelay.bind(this);\n    this.onMouseOverTooltipContent = this.onMouseOverTooltipContent.bind(this);\n    this.onMouseLeaveTooltipContent = this.onMouseLeaveTooltipContent.bind(\n      this\n    );\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n    this.onEscKeyDown = this.onEscKeyDown.bind(this);\n    this.getRef = this.getRef.bind(this);\n    this.state = { isOpen: props.isOpen };\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.updateTarget();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this.removeTargetEvents();\n    this._targets = null;\n    this.clearShowTimeout();\n    this.clearHideTimeout();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.isOpen && !state.isOpen) {\n      return { isOpen: props.isOpen };\n    }\n    else return null;\n  }\n\n  onMouseOverTooltipContent() {\n    if (this.props.trigger.indexOf('hover') > -1 && !this.props.autohide) {\n      if (this._hideTimeout) {\n        this.clearHideTimeout();\n      }\n      if (this.state.isOpen && !this.props.isOpen) {\n        this.toggle();\n      }\n    }\n  }\n\n  onMouseLeaveTooltipContent(e) {\n    if (this.props.trigger.indexOf('hover') > -1 && !this.props.autohide) {\n      if (this._showTimeout) {\n        this.clearShowTimeout();\n      }\n      e.persist();\n      this._hideTimeout = setTimeout(\n        this.hide.bind(this, e),\n        this.getDelay('hide')\n      );\n    }\n  }\n\n  onEscKeyDown(e) {\n    if (e.key === 'Escape') {\n      this.hide(e);\n    }\n  }\n\n  getRef(ref) {\n    const { innerRef } = this.props;\n    if (innerRef) {\n      if (typeof innerRef === 'function') {\n        innerRef(ref);\n      } else if (typeof innerRef === 'object') {\n        innerRef.current = ref;\n      }\n    }\n    this._popover = ref;\n  }\n\n  getDelay(key) {\n    const { delay } = this.props;\n    if (typeof delay === 'object') {\n      return isNaN(delay[key]) ? DEFAULT_DELAYS[key] : delay[key];\n    }\n    return delay;\n  }\n\n  getCurrentTarget(target) {\n    if (!target)\n      return null;\n    const index = this._targets.indexOf(target);\n    if (index >= 0)\n      return this._targets[index];\n    return this.getCurrentTarget(target.parentElement);\n  }\n\n  show(e) {\n    if (!this.props.isOpen) {\n      this.clearShowTimeout();\n      this.currentTargetElement = e ? e.currentTarget || this.getCurrentTarget(e.target) : null;\n      if (e && e.composedPath && typeof e.composedPath === 'function') {\n        const path = e.composedPath();\n        this.currentTargetElement = (path && path[0]) || this.currentTargetElement;\n      }\n      this.toggle(e);\n    }\n  }\n\n  showWithDelay(e) {\n    if (this._hideTimeout) {\n      this.clearHideTimeout();\n    }\n    this._showTimeout = setTimeout(\n      this.show.bind(this, e),\n      this.getDelay('show')\n    );\n  }\n  hide(e) {\n    if (this.props.isOpen) {\n      this.clearHideTimeout();\n      this.currentTargetElement = null;\n      this.toggle(e);\n    }\n  }\n\n  hideWithDelay(e) {\n    if (this._showTimeout) {\n      this.clearShowTimeout();\n    }\n    this._hideTimeout = setTimeout(\n      this.hide.bind(this, e),\n      this.getDelay('hide')\n    );\n  }\n\n\n  clearShowTimeout() {\n    clearTimeout(this._showTimeout);\n    this._showTimeout = undefined;\n  }\n\n  clearHideTimeout() {\n    clearTimeout(this._hideTimeout);\n    this._hideTimeout = undefined;\n  }\n\n  handleDocumentClick(e) {\n    const triggers = this.props.trigger.split(' ');\n\n    if (triggers.indexOf('legacy') > -1 && (this.props.isOpen || isInDOMSubtrees(e.target, this._targets))) {\n      if (this._hideTimeout) {\n        this.clearHideTimeout();\n      }\n      if (this.props.isOpen && !isInDOMSubtree(e.target, this._popover)) {\n        this.hideWithDelay(e);\n      } else if (!this.props.isOpen) {\n        this.showWithDelay(e);\n      }\n    } else if (triggers.indexOf('click') > -1 && isInDOMSubtrees(e.target, this._targets)) {\n      if (this._hideTimeout) {\n        this.clearHideTimeout();\n      }\n\n      if (!this.props.isOpen) {\n        this.showWithDelay(e);\n      } else {\n        this.hideWithDelay(e);\n      }\n    }\n  }\n\n  addEventOnTargets(type, handler, isBubble) {\n    this._targets.forEach(target=> {\n      target.addEventListener(type, handler, isBubble);\n    });\n  }\n\n  removeEventOnTargets(type, handler, isBubble) {\n    this._targets.forEach(target=> {\n      target.removeEventListener(type, handler, isBubble);\n    });\n  }\n\n  addTargetEvents() {\n    if (this.props.trigger) {\n      let triggers = this.props.trigger.split(' ');\n      if (triggers.indexOf('manual') === -1) {\n        if (triggers.indexOf('click') > -1 || triggers.indexOf('legacy') > -1) {\n          document.addEventListener('click', this.handleDocumentClick, true);\n        }\n\n        if (this._targets && this._targets.length) {\n          if (triggers.indexOf('hover') > -1) {\n            this.addEventOnTargets(\n              'mouseover',\n              this.showWithDelay,\n              true\n            );\n            this.addEventOnTargets(\n              'mouseout',\n              this.hideWithDelay,\n              true\n            );\n          }\n          if (triggers.indexOf('focus') > -1) {\n            this.addEventOnTargets('focusin', this.show, true);\n            this.addEventOnTargets('focusout', this.hide, true);\n          }\n          this.addEventOnTargets('keydown', this.onEscKeyDown, true);\n        }\n      }\n    }\n  }\n\n  removeTargetEvents() {\n    if (this._targets) {\n      this.removeEventOnTargets(\n        'mouseover',\n        this.showWithDelay,\n        true\n      );\n      this.removeEventOnTargets(\n        'mouseout',\n        this.hideWithDelay,\n        true\n      );\n      this.removeEventOnTargets('keydown', this.onEscKeyDown, true);\n      this.removeEventOnTargets('focusin', this.show, true);\n      this.removeEventOnTargets('focusout', this.hide, true);\n    }\n\n    document.removeEventListener('click', this.handleDocumentClick, true)\n  }\n\n  updateTarget() {\n    const newTarget = getTarget(this.props.target, true);\n    if (newTarget !== this._targets) {\n      this.removeTargetEvents();\n      this._targets = newTarget ? Array.from(newTarget) : [];\n      this.currentTargetElement = this.currentTargetElement || this._targets[0];\n      this.addTargetEvents();\n    }\n  }\n\n  toggle(e) {\n    if (this.props.disabled || !this._isMounted) {\n      return e && e.preventDefault();\n    }\n\n    return this.props.toggle(e);\n  }\n\n  render() {\n    if (this.props.isOpen) {\n      this.updateTarget();\n    }\n\n    const target = this.currentTargetElement || this._targets[0];\n    if (!target) {\n      return null;\n    }\n\n    const {\n      className,\n      cssModule,\n      innerClassName,\n      isOpen,\n      hideArrow,\n      boundariesElement,\n      placement,\n      placementPrefix,\n      arrowClassName,\n      popperClassName,\n      container,\n      modifiers,\n      strategy,\n      offset,\n      fade,\n      flip,\n      children\n    } = this.props;\n\n    const attributes = omit(this.props, Object.keys(propTypes));\n\n    const popperClasses = mapToCssModules(popperClassName, cssModule);\n\n    const classes = mapToCssModules(innerClassName, cssModule);\n\n    return (\n      <PopperContent\n        className={className}\n        target={target}\n        isOpen={isOpen}\n        hideArrow={hideArrow}\n        boundariesElement={boundariesElement}\n        placement={placement}\n        placementPrefix={placementPrefix}\n        arrowClassName={arrowClassName}\n        popperClassName={popperClasses}\n        container={container}\n        modifiers={modifiers}\n        strategy={strategy}\n        offset={offset}\n        cssModule={cssModule}\n        fade={fade}\n        flip={flip}\n      >\n        {({ update }) => (\n          <div\n            {...attributes}\n            ref={this.getRef}\n            className={classes}\n            role=\"tooltip\"\n            onMouseOver={this.onMouseOverTooltipContent}\n            onMouseLeave={this.onMouseLeaveTooltipContent}\n            onKeyDown={this.onEscKeyDown}\n          >\n            {typeof children === 'function' ? children({ update }) : children}\n          </div>\n        )}\n\n      </PopperContent>\n    );\n  }\n}\n\nTooltipPopoverWrapper.propTypes = propTypes;\nTooltipPopoverWrapper.defaultProps = defaultProps;\n\nexport default TooltipPopoverWrapper;\n","import React from 'react';\nimport classNames from 'classnames';\nimport TooltipPopoverWrapper, { propTypes } from './TooltipPopoverWrapper';\n\nconst defaultProps = {\n  placement: 'right',\n  placementPrefix: 'bs-popover',\n  trigger: 'click',\n  offset: [0, 8]\n};\n\nconst Popover = (props) => {\n  const popperClasses = classNames(\n    'popover',\n    'show',\n    props.popperClassName\n  );\n\n  const classes = classNames(\n    'popover-inner',\n    props.innerClassName\n  );\n\n\n  return (\n    <TooltipPopoverWrapper\n      {...props}\n      arrowClassName=\"popover-arrow\"\n      popperClassName={popperClasses}\n      innerClassName={classes}\n    />\n  );\n};\n\nPopover.propTypes = propTypes;\nPopover.defaultProps = defaultProps;\n\n\nexport default Popover;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from './Popover';\nimport { omit } from './utils';\n\nconst omitKeys = ['defaultOpen'];\n\nexport default class UncontrolledPopover extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: props.defaultOpen || false };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    return <Popover isOpen={this.state.isOpen} toggle={this.toggle} {...omit(this.props, omitKeys)} />;\n  }\n}\n\nUncontrolledPopover.propTypes = {\n  defaultOpen: PropTypes.bool,\n  ...Popover.propTypes\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'h3'\n};\n\nconst PopoverHeader = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'popover-header'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nPopoverHeader.propTypes = propTypes;\nPopoverHeader.defaultProps = defaultProps;\n\nexport default PopoverHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst PopoverBody = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'popover-body'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nPopoverBody.propTypes = propTypes;\nPopoverBody.defaultProps = defaultProps;\n\nexport default PopoverBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, toNumber } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  bar: PropTypes.bool,\n  multi: PropTypes.bool,\n  tag: tagPropType,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  min: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  max: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  animated: PropTypes.bool,\n  striped: PropTypes.bool,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  barClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  style: PropTypes.object,\n  barStyle: PropTypes.object,\n  barAriaValueText: PropTypes.string,\n  barAriaLabelledBy: PropTypes.string,\n};\n\nconst defaultProps = {\n  tag: 'div',\n  value: 0,\n  min: 0,\n  max: 100,\n  style: {},\n  barStyle: {}\n};\n\nconst Progress = (props) => {\n  const {\n    children,\n    className,\n    barClassName,\n    cssModule,\n    value,\n    min,\n    max,\n    animated,\n    striped,\n    color,\n    bar,\n    multi,\n    tag: Tag,\n    style,\n    barStyle,\n    barAriaValueText,\n    barAriaLabelledBy,\n    ...attributes\n  } = props;\n\n  const percent = ((toNumber(value) / toNumber(max)) * 100);\n\n  const progressClasses = mapToCssModules(classNames(\n    className,\n    'progress'\n  ), cssModule);\n\n  const progressBarClasses = mapToCssModules(classNames(\n    'progress-bar',\n    bar ? className || barClassName : barClassName,\n    animated ? 'progress-bar-animated' : null,\n    color ? `bg-${color}` : null,\n    striped || animated ? 'progress-bar-striped' : null\n  ), cssModule);\n\n  const progressBarProps = {\n    className: progressBarClasses,\n    style: {\n      ...(bar ? style : {}),\n      ...barStyle,\n      width: `${percent}%`,\n    },\n    role: 'progressbar',\n    'aria-valuenow': value,\n    'aria-valuemin': min,\n    'aria-valuemax': max,\n    'aria-valuetext': barAriaValueText,\n    'aria-labelledby': barAriaLabelledBy,\n    children: children\n  };\n\n  if (bar) {\n    return (\n      <Tag \n        {...attributes}\n        {...progressBarProps} \n      />\n    );\n  }\n\n  return (\n    <Tag {...attributes} style={style} className={progressClasses}>\n      {multi ? children : <div {...progressBarProps} />}\n    </Tag>\n  );\n};\n\nProgress.propTypes = propTypes;\nProgress.defaultProps = defaultProps;\n\nexport default Progress;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { canUseDOM } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  node: PropTypes.any\n};\n\nclass Portal extends React.Component {\n  componentWillUnmount() {\n    if (this.defaultNode) {\n      document.body.removeChild(this.defaultNode);\n    }\n    this.defaultNode = null;\n  }\n\n  render() {\n    if (!canUseDOM) {\n      return null;\n    }\n\n    if (!this.props.node && !this.defaultNode) {\n      this.defaultNode = document.createElement('div');\n      document.body.appendChild(this.defaultNode);\n    }\n\n    return ReactDOM.createPortal(\n      this.props.children,\n      this.props.node || this.defaultNode\n    );\n  }\n}\n\nPortal.propTypes = propTypes;\n\nexport default Portal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Portal from './Portal';\nimport Fade from './Fade';\nimport {\n  getOriginalBodyPadding,\n  conditionallyUpdateScrollbar,\n  setScrollbarWidth,\n  mapToCssModules,\n  omit,\n  focusableElements,\n  TransitionTimeouts,\n  keyCodes,\n  targetPropType,\n  getTarget\n} from './utils';\n\nfunction noop() { }\n\nconst FadePropTypes = PropTypes.shape(Fade.propTypes);\n\nconst propTypes = {\n  isOpen: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  centered: PropTypes.bool,\n  fullscreen: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['sm', 'md', 'lg', 'xl']),\n  ]),\n  scrollable: PropTypes.bool,\n  size: PropTypes.string,\n  toggle: PropTypes.func,\n  keyboard: PropTypes.bool,\n  role: PropTypes.string,\n  labelledBy: PropTypes.string,\n  backdrop: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['static'])\n  ]),\n  onEnter: PropTypes.func,\n  onExit: PropTypes.func,\n  onOpened: PropTypes.func,\n  onClosed: PropTypes.func,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  wrapClassName: PropTypes.string,\n  modalClassName: PropTypes.string,\n  backdropClassName: PropTypes.string,\n  contentClassName: PropTypes.string,\n  external: PropTypes.node,\n  fade: PropTypes.bool,\n  cssModule: PropTypes.object,\n  zIndex: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  backdropTransition: FadePropTypes,\n  modalTransition: FadePropTypes,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  unmountOnClose: PropTypes.bool,\n  returnFocusAfterClose: PropTypes.bool,\n  container: targetPropType,\n  trapFocus: PropTypes.bool\n};\n\nconst propsToOmit = Object.keys(propTypes);\n\nconst defaultProps = {\n  isOpen: false,\n  autoFocus: true,\n  centered: false,\n  scrollable: false,\n  role: 'dialog',\n  backdrop: true,\n  keyboard: true,\n  zIndex: 1050,\n  fade: true,\n  onOpened: noop,\n  onClosed: noop,\n  modalTransition: {\n    timeout: TransitionTimeouts.Modal,\n  },\n  backdropTransition: {\n    mountOnEnter: true,\n    timeout: TransitionTimeouts.Fade, // uses standard fade transition\n  },\n  unmountOnClose: true,\n  returnFocusAfterClose: true,\n  container: 'body',\n  trapFocus: false\n};\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._element = null;\n    this._originalBodyPadding = null;\n    this.getFocusableChildren = this.getFocusableChildren.bind(this);\n    this.handleBackdropClick = this.handleBackdropClick.bind(this);\n    this.handleBackdropMouseDown = this.handleBackdropMouseDown.bind(this);\n    this.handleEscape = this.handleEscape.bind(this);\n    this.handleStaticBackdropAnimation = this.handleStaticBackdropAnimation.bind(this);\n    this.handleTab = this.handleTab.bind(this);\n    this.onOpened = this.onOpened.bind(this);\n    this.onClosed = this.onClosed.bind(this);\n    this.manageFocusAfterClose = this.manageFocusAfterClose.bind(this);\n    this.clearBackdropAnimationTimeout = this.clearBackdropAnimationTimeout.bind(this);\n    this.trapFocus = this.trapFocus.bind(this);\n\n    this.state = {\n      isOpen: false,\n      showStaticBackdropAnimation: false\n    };\n  }\n\n  componentDidMount() {\n    const { isOpen, autoFocus, onEnter } = this.props;\n\n    if (isOpen) {\n      this.init();\n      this.setState({ isOpen: true })\n      if (autoFocus) {\n        this.setFocus();\n      }\n    }\n\n    if (onEnter) {\n      onEnter();\n    }\n\n    // traps focus inside the Modal, even if the browser address bar is focused\n    document.addEventListener('focus', this.trapFocus, true);\n\n    this._isMounted = true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.isOpen && !prevProps.isOpen) {\n      this.init();\n      this.setState({ isOpen: true});\n      // let render() renders Modal Dialog first\n      return;\n    }\n\n    // now Modal Dialog is rendered and we can refer this._element and this._dialog\n    if (this.props.autoFocus && this.state.isOpen && !prevState.isOpen) {\n      this.setFocus();\n    }\n\n    if (this._element && prevProps.zIndex !== this.props.zIndex) {\n      this._element.style.zIndex = this.props.zIndex;\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearBackdropAnimationTimeout();\n\n    if (this.props.onExit) {\n      this.props.onExit();\n    }\n\n    if (this._element) {\n      this.destroy();\n      if (this.props.isOpen || this.state.isOpen) {\n        this.close();\n      }\n    }\n\n    document.removeEventListener('focus', this.trapFocus, true);\n    this._isMounted = false;\n  }\n\n  trapFocus (ev) {\n    if (!this.props.trapFocus) {\n      return;\n    }\n\n    if (!this._element) //element is not attached\n      return;\n\n    if (this._dialog && this._dialog.parentNode === ev.target) // initial focus when the Modal is opened\n      return;\n\n    if (this.modalIndex < (Modal.openCount - 1)) // last opened modal\n      return;\n\n    const children = this.getFocusableChildren();\n\n    for (let i = 0; i < children.length; i++) { // focus is already inside the Modal\n      if (children[i] === ev.target)\n        return;\n    }\n\n    if (children.length > 0) { // otherwise focus the first focusable element in the Modal\n      ev.preventDefault();\n      ev.stopPropagation();\n      children[0].focus();\n    }\n  }\n\n  onOpened(node, isAppearing) {\n    this.props.onOpened();\n    (this.props.modalTransition.onEntered || noop)(node, isAppearing);\n  }\n\n  onClosed(node) {\n    const { unmountOnClose } = this.props;\n    // so all methods get called before it is unmounted\n    this.props.onClosed();\n    (this.props.modalTransition.onExited || noop)(node);\n\n    if (unmountOnClose) {\n      this.destroy();\n    }\n    this.close();\n\n    if (this._isMounted) {\n      this.setState({ isOpen: false });\n    }\n  }\n\n  setFocus() {\n    if (this._dialog && this._dialog.parentNode && typeof this._dialog.parentNode.focus === 'function') {\n      this._dialog.parentNode.focus();\n    }\n  }\n\n  getFocusableChildren() {\n    return this._element.querySelectorAll(focusableElements.join(', '));\n  }\n\n  getFocusedChild() {\n    let currentFocus;\n    const focusableChildren = this.getFocusableChildren();\n\n    try {\n      currentFocus = document.activeElement;\n    } catch (err) {\n      currentFocus = focusableChildren[0];\n    }\n    return currentFocus;\n  }\n\n  // not mouseUp because scrollbar fires it, shouldn't close when user scrolls\n  handleBackdropClick(e) {\n    if (e.target === this._mouseDownElement) {\n      e.stopPropagation();\n\n      const backdrop = this._dialog ? this._dialog.parentNode : null;\n\n      if (backdrop && e.target === backdrop && this.props.backdrop === 'static') {\n        this.handleStaticBackdropAnimation();\n      }\n\n      if (!this.props.isOpen || this.props.backdrop !== true) return;\n\n      if (backdrop && e.target === backdrop && this.props.toggle) {\n        this.props.toggle(e);\n      }\n    }\n  }\n\n  handleTab(e) {\n    if (e.which !== 9) return;\n    if (this.modalIndex < (Modal.openCount - 1)) return; // last opened modal\n\n    const focusableChildren = this.getFocusableChildren();\n    const totalFocusable = focusableChildren.length;\n    if (totalFocusable === 0) return;\n    const currentFocus = this.getFocusedChild();\n\n    let focusedIndex = 0;\n\n    for (let i = 0; i < totalFocusable; i += 1) {\n      if (focusableChildren[i] === currentFocus) {\n        focusedIndex = i;\n        break;\n      }\n    }\n\n    if (e.shiftKey && focusedIndex === 0) {\n      e.preventDefault();\n      focusableChildren[totalFocusable - 1].focus();\n    } else if (!e.shiftKey && focusedIndex === totalFocusable - 1) {\n      e.preventDefault();\n      focusableChildren[0].focus();\n    }\n  }\n\n  handleBackdropMouseDown(e) {\n    this._mouseDownElement = e.target;\n  }\n\n  handleEscape(e) {\n    if (this.props.isOpen && e.keyCode === keyCodes.esc && this.props.toggle) {\n      if (this.props.keyboard) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.props.toggle(e);\n      }\n      else if (this.props.backdrop === 'static') {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleStaticBackdropAnimation();\n      }\n    }\n  }\n\n  handleStaticBackdropAnimation() {\n    this.clearBackdropAnimationTimeout();\n    this.setState({ showStaticBackdropAnimation: true });\n    this._backdropAnimationTimeout = setTimeout(() => {\n      this.setState({ showStaticBackdropAnimation: false });\n    }, 100);\n  }\n\n  init() {\n    try {\n      this._triggeringElement = document.activeElement;\n    } catch (err) {\n      this._triggeringElement = null;\n    }\n\n    if (!this._element) {\n      this._element = document.createElement('div');\n      this._element.setAttribute('tabindex', '-1');\n      this._element.style.position = 'relative';\n      this._element.style.zIndex = this.props.zIndex;\n      this._mountContainer = getTarget(this.props.container);\n      this._mountContainer.appendChild(this._element);\n    }\n\n    this._originalBodyPadding = getOriginalBodyPadding();\n    conditionallyUpdateScrollbar();\n\n    if (Modal.openCount === 0) {\n      document.body.className = classNames(\n        document.body.className,\n        mapToCssModules('modal-open', this.props.cssModule)\n      );\n    }\n\n    this.modalIndex = Modal.openCount;\n    Modal.openCount += 1;\n  }\n\n  destroy() {\n    if (this._element) {\n      this._mountContainer.removeChild(this._element);\n      this._element = null;\n    }\n\n    this.manageFocusAfterClose();\n  }\n\n  manageFocusAfterClose() {\n    if (this._triggeringElement) {\n      const { returnFocusAfterClose } = this.props;\n      if (this._triggeringElement.focus && returnFocusAfterClose) this._triggeringElement.focus();\n      this._triggeringElement = null;\n    }\n  }\n\n  close() {\n    if (Modal.openCount <= 1) {\n      const modalOpenClassName = mapToCssModules('modal-open', this.props.cssModule);\n      // Use regex to prevent matching `modal-open` as part of a different class, e.g. `my-modal-opened`\n      const modalOpenClassNameRegex = new RegExp(`(^| )${modalOpenClassName}( |$)`);\n      document.body.className = document.body.className.replace(modalOpenClassNameRegex, ' ').trim();\n    }\n    this.manageFocusAfterClose();\n    Modal.openCount = Math.max(0, Modal.openCount - 1);\n\n    setScrollbarWidth(this._originalBodyPadding);\n  }\n\n  renderModalDialog() {\n    const attributes = omit(this.props, propsToOmit);\n    const dialogBaseClass = 'modal-dialog';\n\n    return (\n      <div\n        {...attributes}\n        className={mapToCssModules(classNames(dialogBaseClass, this.props.className, {\n          [`modal-${this.props.size}`]: this.props.size,\n          [`${dialogBaseClass}-centered`]: this.props.centered,\n          [`${dialogBaseClass}-scrollable`]: this.props.scrollable,\n          'modal-fullscreen': this.props.fullscreen === true,\n          [`modal-fullscreen-${this.props.fullscreen}-down`]: (typeof this.props.fullscreen) === 'string',\n        }), this.props.cssModule)}\n        role=\"document\"\n        ref={(c) => {\n          this._dialog = c;\n        }}\n      >\n        <div\n          className={mapToCssModules(\n            classNames('modal-content', this.props.contentClassName),\n            this.props.cssModule\n          )}\n        >\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      unmountOnClose\n    } = this.props;\n\n    if (!!this._element && (this.state.isOpen || !unmountOnClose)) {\n      const isModalHidden = !!this._element && !this.state.isOpen && !unmountOnClose;\n      this._element.style.display = isModalHidden ? 'none' : 'block';\n\n      const {\n        wrapClassName,\n        modalClassName,\n        backdropClassName,\n        cssModule,\n        isOpen,\n        backdrop,\n        role,\n        labelledBy,\n        external,\n        innerRef,\n      } = this.props;\n\n      const modalAttributes = {\n        onClick: this.handleBackdropClick,\n        onMouseDown: this.handleBackdropMouseDown,\n        onKeyUp: this.handleEscape,\n        onKeyDown: this.handleTab,\n        style: { display: 'block' },\n        'aria-labelledby': labelledBy,\n        role,\n        tabIndex: '-1'\n      };\n\n      const hasTransition = this.props.fade;\n      const modalTransition = {\n        ...Fade.defaultProps,\n        ...this.props.modalTransition,\n        baseClass: hasTransition ? this.props.modalTransition.baseClass : '',\n        timeout: hasTransition ? this.props.modalTransition.timeout : 0,\n      };\n      const backdropTransition = {\n        ...Fade.defaultProps,\n        ...this.props.backdropTransition,\n        baseClass: hasTransition ? this.props.backdropTransition.baseClass : '',\n        timeout: hasTransition ? this.props.backdropTransition.timeout : 0,\n      };\n\n      const Backdrop = backdrop && (\n        hasTransition ?\n          (<Fade\n            {...backdropTransition}\n            in={isOpen && !!backdrop}\n            cssModule={cssModule}\n            className={mapToCssModules(classNames('modal-backdrop', backdropClassName), cssModule)}\n          />)\n          : <div className={mapToCssModules(classNames('modal-backdrop', 'show', backdropClassName), cssModule)} />\n      );\n\n      return (\n        <Portal node={this._element}>\n          <div className={mapToCssModules(wrapClassName)}>\n            <Fade\n              {...modalAttributes}\n              {...modalTransition}\n              in={isOpen}\n              onEntered={this.onOpened}\n              onExited={this.onClosed}\n              cssModule={cssModule}\n              className={mapToCssModules(classNames('modal', modalClassName, this.state.showStaticBackdropAnimation && 'modal-static'), cssModule)}\n              innerRef={innerRef}\n            >\n              {external}\n              {this.renderModalDialog()}\n            </Fade>\n            {Backdrop}\n          </div>\n        </Portal>\n      );\n    }\n    return null;\n  }\n\n  clearBackdropAnimationTimeout() {\n    if (this._backdropAnimationTimeout) {\n      clearTimeout(this._backdropAnimationTimeout);\n      this._backdropAnimationTimeout = undefined;\n    }\n  }\n}\n\nModal.propTypes = propTypes;\nModal.defaultProps = defaultProps;\nModal.openCount = 0;\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  wrapTag: tagPropType,\n  toggle: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  closeAriaLabel: PropTypes.string,\n  close: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'h5',\n  wrapTag: 'div',\n  closeAriaLabel: 'Close',\n};\n\nconst ModalHeader = (props) => {\n  let closeButton;\n  const {\n    className,\n    cssModule,\n    children,\n    toggle,\n    tag: Tag,\n    wrapTag: WrapTag,\n    closeAriaLabel,\n    close,\n    ...attributes } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'modal-header'\n  ), cssModule);\n\n  if (!close && toggle) {\n    closeButton = (\n      <button type=\"button\" onClick={toggle} className={mapToCssModules('btn-close', cssModule)} aria-label={closeAriaLabel} />\n    );\n  }\n\n  return (\n    <WrapTag {...attributes} className={classes}>\n      <Tag className={mapToCssModules('modal-title', cssModule)}>\n        {children}\n      </Tag>\n      {close || closeButton}\n    </WrapTag>\n  );\n};\n\nModalHeader.propTypes = propTypes;\nModalHeader.defaultProps = defaultProps;\n\nexport default ModalHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\nconst ModalBody = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'modal-body'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nModalBody.propTypes = propTypes;\nModalBody.defaultProps = defaultProps;\n\nexport default ModalBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\nconst ModalFooter = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'modal-footer'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nModalFooter.propTypes = propTypes;\nModalFooter.defaultProps = defaultProps;\n\nexport default ModalFooter;\n","import React from 'react';\nimport classNames from 'classnames';\nimport TooltipPopoverWrapper, { propTypes } from './TooltipPopoverWrapper';\n\nconst defaultProps = {\n  placement: 'top',\n  autohide: true,\n  placementPrefix: 'bs-tooltip',\n  trigger: 'hover focus',\n};\n\nconst Tooltip = (props) => {\n  const popperClasses = classNames(\n    'tooltip',\n    'show',\n    props.popperClassName\n  );\n\n  const classes = classNames(\n    'tooltip-inner',\n    props.innerClassName\n  );\n\n\n  return (\n    <TooltipPopoverWrapper\n      {...props}\n      arrowClassName=\"tooltip-arrow\"\n      popperClassName={popperClasses}\n      innerClassName={classes}\n    />\n  );\n};\n\nTooltip.propTypes = propTypes;\nTooltip.defaultProps = defaultProps;\n\n\nexport default Tooltip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]),\n};\n\nconst defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div',\n};\n\nconst Table = (props) => {\n  const {\n    className,\n    cssModule,\n    size,\n    bordered,\n    borderless,\n    striped,\n    dark,\n    hover,\n    responsive,\n    tag: Tag,\n    responsiveTag: ResponsiveTag,\n    innerRef,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'table',\n    size ? 'table-' + size : false,\n    bordered ? 'table-bordered' : false,\n    borderless ? 'table-borderless' : false,\n    striped ? 'table-striped' : false,\n    dark ? 'table-dark' : false,\n    hover ? 'table-hover' : false,\n  ), cssModule);\n\n  const table = <Tag {...attributes} ref={innerRef} className={classes} />;\n\n  if (responsive) {\n    const responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : `table-responsive-${responsive}`, cssModule);\n\n    return (\n      <ResponsiveTag className={responsiveClassName}>{table}</ResponsiveTag>\n    );\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  flush: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  horizontal: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  numbered: PropTypes.bool\n};\n\nconst defaultProps = {\n  tag: 'ul',\n  horizontal: false,\n  numbered: false\n};\n\nconst getHorizontalClass = horizontal => {\n  if (horizontal === false) {\n    return false;\n  } else if (horizontal === true || horizontal === \"xs\") {\n    return \"list-group-horizontal\";\n  }\n  return `list-group-horizontal-${horizontal}`;\n};\n\nconst ListGroup = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    flush,\n    horizontal,\n    numbered,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'list-group',\n    // list-group-horizontal cannot currently be mixed with list-group-flush\n    // we only try to apply horizontal classes if flush is false\n    flush ? 'list-group-flush' : getHorizontalClass(horizontal),\n    {\n      'list-group-numbered': numbered\n    }\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nListGroup.propTypes = propTypes;\nListGroup.defaultProps = defaultProps;\n\nexport default ListGroup;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'form',\n};\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.getRef = this.getRef.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n    this.ref = ref;\n  }\n\n  submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  }\n\n  render() {\n    const {\n      className,\n      cssModule,\n      inline,\n      tag: Tag,\n      innerRef,\n      ...attributes\n    } = this.props;\n\n    const classes = mapToCssModules(classNames(\n      className,\n      inline ? 'form-inline' : false\n    ), cssModule);\n\n    return (\n      <Tag {...attributes} ref={innerRef} className={classes} />\n    );\n  }\n}\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  valid: PropTypes.bool,\n  tooltip: PropTypes.bool\n};\n\nconst defaultProps = {\n  tag: 'div',\n  valid: undefined\n};\n\nconst FormFeedback = (props) => {\n  const {\n    className,\n    cssModule,\n    valid,\n    tooltip,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const validMode = tooltip ? 'tooltip' : 'feedback';\n\n  const classes = mapToCssModules(\n    classNames(\n      className,\n      valid ? `valid-${validMode}` : `invalid-${validMode}`\n    ),\n    cssModule\n  );\n\n  return <Tag {...attributes} className={classes} />;\n};\n\nFormFeedback.propTypes = propTypes;\nFormFeedback.defaultProps = defaultProps;\n\nexport default FormFeedback;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  switch: PropTypes.bool,\n  inline: PropTypes.bool,\n  floating: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\nconst FormGroup = (props) => {\n  const {\n    className,\n    cssModule,\n    row,\n    disabled,\n    check,\n    inline,\n    floating,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const formCheck = check || props.switch;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    row ? 'row' : false,\n    formCheck ? 'form-check' : 'mb-3',\n    props.switch ? 'form-switch' : false,\n    formCheck && inline ? 'form-check-inline' : false,\n    formCheck && disabled ? 'disabled' : false,\n    floating && 'form-floating'\n  ), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\n\nexport default FormGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'small',\n  color: 'muted',\n};\n\nconst FormText = (props) => {\n  const {\n    className,\n    cssModule,\n    inline,\n    color,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    !inline ? 'form-text' : false,\n    color ? `text-${color}` : false\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nFormText.propTypes = propTypes;\nFormText.defaultProps = defaultProps;\n\nexport default FormText;\n","/* eslint react/prefer-stateless-function: 0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.func,\n    PropTypes.string\n  ]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\n\nconst defaultProps = {\n  type: 'text'\n};\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getRef = this.getRef.bind(this);\n    this.focus = this.focus.bind(this);\n  }\n\n  getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n    this.ref = ref;\n  }\n\n  focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  }\n\n  render() {\n    let {\n      className,\n      cssModule,\n      type,\n      bsSize,\n      valid,\n      invalid,\n      tag,\n      addon,\n      plaintext,\n      innerRef,\n      ...attributes\n    } = this.props;\n\n    const checkInput = ['switch', 'radio', 'checkbox'].indexOf(type) > -1;\n    const isNotaNumber = new RegExp('\\\\D', 'g');\n\n    const textareaInput = type === 'textarea';\n    const selectInput = type === 'select';\n    const rangeInput = type === 'range';\n    let Tag = tag || (selectInput || textareaInput ? type : 'input');\n\n    let formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = `${formControlClass}-plaintext`;\n      Tag = tag || 'input';\n    } else if (rangeInput) {\n      formControlClass = 'form-range';\n    } else if (selectInput) {\n      formControlClass = \"form-select\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce(\n        'Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.'\n      );\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    const classes = mapToCssModules(\n      classNames(\n        className,\n        invalid && 'is-invalid',\n        valid && 'is-valid',\n        bsSize\n          ? selectInput\n            ? `form-select-${bsSize}`\n            : `form-control-${bsSize}`\n          : false,\n        formControlClass\n      ),\n      cssModule\n    );\n\n    if (Tag === 'input' || (tag && typeof tag === 'function')) {\n      attributes.type = type === 'switch' ? 'checkbox' : type;\n    }\n\n    if (\n      attributes.children &&\n      !(\n        plaintext ||\n        type === 'select' ||\n        typeof Tag !== 'string' ||\n        Tag === 'select'\n      )\n    ) {\n      warnOnce(\n        `Input with a type of \"${type}\" cannot have children. Please use \"value\"/\"defaultValue\" instead.`\n      );\n      delete attributes.children;\n    }\n\n    return <Tag {...attributes} ref={innerRef} className={classes} aria-invalid={invalid} />;\n  }\n}\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Dropdown from './Dropdown';\n\nconst propTypes = {\n  tag: tagPropType,\n  type: PropTypes.bool,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst InputGroup = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    type,\n    size,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'input-group',\n    size ? `input-group-${size}` : null\n  ), cssModule);\n\n  if (props.type === 'dropdown') {\n    return <Dropdown {...attributes} className={classes} />\n  }\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\n\nexport default InputGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'span'\n};\n\nconst InputGroupText = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'input-group-text'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nInputGroupText.propTypes = propTypes;\nInputGroupText.defaultProps = defaultProps;\n\nexport default InputGroupText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\n\nconst colWidths = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\n\nconst stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\n\nconst columnProps = PropTypes.oneOfType([\n  PropTypes.bool,\n  PropTypes.string,\n  PropTypes.number,\n  PropTypes.shape({\n    size: stringOrNumberProp,\n    order: stringOrNumberProp,\n    offset: stringOrNumberProp,\n  }),\n]);\n\nconst propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  xxl: columnProps,\n  widths: PropTypes.array,\n};\n\nconst defaultProps = {\n  tag: 'label',\n  widths: colWidths,\n};\n\nconst getColumnSizeClass = (isXs, colWidth, colSize) => {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : `col-${colWidth}`;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : `col-${colWidth}-auto`;\n  }\n\n  return isXs ? `col-${colSize}` : `col-${colWidth}-${colSize}`;\n};\n\nconst Label = (props) => {\n  const {\n    className,\n    cssModule,\n    hidden,\n    widths,\n    tag: Tag,\n    check,\n    size,\n    for: htmlFor,\n    ...attributes\n  } = props;\n\n  const colClasses = [];\n\n  widths.forEach((colWidth, i) => {\n    let columnProp = props[colWidth];\n\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    const isXs = !i;\n    let colClass;\n\n    if (isObject(columnProp)) {\n      const colSizeInterfix = isXs ? '-' : `-${colWidth}-`;\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n\n      colClasses.push(mapToCssModules(classNames({\n        [colClass]: columnProp.size || columnProp.size === '',\n        [`order${colSizeInterfix}${columnProp.order}`]: columnProp.order || columnProp.order === 0,\n        [`offset${colSizeInterfix}${columnProp.offset}`]: columnProp.offset || columnProp.offset === 0\n      })), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n\n  const classes = mapToCssModules(classNames(\n    className,\n    hidden ? 'visually-hidden' : false,\n    check ? 'form-check-label' : false,\n    size ? `col-form-label-${size}` : false,\n    colClasses,\n    colClasses.length ? 'col-form-label' : 'form-label'\n  ), cssModule);\n\n  return (\n    <Tag htmlFor={htmlFor} {...attributes} className={classes} />\n  );\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\n\nexport default Label;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  body: PropTypes.bool,\n  bottom: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  heading: PropTypes.bool,\n  left: PropTypes.bool,\n  list: PropTypes.bool,\n  middle: PropTypes.bool,\n  object: PropTypes.bool,\n  right: PropTypes.bool,\n  tag: tagPropType,\n  top: PropTypes.bool,\n};\n\nconst Media = (props) => {\n  const {\n    body,\n    bottom,\n    className,\n    cssModule,\n    heading,\n    left,\n    list,\n    middle,\n    object,\n    right,\n    tag,\n    top,\n    ...attributes\n  } = props;\n\n  let defaultTag;\n  if (heading) {\n    defaultTag = 'h4';\n  } else if (attributes.href) {\n    defaultTag = 'a';\n  } else if (attributes.src || object) {\n    defaultTag = 'img';\n  } else if (list) {\n    defaultTag = 'ul';\n  } else {\n    defaultTag = 'div';\n  }\n  const Tag = tag || defaultTag;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    {\n      'media-body': body,\n      'media-heading': heading,\n      'media-left': left,\n      'media-right': right,\n      'media-top': top,\n      'media-bottom': bottom,\n      'media-middle': middle,\n      'media-object': object,\n      'media-list': list,\n      media: !body && !heading && !left && !right && !top && !bottom && !middle && !object && !list,\n    }\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nMedia.propTypes = propTypes;\n\nexport default Media;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Portal from './Portal';\nimport Fade from './Fade';\nimport {\n  TransitionTimeouts,\n  conditionallyUpdateScrollbar,\n  focusableElements,\n  getOriginalBodyPadding,\n  getTarget,\n  keyCodes,\n  mapToCssModules,\n  omit,\n  setScrollbarWidth,\n  targetPropType,\n} from './utils';\n\nfunction noop() { }\n\nconst FadePropTypes = PropTypes.shape(Fade.propTypes);\n\nconst propTypes = {\n  autoFocus: PropTypes.bool,\n  backdrop: PropTypes.bool,\n  backdropClassName: PropTypes.string,\n  backdropTransition: FadePropTypes,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  container: targetPropType,\n  cssModule: PropTypes.object,\n  direction: PropTypes.oneOf(['start', 'end', 'bottom', 'top', 'left', 'right']),\n  fade: PropTypes.bool,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func,]),\n  isOpen: PropTypes.bool,\n  keyboard: PropTypes.bool,\n  labelledBy: PropTypes.string,\n  offcanvasTransition: FadePropTypes,\n  onClosed: PropTypes.func,\n  onEnter: PropTypes.func,\n  onExit: PropTypes.func,\n  onOpened: PropTypes.func,\n  returnFocusAfterClose: PropTypes.bool,\n  role: PropTypes.string,\n  scrollable: PropTypes.bool,\n  toggle: PropTypes.func,\n  trapFocus: PropTypes.bool,\n  unmountOnClose: PropTypes.bool,\n  zIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string,])\n};\n\nconst propsToOmit = Object.keys(propTypes);\n\nconst defaultProps = {\n  isOpen: false,\n  autoFocus: true,\n  direction: 'start',\n  scrollable: false,\n  role: 'dialog',\n  backdrop: true,\n  keyboard: true,\n  zIndex: 1050,\n  fade: true,\n  onOpened: noop,\n  onClosed: noop,\n  offcanvasTransition: {\n    timeout: TransitionTimeouts.Offcanvas,\n  },\n  backdropTransition: {\n    mountOnEnter: true,\n    timeout: TransitionTimeouts.Fade, // uses standard fade transition\n  },\n  unmountOnClose: true,\n  returnFocusAfterClose: true,\n  container: 'body',\n  trapFocus: false\n};\n\nclass Offcanvas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._element = null;\n    this._originalBodyPadding = null;\n    this.getFocusableChildren = this.getFocusableChildren.bind(this);\n    this.handleBackdropClick = this.handleBackdropClick.bind(this);\n    this.handleBackdropMouseDown = this.handleBackdropMouseDown.bind(this);\n    this.handleEscape = this.handleEscape.bind(this);\n    this.handleTab = this.handleTab.bind(this);\n    this.onOpened = this.onOpened.bind(this);\n    this.onClosed = this.onClosed.bind(this);\n    this.manageFocusAfterClose = this.manageFocusAfterClose.bind(this);\n    this.clearBackdropAnimationTimeout = this.clearBackdropAnimationTimeout.bind(this);\n    this.trapFocus = this.trapFocus.bind(this);\n\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  componentDidMount() {\n    const { isOpen, autoFocus, onEnter } = this.props;\n\n    if (isOpen) {\n      this.init();\n      this.setState({ isOpen: true })\n      if (autoFocus) {\n        this.setFocus();\n      }\n    }\n\n    if (onEnter) {\n      onEnter();\n    }\n\n    // traps focus inside the Offcanvas, even if the browser address bar is focused\n    document.addEventListener('focus', this.trapFocus, true);\n\n    this._isMounted = true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.isOpen && !prevProps.isOpen) {\n      this.init();\n      this.setState({ isOpen: true });\n\n      return;\n    }\n\n    // now Offcanvas Dialog is rendered and we can refer this._element and this._dialog\n    if (this.props.autoFocus && this.state.isOpen && !prevState.isOpen) {\n      this.setFocus();\n    }\n\n    if (this._element && prevProps.zIndex !== this.props.zIndex) {\n      this._element.style.zIndex = this.props.zIndex;\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearBackdropAnimationTimeout();\n\n    if (this.props.onExit) {\n      this.props.onExit();\n    }\n\n    if (this._element) {\n      this.destroy();\n      if (this.props.isOpen || this.state.isOpen) {\n        this.close();\n      }\n    }\n\n    document.removeEventListener('focus', this.trapFocus, true);\n    this._isMounted = false;\n  }\n\n  trapFocus (ev) {\n    if (!this.props.trapFocus) {\n      return;\n    }\n\n    if (!this._element) //element is not attached\n      return;\n\n    if (this._dialog === ev.target) // initial focus when the Offcanvas is opened\n      return;\n\n    if (this.offcanvasIndex < (Offcanvas.openCount - 1)) // last opened offcanvas\n      return;\n\n    const children = this.getFocusableChildren();\n\n    for (let i = 0; i < children.length; i++) { // focus is already inside the Offcanvas\n      if (children[i] === ev.target)\n        return;\n    }\n\n    if (children.length > 0) { // otherwise focus the first focusable element in the Offcanvas\n      ev.preventDefault();\n      ev.stopPropagation();\n      children[0].focus();\n    }\n  }\n\n  onOpened(node, isAppearing) {\n    this.props.onOpened();\n    (this.props.offcanvasTransition.onEntered || noop)(node, isAppearing);\n  }\n\n  onClosed(node) {\n    const { unmountOnClose } = this.props;\n    // so all methods get called before it is unmounted\n    this.props.onClosed();\n    (this.props.offcanvasTransition.onExited || noop)(node);\n\n    if (unmountOnClose) {\n      this.destroy();\n    }\n    this.close();\n\n    if (this._isMounted) {\n      this.setState({ isOpen: false });\n    }\n  }\n\n  setFocus() {\n    if (this._dialog && typeof this._dialog.focus === 'function') {\n      this._dialog.focus();\n    }\n  }\n\n  getFocusableChildren() {\n    return this._element.querySelectorAll(focusableElements.join(', '));\n  }\n\n  getFocusedChild() {\n    let currentFocus;\n    const focusableChildren = this.getFocusableChildren();\n\n    try {\n      currentFocus = document.activeElement;\n    } catch (err) {\n      currentFocus = focusableChildren[0];\n    }\n    return currentFocus;\n  }\n\n  // not mouseUp because scrollbar fires it, shouldn't close when user scrolls\n  handleBackdropClick(e) {\n    if (e.target === this._mouseDownElement) {\n      e.stopPropagation();\n      const backdrop = this._backdrop;\n\n      if (!this.props.isOpen || this.props.backdrop !== true) return;\n\n      if (backdrop && e.target === backdrop && this.props.toggle) {\n        this.props.toggle(e);\n      }\n    }\n  }\n\n  handleTab(e) {\n    if (e.which !== 9) return;\n    if (this.offcanvasIndex < (Offcanvas.openCount - 1)) return; // last opened offcanvas\n\n    const focusableChildren = this.getFocusableChildren();\n    const totalFocusable = focusableChildren.length;\n    if (totalFocusable === 0) return;\n    const currentFocus = this.getFocusedChild();\n\n    let focusedIndex = 0;\n\n    for (let i = 0; i < totalFocusable; i += 1) {\n      if (focusableChildren[i] === currentFocus) {\n        focusedIndex = i;\n        break;\n      }\n    }\n\n    if (e.shiftKey && focusedIndex === 0) {\n      e.preventDefault();\n      focusableChildren[totalFocusable - 1].focus();\n    } else if (!e.shiftKey && focusedIndex === totalFocusable - 1) {\n      e.preventDefault();\n      focusableChildren[0].focus();\n    }\n  }\n\n  handleBackdropMouseDown(e) {\n    this._mouseDownElement = e.target;\n  }\n\n  handleEscape(e) {\n    if (this.props.isOpen && e.keyCode === keyCodes.esc && this.props.toggle) {\n      if (this.props.keyboard) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.props.toggle(e);\n      }\n    }\n  }\n\n  init() {\n    try {\n      this._triggeringElement = document.activeElement;\n    } catch (err) {\n      this._triggeringElement = null;\n    }\n\n    if (!this._element) {\n      this._element = document.createElement('div');\n      this._element.setAttribute('tabindex', '-1');\n      this._element.style.position = 'relative';\n      this._element.style.zIndex = this.props.zIndex;\n      this._mountContainer = getTarget(this.props.container);\n      this._mountContainer.appendChild(this._element);\n    }\n\n    this._originalBodyPadding = getOriginalBodyPadding();\n    conditionallyUpdateScrollbar();\n\n    if (Offcanvas.openCount === 0 && (this.props.backdrop && !this.props.scrollable)) {\n      document.body.style.overflow = 'hidden'; \n    }\n\n    this.offcanvasIndex = Offcanvas.openCount;\n    Offcanvas.openCount += 1;\n  }\n\n  destroy() {\n    if (this._element) {\n      this._mountContainer.removeChild(this._element);\n      this._element = null;\n    }\n\n    this.manageFocusAfterClose();\n  }\n\n  manageFocusAfterClose() {\n    if (this._triggeringElement) {\n      const { returnFocusAfterClose } = this.props;\n      if (this._triggeringElement.focus && returnFocusAfterClose) this._triggeringElement.focus();\n      this._triggeringElement = null;\n    }\n  }\n\n  close() {\n    this.manageFocusAfterClose();\n    Offcanvas.openCount = Math.max(0, Offcanvas.openCount - 1);\n\n    document.body.style.overflow = null; \n    setScrollbarWidth(this._originalBodyPadding);\n  }\n\n  render() {\n    const {\n      direction,\n      unmountOnClose\n    } = this.props;\n\n    if (!!this._element && (this.state.isOpen || !unmountOnClose)) {\n      const isOffcanvasHidden = !!this._element && !this.state.isOpen && !unmountOnClose;\n      this._element.style.display = isOffcanvasHidden ? 'none' : 'block';\n\n      const {\n        className,\n        backdropClassName,\n        cssModule,\n        isOpen,\n        backdrop,\n        role,\n        labelledBy,\n        style\n      } = this.props;\n\n      const offcanvasAttributes = {\n        onKeyUp: this.handleEscape,\n        onKeyDown: this.handleTab,\n        'aria-labelledby': labelledBy,\n        role,\n        tabIndex: '-1'\n      };\n\n      const hasTransition = this.props.fade;\n      const offcanvasTransition = {\n        ...Fade.defaultProps,\n        ...this.props.offcanvasTransition,\n        baseClass: hasTransition ? this.props.offcanvasTransition.baseClass : '',\n        timeout: hasTransition ? this.props.offcanvasTransition.timeout : 0,\n      };\n      const backdropTransition = {\n        ...Fade.defaultProps,\n        ...this.props.backdropTransition,\n        baseClass: hasTransition ? this.props.backdropTransition.baseClass : '',\n        timeout: hasTransition ? this.props.backdropTransition.timeout : 0,\n      };\n\n      const Backdrop = backdrop && (\n        hasTransition ?\n          (<Fade\n            {...backdropTransition}\n            in={isOpen && !!backdrop}\n            innerRef={(c) => {\n              this._backdrop = c;\n            }}\n            cssModule={cssModule}\n            className={mapToCssModules(classNames('offcanvas-backdrop', backdropClassName), cssModule)}\n            onClick={this.handleBackdropClick}\n            onMouseDown={this.handleBackdropMouseDown}\n          />)\n          : <div\n              className={mapToCssModules(classNames('offcanvas-backdrop', 'show', backdropClassName), cssModule)}\n              onClick={this.handleBackdropClick}\n              onMouseDown={this.handleBackdropMouseDown}\n            />\n      );\n\n      const attributes = omit(this.props, propsToOmit);\n\n      return (\n        <Portal node={this._element}>\n          <Fade\n            {...attributes}\n            {...offcanvasAttributes}\n            {...offcanvasTransition}\n            in={isOpen}\n            onEntered={this.onOpened}\n            onExited={this.onClosed}\n            cssModule={cssModule}\n            className={mapToCssModules(classNames('offcanvas', className,\n              `offcanvas-${direction}`\n            ), cssModule)}\n            innerRef={(c) => {\n              this._dialog = c;\n            }}\n            style={{\n              ...style,\n              visibility: isOpen ? 'visible' : 'hidden'\n            }}\n          >\n            {this.props.children}\n          </Fade>\n          {Backdrop}\n        </Portal>\n      );\n    }\n    return null;\n  }\n\n  clearBackdropAnimationTimeout() {\n    if (this._backdropAnimationTimeout) {\n      clearTimeout(this._backdropAnimationTimeout);\n      this._backdropAnimationTimeout = undefined;\n    }\n  }\n}\n\nOffcanvas.propTypes = propTypes;\nOffcanvas.defaultProps = defaultProps;\nOffcanvas.openCount = 0;\n\nexport default Offcanvas;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\nconst OffcanvasBody = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'offcanvas-body'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nOffcanvasBody.propTypes = propTypes;\nOffcanvasBody.defaultProps = defaultProps;\n\nexport default OffcanvasBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  close: PropTypes.object,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  tag: tagPropType,\n  toggle: PropTypes.func,\n  wrapTag: tagPropType\n};\n\nconst defaultProps = {\n  closeAriaLabel: 'Close',\n  tag: 'h5',\n  wrapTag: 'div'\n};\n\nconst OffcanvasHeader = (props) => {\n  let closeButton;\n  const {\n    children,\n    className,\n    close,\n    closeAriaLabel,\n    cssModule,\n    tag: Tag,\n    toggle,\n    wrapTag: WrapTag,\n    ...attributes } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'offcanvas-header'\n  ), cssModule);\n\n  if (!close && toggle) {\n    closeButton = (\n      <button type=\"button\" onClick={toggle} className={mapToCssModules('btn-close', cssModule)} aria-label={closeAriaLabel} />\n    );\n  }\n\n  return (\n    <WrapTag {...attributes} className={classes}>\n      <Tag className={mapToCssModules('offcanvas-title', cssModule)}>\n        {children}\n      </Tag>\n      {close || closeButton}\n    </WrapTag>\n  );\n};\n\nOffcanvasHeader.propTypes = propTypes;\nOffcanvasHeader.defaultProps = defaultProps;\n\nexport default OffcanvasHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  tag: tagPropType,\n  listTag: tagPropType,\n  'aria-label': PropTypes.string\n};\n\nconst defaultProps = {\n  tag: 'nav',\n  listTag: 'ul',\n  'aria-label': 'pagination'\n};\n\nconst Pagination = (props) => {\n  const {\n    className,\n    listClassName,\n    cssModule,\n    size,\n    tag: Tag,\n    listTag: ListTag,\n    'aria-label': label,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className\n  ), cssModule);\n\n  const listClasses = mapToCssModules(classNames(\n    listClassName,\n    'pagination',\n    {\n      [`pagination-${size}`]: !!size,\n    }\n  ), cssModule);\n\n  return (\n    <Tag className={classes} aria-label={label}>\n      <ListTag {...attributes} className={listClasses} />\n    </Tag>\n  );\n};\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n};\n\nconst defaultProps = {\n  tag: 'li',\n};\n\nconst PaginationItem = (props) => {\n  const {\n    active,\n    className,\n    cssModule,\n    disabled,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'page-item',\n    {\n      active,\n      disabled,\n    }\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nPaginationItem.propTypes = propTypes;\nPaginationItem.defaultProps = defaultProps;\n\nexport default PaginationItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  next: PropTypes.bool,\n  previous: PropTypes.bool,\n  first: PropTypes.bool,\n  last: PropTypes.bool,\n  tag: tagPropType,\n};\n\nconst defaultProps = {\n  tag: 'a',\n};\n\nconst PaginationLink = (props) => {\n  let {\n    className,\n    cssModule,\n    next,\n    previous,\n    first,\n    last,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'page-link'\n  ), cssModule);\n\n  let defaultAriaLabel;\n  if (previous) {\n    defaultAriaLabel = 'Previous';\n  } else if (next) {\n    defaultAriaLabel = 'Next';\n  } else if (first) {\n    defaultAriaLabel = 'First';\n  } else if (last) {\n    defaultAriaLabel = 'Last';\n  }\n\n  const ariaLabel = props['aria-label'] || defaultAriaLabel;\n\n  let defaultCaret;\n  if (previous) {\n    defaultCaret = '\\u2039';\n  } else if (next) {\n    defaultCaret = '\\u203A';\n  } else if (first) {\n    defaultCaret = '\\u00ab';\n  } else if (last) {\n    defaultCaret = '\\u00bb';\n  }\n\n  let children = props.children;\n  if (children && Array.isArray(children) && children.length === 0) {\n    children = null;\n  }\n\n  if (!attributes.href && Tag === 'a') {\n    Tag = 'button';\n  }\n\n  if (previous || next || first || last) {\n    children = [\n      <span\n        aria-hidden=\"true\"\n        key=\"caret\"\n      >\n        {children || defaultCaret}\n      </span>,\n      <span\n        className=\"visually-hidden\"\n        key=\"ariaLabel\"\n      >\n        {ariaLabel}\n      </span>,\n    ];\n  }\n\n  return (\n    <Tag\n      {...attributes}\n      className={classes}\n      aria-label={ariaLabel}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nPaginationLink.propTypes = propTypes;\nPaginationLink.defaultProps = defaultProps;\n\nexport default PaginationLink;\n","import React from 'react';\n\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\nexport const TabContext = React.createContext({});","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\n\n\nconst propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\n\nclass TabContent extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n    return null;\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: this.props.activeTab\n    };\n  }\n\n  render() {\n    const {\n      className,\n      cssModule,\n      tag: Tag,\n    } = this.props;\n\n    const attributes = omit(this.props, Object.keys(propTypes));\n\n    const classes = mapToCssModules(classNames('tab-content', className), cssModule);\n\n    return (\n      <TabContext.Provider value={{activeTabId: this.state.activeTab}}>\n        <Tag {...attributes} className={classes} />\n      </TabContext.Provider>\n    );\n  }\n}\n\nexport default TabContent;\n\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\nexport default function TabPane(props) {\n  const {\n    className,\n    cssModule,\n    tabId,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const getClasses = (activeTabId) => mapToCssModules(classNames('tab-pane', className, { active: tabId === activeTabId }), cssModule);\n  return (\n    <TabContext.Consumer>\n      {({activeTabId}) => <Tag {...attributes} className={getClasses(activeTabId)} />}\n    </TabContext.Consumer>\n  );\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\n\nconst propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n};\n\nconst defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: {\n    ...Fade.defaultProps,\n    unmountOnExit: true,\n  },\n};\n\nfunction Alert(props) {\n  const {\n    className,\n    closeClassName,\n    closeAriaLabel,\n    cssModule,\n    tag: Tag,\n    color,\n    isOpen,\n    toggle,\n    children,\n    transition,\n    fade,\n    innerRef,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'alert',\n    `alert-${color}`,\n    { 'alert-dismissible': toggle }\n  ), cssModule);\n\n  const closeClasses = mapToCssModules(classNames('btn-close', closeClassName), cssModule);\n\n  const alertTransition = {\n    ...Fade.defaultProps,\n    ...transition,\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0,\n  };\n\n  return (\n    <Fade {...attributes} {...alertTransition} tag={Tag} className={classes} in={isOpen} role=\"alert\" innerRef={innerRef}>\n      {toggle ?\n        <button type=\"button\" className={closeClasses} aria-label={closeAriaLabel} onClick={toggle} />\n        : null}\n      {children}\n    </Fade>\n  );\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\n\nexport default Alert;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\n\nconst propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n};\n\nconst defaultProps = {\n  isOpen: true,\n  tag: 'div',\n  fade: true,\n  transition: {\n    ...Fade.defaultProps,\n    unmountOnExit: true,\n  },\n};\n\nfunction Toast(props) {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    isOpen,\n    children,\n    transition,\n    fade,\n    innerRef,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(className, 'toast'), cssModule);\n\n  const toastTransition = {\n    ...Fade.defaultProps,\n    ...transition,\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0,\n  };\n\n  return (\n    <Fade {...attributes} {...toastTransition} tag={Tag} className={classes} in={isOpen} role=\"alert\" innerRef={innerRef}>\n      {children}\n    </Fade>\n  );\n}\n\nToast.propTypes = propTypes;\nToast.defaultProps = defaultProps;\n\nexport default Toast;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst ToastBody = (props) => {\n  const {\n    className,\n    cssModule,\n    innerRef,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'toast-body'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} ref={innerRef} />\n  );\n};\n\nToastBody.propTypes = propTypes;\nToastBody.defaultProps = defaultProps;\n\nexport default ToastBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  wrapTag: tagPropType,\n  toggle: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  closeAriaLabel: PropTypes.string,\n  charCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  close: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'strong',\n  wrapTag: 'div',\n  tagClassName: 'me-auto',\n  closeAriaLabel: 'Close',\n};\n\nconst ToastHeader = (props) => {\n  let closeButton;\n  let icon;\n  const {\n    className,\n    cssModule,\n    children,\n    toggle,\n    tag: Tag,\n    wrapTag: WrapTag,\n    closeAriaLabel,\n    close,\n    tagClassName,\n    icon: iconProp,\n    ...attributes } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'toast-header'\n  ), cssModule);\n\n  if (!close && toggle) {\n    closeButton = (\n      <button type=\"button\" onClick={toggle} className={mapToCssModules('btn-close', cssModule)} aria-label={closeAriaLabel} />\n    );\n  }\n\n  if (typeof iconProp === \"string\") {\n    icon = (\n      <svg\n        className={mapToCssModules(`rounded text-${iconProp}`)}\n        width=\"20\"\n        height=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        preserveAspectRatio=\"xMidYMid slice\"\n        focusable=\"false\"\n        role=\"img\"\n      >\n        <rect fill=\"currentColor\" width=\"100%\" height=\"100%\"></rect>\n      </svg>\n    );\n  } else if (iconProp) {\n    icon = iconProp;\n  }\n\n  return (\n    <WrapTag {...attributes} className={classes}>\n      {icon}\n      <Tag className={mapToCssModules(classNames(tagClassName, { \"ms-2\": icon != null }), cssModule)}>\n        {children}\n      </Tag>\n      {close || closeButton}\n    </WrapTag>\n  );\n};\n\nToastHeader.propTypes = propTypes;\nToastHeader.defaultProps = defaultProps;\n\nexport default ToastHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  color: PropTypes.string,\n  action: PropTypes.bool,\n  className: PropTypes.any,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'li'\n};\n\nconst handleDisabledOnClick = (e) => {\n  e.preventDefault();\n};\n\nconst ListGroupItem = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    active,\n    disabled,\n    action,\n    color,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    active ? 'active' : false,\n    disabled ? 'disabled' : false,\n    action ? 'list-group-item-action' : false,\n    color ? `list-group-item-${color}` : false,\n    'list-group-item'\n  ), cssModule);\n\n  // Prevent click event when disabled.\n  if (disabled) {\n    attributes.onClick = handleDisabledOnClick;\n  }\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nListGroupItem.propTypes = propTypes;\nListGroupItem.defaultProps = defaultProps;\n\nexport default ListGroupItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.any,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'h5'\n};\n\nconst ListGroupItemHeading = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'list-group-item-heading'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nListGroupItemHeading.propTypes = propTypes;\nListGroupItemHeading.defaultProps = defaultProps;\n\nexport default ListGroupItemHeading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.any,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'p'\n};\n\nconst ListGroupItemText = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'list-group-item-text'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nListGroupItemText.propTypes = propTypes;\nListGroupItemText.defaultProps = defaultProps;\n\nexport default ListGroupItemText;\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  type: PropTypes.string\n};\n\nconst defaultProps ={\n  tag: 'ul'\n};\n\nconst List = forwardRef((props, ref) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    type,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    type ? `list-${type}` : false\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} ref={ref} />\n  );\n});\n\nList.name = 'List';\nList.propTypes = propTypes;\nList.defaultProps = defaultProps;\n\nexport default List;\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\n\nconst defaultProps ={\n  tag: 'li'\n};\n\nconst ListInlineItem = forwardRef((props, ref) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'list-inline-item'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} ref={ref} />\n  );\n});\n\nListInlineItem.name = 'ListInlineItem';\nListInlineItem.propTypes = propTypes;\nListInlineItem.defaultProps = defaultProps;\n\nexport default ListInlineItem;\n","import React, { Component } from 'react';\nimport Alert from './Alert';\n\nclass UncontrolledAlert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: true };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    return <Alert isOpen={this.state.isOpen} toggle={this.toggle} {...this.props} />;\n  }\n}\n\nexport default UncontrolledAlert;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonDropdown from './ButtonDropdown';\nimport { omit } from './utils';\n\nconst omitKeys = ['defaultOpen'];\n\nexport default class UncontrolledButtonDropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: props.defaultOpen || false };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    return <ButtonDropdown isOpen={this.state.isOpen} toggle={this.toggle} {...omit(this.props, omitKeys)} />;\n  }\n}\n\nUncontrolledButtonDropdown.propTypes = {\n  defaultOpen: PropTypes.bool,\n  ...ButtonDropdown.propTypes\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Collapse from './Collapse';\nimport { omit, findDOMElements, defaultToggleEvents, addMultipleEventListeners } from './utils';\n\nconst omitKeys = ['toggleEvents', 'defaultOpen'];\n\nconst propTypes = {\n  defaultOpen: PropTypes.bool,\n  toggler: PropTypes.string.isRequired,\n  toggleEvents: PropTypes.arrayOf(PropTypes.string)\n};\n\nconst defaultProps = {\n  toggleEvents: defaultToggleEvents\n};\n\nclass UncontrolledCollapse extends Component {\n  constructor(props) {\n    super(props);\n\n    this.togglers = null;\n    this.removeEventListeners = null;\n    this.toggle = this.toggle.bind(this);\n\n    this.state = { isOpen: props.defaultOpen || false };\n  }\n\n  componentDidMount() {\n    this.togglers = findDOMElements(this.props.toggler);\n    if (this.togglers.length) {\n      this.removeEventListeners = addMultipleEventListeners(\n        this.togglers,\n        this.toggle,\n        this.props.toggleEvents\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.togglers.length && this.removeEventListeners) {\n      this.removeEventListeners();\n    }\n  }\n\n  toggle(e) {\n    this.setState(({ isOpen }) => ({ isOpen: !isOpen }));\n    e.preventDefault();\n  }\n\n  render() {\n    return <Collapse isOpen={this.state.isOpen} {...omit(this.props, omitKeys)} />;\n  }\n}\n\nUncontrolledCollapse.propTypes = propTypes;\nUncontrolledCollapse.defaultProps = defaultProps;\n\nexport default UncontrolledCollapse;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport { omit } from './utils';\n\nconst omitKeys = ['defaultOpen'];\n\nexport default class UncontrolledDropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: props.defaultOpen || false };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle(e) {\n    const isOpen = !this.state.isOpen;\n    this.setState({ isOpen }, () => {\n      if (this.props.onToggle) {\n        this.props.onToggle(e, isOpen);\n      }\n    });\n  }\n\n  render() {\n    return <Dropdown isOpen={this.state.isOpen} toggle={this.toggle} {...omit(this.props, omitKeys)} />;\n  }\n}\n\nUncontrolledDropdown.propTypes = {\n  defaultOpen: PropTypes.bool,\n  onToggle: PropTypes.func,\n  ...Dropdown.propTypes\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from './Tooltip';\nimport { omit } from './utils';\n\nconst omitKeys = ['defaultOpen'];\n\nexport default class UncontrolledTooltip extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: props.defaultOpen || false };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    return <Tooltip isOpen={this.state.isOpen} toggle={this.toggle} {...omit(this.props, omitKeys)} />;\n  }\n}\n\nUncontrolledTooltip.propTypes = {\n  defaultOpen: PropTypes.bool,\n  ...Tooltip.propTypes\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\n\nconst defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nconst Spinner = props => {\n  const {\n    className,\n    cssModule,\n    type,\n    size,\n    color,\n    children,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(\n    classNames(\n      className,\n      size ? `spinner-${type}-${size}` : false,\n      `spinner-${type}`,\n      color ? `text-${color}` : false\n    ),\n    cssModule\n  );\n\n  return (\n    <Tag role=\"status\" {...attributes} className={classes}>\n      {children &&\n        <span className={mapToCssModules('visually-hidden', cssModule)}>\n          {children}\n        </span>\n      }\n    </Tag>\n  );\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\n\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Col, { getColumnClasses } from './Col';\n\nconst propTypes = {\n  ...Col.propTypes,\n  color: PropTypes.string,\n  tag: tagPropType,\n  animation: PropTypes.oneOf(['glow', 'wave']),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  size: PropTypes.oneOf(['lg', 'sm', 'xs']),\n};\n\nconst defaultProps = {\n  tag: 'span'\n};\n\nconst Placeholder = (props) => {\n  let {\n    className,\n    cssModule,\n    color,\n    innerRef,\n    tag: Tag,\n    animation,\n    size,\n    widths,\n    ...attributes\n  } = props;\n\n  let { attributes: modifiedAttributes, colClasses } = getColumnClasses(attributes, cssModule, widths)\n\n  const classes = mapToCssModules(classNames(\n    className,\n    colClasses,\n    'placeholder' + (animation ? '-'+animation : ''),\n    size ? 'placeholder-'+ size : false,\n    color ? 'bg-'+color : false\n  ), cssModule);\n\n\n\n  return (\n    <Tag {...modifiedAttributes} className={classes} ref={innerRef} />\n  );\n};\n\nPlaceholder.propTypes = propTypes;\nPlaceholder.defaultProps = defaultProps;\n\nexport default Placeholder;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Button from \"./Button\";\nimport { getColumnClasses } from './Col';\n\nconst propTypes = {\n  size: PropTypes.string,\n  color: PropTypes.string,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  color: 'primary',\n  tag: Button\n}\n\nconst PlaceholderButton = (props) => {\n  let {\n    cssModule,\n    className,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  let { attributes: modifiedAttributes, colClasses } = getColumnClasses(attributes, cssModule)\n\n  const classes = mapToCssModules(classNames(\n    \"placeholder\",\n    className,\n    colClasses\n  ), cssModule);\n\n  return (\n    <Button {...modifiedAttributes} className={classes} disabled={true}></Button>\n  )\n}\n\nPlaceholderButton.propTypes = propTypes;\nPlaceholderButton.defaultProps = defaultProps;\n\nexport default PlaceholderButton ","(() => {\n  if ( typeof window !== 'object' || typeof window.CustomEvent === 'function' ) return;\n\n  const CustomEvent = (( event, params ) => {\n    params = params || { bubbles: false, cancelable: false, detail: null };\n    var evt = document.createEvent( 'CustomEvent' );\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\n    return evt;\n  });\n\n  window.CustomEvent = CustomEvent;\n})();\n\n(() => {\n  if ( typeof Object.values === 'function' ) return;\n\n  const values = ( (O) => Object.keys(O).map((key) => O[key]) );\n\n  Object.values = values;\n})();\n","import React, { useState } from 'react';\nimport { getTokenOrRefresh } from './helpers/token_utils';\nimport { ResultReason, PronunciationAssessmentConfig } from 'microsoft-cognitiveservices-speech-sdk';\nimport { Container } from 'reactstrap';\n\nconst speechsdk = require('microsoft-cognitiveservices-speech-sdk');\n\nexport const App = () => {\n\n  const [msg, setMsg] = useState('INITIALIZED: Click on microphone and start to speak');\n  const [phrase, setPhrase] = useState('Hello, I am the best');\n\n  const sttFromMic = async () => {\n    setMsg('Initializing...');\n    const tokenRes = await getTokenOrRefresh();\n\n    if (tokenRes.authToken === null) {\n      setMsg(`FATAL_ERROR: ${tokenRes.error}`);\n    } else {\n      const speechConfig = speechsdk.SpeechConfig.fromAuthorizationToken(tokenRes.authToken, tokenRes.region);\n      speechConfig.speechRecognitionLanguage = 'en-US';\n\n      const audioConfig = speechsdk.AudioConfig.fromDefaultMicrophoneInput();\n      const recognizer = new speechsdk.SpeechRecognizer(speechConfig, audioConfig);\n\n      const pronunciationAssesmentConfig = new PronunciationAssessmentConfig(\n        phrase,\n        speechsdk.PronunciationAssessmentGradingSystem.HundredMark,\n        speechsdk.PronunciationAssessmentGranularity.Phoneme, true);\n\n      pronunciationAssesmentConfig.applyTo(recognizer);\n\n      setMsg('Speak into your microphone...');\n\n      recognizer.recognizeOnceAsync(result => {\n        let displayText;\n        if (result.reason === ResultReason.RecognizedSpeech) {\n          var pronunciationAssessmentResult = speechsdk.PronunciationAssessmentResult.fromResult(result);\n          var pronunciationScore = pronunciationAssessmentResult.pronunciationScore;\n          var wordLevelResult = pronunciationAssessmentResult.detailResult.Words;\n\n          console.log(\"Pronunciation Score:\", pronunciationScore);\n          console.log(\"Word Score:\", wordLevelResult);\n          displayText = `RECOGNIZED: Text=${result.text}`\n        } else {\n          displayText = 'ERROR: Speech was cancelled or could not be recognized. Ensure your microphone is working properly.';\n        }\n\n        setMsg(displayText);\n      });\n      setMsg('Wait for results...');\n    }\n  }\n\n  return (\n    <Container className=\"app-container\">\n      <h1 className=\"display-4 mb-3\">Speech sample app</h1>\n\n      <div className=\"row main-container\">\n        <div className=\"col-6\">\n          <label htmlFor=\"inputPhrase\">Enter a phrase to check pronunciation:</label>\n          <input id=\"inputPhrase\" className=\"form-control mb-3\" type=\"text\" value={ phrase } onChange={ (e) => setPhrase(e.target.value) } />\n          <i className=\"fas fa-microphone fa-lg me-2\" onClick={() => sttFromMic()}></i>\n          Convert speech to text from your mic.         \n        </div>\n        <div className=\"col-6 output-display rounded\">\n          <code>{msg}</code>\n        </div>\n      </div>\n    </Container>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","isArray","self","ReferenceError","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fn","this","args","arguments","apply","err","undefined","instance","Constructor","TypeError","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","Class","Reflect","construct","a","push","Function","bind","prototype","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","unsupportedIterableToArray","o","allowArrayLike","it","Symbol","iterator","F","s","n","e","_e","f","normalCompletion","didErr","call","step","next","_e2","getPrototypeOf","possibleConstructorReturn","Derived","hasNativeReflectConstruct","result","Super","NewTarget","constructor","obj","_getPrototypeOf","__proto__","subClass","superClass","create","toString","indexOf","sham","Proxy","Boolean","valueOf","_i","_s","_arr","_n","_d","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","source","forEach","getOwnPropertyDescriptors","defineProperties","_typeof","assertThisInitialized","_setPrototypeOf","p","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arrayLikeToArray","minLen","slice","name","from","test","isNativeFunction","_wrapNativeSuper","_cache","Map","has","get","set","Wrapper","core","require","StatusError","res","buffer","params","Error","captureStackTrace","message","statusMessage","statusCode","status","json","text","arrayBuffer","headers","entries","toLowerCase","statusCodes","method","encoding","baseurl","_url","body","_headers","parsed","URL","username","Authorization","btoa","password","protocol","host","pathname","search","ArrayBuffer","isView","JSON","stringify","Headers","fetch","resp","encodings","Set","mkrequest","toUpperCase","msg","startsWith","add","code","size","hasOwn","hasOwnProperty","classNames","classes","argType","inner","join","default","str","options","opt","pairs","split","dec","decode","pair","index","substring","trim","val","tryDecode","enc","encode","fieldContentRegExp","maxAge","isNaN","isFinite","Math","floor","domain","path","expires","toUTCString","httpOnly","secure","sameSite","decodeURIComponent","encodeURIComponent","getRandomValues","rnds8","Uint8Array","rng","crypto","msCrypto","uuid","REGEX","byteToHex","substr","offset","validate","EventType","buf","rnds","random","createGuid","createNoDashGuid","replace","RegExp","PlatformEvent","eventName","eventType","privName","privEventId","privEventTime","Date","toISOString","privEventType","privMetadata","ConsoleLoggingListener","logLevelFilter","onEvent","event","privLogLevelFilter","log","console","debug","warn","logFragments","EventTime","Name","prop","valueToLog","ArgumentNullError","argumentName","InvalidOperationError","ObjectDisposedError","objectName","EventSource","metadata","privEventListeners","privIsDisposed","isDisposed","paramName","eventId","attach","onEventCallback","id","detach","attachListener","listener","dispose","Events","privInstance","eventSource","RecognitionMode","SpeechResultFormat","RiffPcmEncoder","actualSampleRate","desiredSampleRate","actualAudioFrame","audioFrame","downSampleAudioFrame","privActualSampleRate","privDesiredSampleRate","audioLength","view","DataView","floatTo16BitPCM","setString","setUint8","charCodeAt","input","max","min","setInt16","srcFrame","srcRate","dstRate","ratio","dstLength","round","dstFrame","Float32Array","srcOffset","dstOffset","nextSrcOffset","accum","count","PcmRecorder","stopInputOnRelease","record","context","mediaStream","outputStream","waveStreamEncoder","sampleRate","micInput","createMediaStreamSource","privSpeechProcessorScript","blob","Blob","type","createObjectURL","attachScriptProcessor","scriptNode","bufferSize","createScriptProcessor","audioSampleRate","onaudioprocess","inputFrame","inputBuffer","getChannelData","isClosed","waveFrame","writeStreamChunk","isEnd","timeReceived","now","connect","destination","privMediaResources","scriptProcessorNode","stream","audioWorklet","addModule","workletNode","AudioWorkletNode","port","onmessage","ev","data","catch","releaseMediaResources","disconnect","privStopInputOnRelease","getTracks","track","stop","url","connectivity","PromiseState","RecognizerConfig","speechServiceConfig","parameters","privRecognitionMode","Interactive","privSpeechServiceConfig","SpeechServiceConfig","Context","privParameters","privMaxRetryCount","parseInt","getProperty","privRecognitionActivityTimeout","Recognition","PropertyId","serialize","replacement","k","charAt","recognition","os","system","System","version","build","lang","OS","platform","Deferred","privResolve","privReject","privPromise","marshalPromiseToCallbacks","promise","cb","typedError","AudioSourceEvent","audioSourceId","privAudioSourceId","AudioSourceInitializingEvent","AudioSourceReadyEvent","AudioSourceOffEvent","AudioSourceErrorEvent","privError","AudioStreamNodeEvent","audioNodeId","privAudioNodeId","AudioStreamNodeAttachingEvent","AudioStreamNodeAttachedEvent","AudioStreamNodeDetachedEvent","AudioStreamNodeErrorEvent","_superPropBase","property","_get","receiver","base","desc","SubscriberType","List","list","privSubscriptionIdCounter","privAddSubscriptions","privRemoveSubscriptions","privDisposedSubscriptions","privDisposeReason","itemIndex","throwIfDisposed","privList","first","last","item","insertAt","unshift","splice","triggerSubscriptions","removeFirst","removeAt","removeLast","remove","removedElements","clear","onAdded","addedCallback","subscriptionId","onRemoved","removedCallback","onDisposed","disposedCallback","seperator","toArray","cloneCopy","any","callback","where","all","select","selectList","filteredList","orderBy","compareFn","orderedArray","sort","orderByDesc","b","clone","concat","concatArray","array","reason","subscriptions","AudioFormatTag","Queue","privPromiseStore","privIsDrainInProgress","privIsDisposing","enqueue","throwIfDispose","enqueueFromPromise","dequeue","deferredSubscriber","privSubscribers","deferral","Dequeue","drain","peek","Peek","subs","lists","subscriber","dequeuedItem","privDetachables","pendingItemProcessor","detachable","promiseArray","wrapper","finally","drainAndDispose","Stream","streamId","privIsWriteEnded","privIsReadEnded","read","privReaderQueue","streamChunk","__awaiter","readEnded","throwIfClosed","privId","ChunkedArrayBufferStream","targetChunkSize","privTargetChunkSize","privNextBufferReadyBytes","chunk","byteLength","bytesCopiedFromBuffer","privNextBufferToWrite","privNextBufferStartTime","bytesToCopy","targetView","sourceView","AudioStreamFormat","AudioStreamFormatImpl","getDefaultInputFormat","samplesPerSecond","bitsPerSample","channels","format","samplesPerSec","PCM","isWavFormat","formatTag","ALaw","MuLaw","avgBytesPerSec","blockAlign","privHeader","setUint32","setUint16","AudioContext","window","webkitAudioContext","navigator","mediaDevices","getSupportedConstraints","MicAudioSource","privRecorder","deviceId","privStreams","turnOn","privInitializeDeferral","createAudioContext","nav","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","constraints","successCallback","errorCallback","privMediaStream","active","audio","video","errorMsg","privContext","state","resume","listen","turnOff","close","privOutputChunkSize","privEvents","getAudioContext","AUDIOFORMAT","privIsClosing","destroyAudioContext","getMicrophoneLabel","label","bitspersample","channelcount","Unknown","manufacturer","model","samplerate","Microphones","setWorkletUrl","defaultMicrophoneName","privMicrophoneLabel","microphoneDeviceId","getSettings","deferred","enumerateDevices","devices","device","hasClose","suspend","MessageType","FileAudioSource","file","filename","privHeaderEnd","privFilename","lastIndexOf","upload","privSource","privAudioFormatPromise","readHeader","File","header","headerResult","processHeader","getWord","String","fromCharCode","getUint8","formatSize","getInt32","channelCount","getUint16","getUint32","pos","maxHeaderSize","getWaveFormatPCM","reader","FileReader","onload","readAsArrayBuffer","h","byteOffset","onerror","processFile","buff","fileBuffer","c","PullAudioInputStreamCallback","AudioInputStream","PushAudioInputStream","PullAudioInputStream","PushAudioInputStreamImpl","privFormat","privStream","dataBuffer","audioNode","bufferData","Buffer","readCycle","audioStreamChunk","XMLHttpRequest","toBuffer","alloc","PullAudioInputStreamImpl","privCallback","privIsClosed","privBufferSize","transmitBuff","totalBytes","readBuff","pulledBytes","Int8Array","ConnectionState","CancellationReason","CancellationErrorCode","ConnectionMessage","messageType","privBody","Text","Binary","privMessageType","privHeaders","privSize","binaryBody","textBody","ServiceEvent","jsonstring","privJsonResult","ConnectionEvent","connectionId","privConnectionId","ConnectionStartEvent","uri","privUri","ConnectionEstablishedEvent","ConnectionClosedEvent","privReason","privStatusCode","ConnectionErrorEvent","privMessage","privType","ConnectionEstablishErrorEvent","statuscode","ConnectionMessageReceivedEvent","networkReceivedTimeISO","privNetworkReceivedTime","ConnectionMessageSentEvent","networkSentTimeISO","privNetworkSentTime","SpeechSynthesisOutputFormat","SpeechSynthesisEventArgs","privResult","SynthesisResult","resultId","errorDetails","properties","privResultId","privErrorDetails","privProperties","SpeechSynthesisResult","audioData","privAudioData","SpeechSynthesisWordBoundaryEventArgs","audioOffset","wordLength","textOffset","privAudioOffset","privText","privWordLength","privTextOffset","SpeechSynthesisBookmarkEventArgs","SpeechSynthesisVisemeEventArgs","visemeId","animation","privVisemeId","privAnimation","OutputFormatPropertyName","CancellationErrorCodePropertyName","ServicePropertiesPropertyName","ForceDictationPropertyName","AutoDetectSourceLanguagesOpenRangeOptionName","AudioOutputFormatImpl","audioFormatString","requestAudioFormatString","hasHeader","priAudioFormatString","priRequestAudioFormatString","priHasHeader","speechSynthesisOutputFormat","getDefaultOutputFormat","fromSpeechSynthesisOutputFormatString","SpeechSynthesisOutputFormatToString","speechSynthesisOutputFormatString","Siren","MP3","SILKSkype","OGG_OPUS","WEBM_OPUS","OPUS","FLAC","Raw8Khz8BitMonoMULaw","Riff16Khz16KbpsMonoSiren","Audio16Khz16KbpsMonoSiren","Audio16Khz32KBitRateMonoMp3","Audio16Khz128KBitRateMonoMp3","Audio16Khz64KBitRateMonoMp3","Audio24Khz48KBitRateMonoMp3","Audio24Khz96KBitRateMonoMp3","Audio24Khz160KBitRateMonoMp3","Raw16Khz16BitMonoTrueSilk","Riff16Khz16BitMonoPcm","Riff8Khz16BitMonoPcm","Riff24Khz16BitMonoPcm","Riff8Khz8BitMonoMULaw","Raw16Khz16BitMonoPcm","Raw24Khz16BitMonoPcm","Raw8Khz16BitMonoPcm","Ogg16Khz16BitMonoOpus","Ogg24Khz16BitMonoOpus","Raw48Khz16BitMonoPcm","Riff48Khz16BitMonoPcm","Audio48Khz96KBitRateMonoMp3","Audio48Khz192KBitRateMonoMp3","Ogg48Khz16BitMonoOpus","Webm16Khz16BitMonoOpus","Webm24Khz16BitMonoOpus","Webm24Khz16Bit24KbpsMonoOpus","Raw24Khz16BitMonoTrueSilk","Raw8Khz8BitMonoALaw","Riff8Khz8BitMonoALaw","Audio16Khz16Bit32KbpsMonoOpus","Audio24Khz16Bit48KbpsMonoOpus","Audio24Khz16Bit24KbpsMonoOpus","MetadataType","AudioOutputStream","PullAudioOutputStream","PullAudioOutputStreamImpl","intView","privLastChunkView","isReadEnded","tmpBuffer","Contracts","PushAudioOutputStream","PushAudioOutputStreamImpl","write","SpeechSynthesisEvent","requestId","privRequestId","SynthesisTriggeredEvent","sessionAudioDestinationId","turnAudioDestinationId","privSessionAudioDestinationId","privTurnAudioDestinationId","ConnectingToSynthesisServiceEvent","authFetchEventId","privAuthFetchEventId","SynthesisStartedEvent","SynthesisTurn","privIsSynthesizing","privIsSynthesisEnded","privBytesReceived","privInTurn","privNextSearchTextIndex","onPreConnectionStart","onAuthCompleted","isError","onComplete","onConnectionEstablishCompleted","onServiceResponseMessage","responseJson","response","parse","onServiceTurnEndResponse","privTurnDeferral","onServiceTurnStartResponse","privAudioOutputStream","privTurnAudioDestination","privStreamId","privAudioOutputFormat","privReceivedAudio","readAllAudioFromStream","privReceivedAudioWithHeader","audioOutputFormat","getAllReceivedAudio","SynthesisAdapterBase","addHeader","rawText","isSSML","audioDestination","privRawText","privIsSSML","privPartialVisemeAnimation","isSynthesizing","updateTextOffset","Data","AnimationChunk","bytesReceived","SynthesisContext","speechSynthesizer","privSpeechSynthesizer","sectionName","synthesisSection","buildSynthesisContext","setSection","metadataOptions","bookmarkEnabled","bookmarkReached","sentenceBoundaryEnabled","visemeEnabled","visemeReceived","wordBoundaryEnabled","wordBoundary","outputFormat","language","autoDetection","autoDetectSourceLanguage","AgentConfig","iPrivConfig","SynthesisAudioMetadata","privSynthesisAudioMetadata","Metadata","HeaderNames","SpeechConnectionMessage","contentType","additionalHeaders","Path","RequestId","RequestTimestamp","ContentType","RequestStreamId","headerName","privPath","privContentType","privAdditionalHeaders","authentication","connectionFactory","synthesizerConfig","speakOverride","receiveMessageOverride","connectImplOverride","configConnectionOverride","sendSynthesisContext","connection","synthesisContextJson","synthesisContext","toJSON","send","privSynthesisTurn","sendSpeechServiceConfig","SpeechServiceConfigJson","sendSsmlMessage","ssml","privAuthentication","privConnectionFactory","privSynthesizerConfig","privSessionAudioDestination","privConnectionEvents","privServiceEvents","privSynthesisContext","privAgentConfig","connectionEvents","connectionEvent","connectionClosedEvent","cancelSynthesisLocal","BadRequestParameters","ConnectionFailure","privActivityTemplate","messagePayload","privConnectionConfigurationPromise","connectImpl","payload","fetchConnection","errorCallBack","buildSsml","privSuccessCallback","privErrorCallback","startNewSynthesis","synthesisStartEventArgs","ResultReason","synthesisStarted","receiveMessage","cancellationReason","errorCode","PropertyCollection","setProperty","SynthesisCanceled","cancelEvent","onStopSynthesizing","cancelSynthesis","connectionMessage","privServiceHasSentMessage","fromConnectionMessage","onAudioChunkReceived","synthesizing","audioWithHeader","metadataList","fromJSON","Type","WordBoundary","Bookmark","Viseme","onWordBoundaryEvent","wordBoundaryEventArgs","Offset","Length","currentTextOffset","bookmarkEventArgs","onVisemeMetadataReceived","IsLastAnimation","visemeEventArgs","VisemeId","getAndClearVisemeAnimation","getAllReceivedAudioWithHeader","audioBuffer","synthesisCompleted","processTypeSpecificMessages","serviceEvents","isUnAuthorized","privConnectionPromise","Disconnected","authPromise","fetchOnExpiry","events","open","configureConnection","updateHeader","tmp","OutputFormat","BackgroundEvent","AudioFormatToMimeType","SpeakerAudioDestination","audioDestinationId","privPlaybackStarted","privAppendingToBuffer","privMediaSourceOpened","privIsPaused","privAudioBuffer","updateSourceBuffer","privSourceBuffer","handleSourceBufferUpdateEnd","receivedAudio","_","audioBlob","privAudio","src","notifyPlayback","onAudioEnd","mimeType","MediaSource","isTypeSupported","Audio","privMediaSource","load","onsourceopen","duration","addSourceBuffer","onupdate","onupdateend","onupdatestart","volume","muted","currentTime","pause","play","sourceBufferAvailable","binary","shift","appendBuffer","canEndStream","endOfStream","onAudioStart","onended","readyState","updating","PushAudioOutputStreamCallback","AudioFileWriter","fs","privFd","privAudioFormat","headerOffset","privWriteStream","fd","start","autoClose","on","bytesWritten","end","AudioConfig","pcmRecorder","AudioConfigImpl","audioStream","MediaStream","AudioOutputConfigImpl","player","fromDefaultSpeakerOutput","def","deviceInfo","privDestination","KeywordRecognitionModel","privDisposed","fileName","SessionEventArgs","sessionId","privSessionId","RecognitionEventArgs","privOffset","ProfanityOption","IntentRecognitionEventArgs","RecognitionResult","languageDetectionConfidence","privDuration","privLanguage","privLanguageDetectionConfidence","privJson","SpeechRecognitionResult","speakerId","privSpeakerId","IntentRecognitionResult","intentId","privIntentId","LanguageUnderstandingModel","hostname","langModelImp","LanguageUnderstandingModelImpl","firstDot","region","lastSegment","appId","subscriptionKey","searchParams","SpeechRecognitionEventArgs","ConversationTranscriptionEventArgs","CancellationEventArgsBase","privErrorCode","SpeechRecognitionCanceledEventArgs","TranslationRecognitionEventArgs","TranslationSynthesisEventArgs","TranslationRecognitionResult","translations","privTranslations","TranslationSynthesisResult","SpeechConfig","speechImpl","SpeechConfigImpl","endpoint","href","hostName","authorizationToken","speechRecognitionLanguage","Simple","proxyHostName","proxyPort","proxyUserName","proxyPassword","channel","currentProperties","profanity","ret","voice","SpeechTranslationConfig","SpeechTranslationConfigImpl","privSpeechProperties","languages","targetLanguages","ReplayableAudioNode","audioSource","bytesPerSecond","privBuffers","privReplayOffset","privLastShrinkOffset","privBufferStartOffset","privBufferSerial","privBufferedBytes","privReplay","privLastChunkAcquiredTime","privAudioNode","privBytesPerSecond","offsetToSeek","bytesToSeek","retVal","BufferEntry","startOffset","endOffset","serial","Timeout","timerId","timers","clearTimeout","func","delay","setTimeout","scheduledTimeoutFunctions","unhandledRequests","worker","Worker","addEventListener","isCallNotification","idOrFunc","unhandledTimerId","delete","isClearResponse","postMessage","performance","workerTimers","revokeObjectURL","loadWorkerTimers","RecognitionCompletionStatus","SpeechRecognitionEvent","RecognitionTriggeredEvent","ListeningStartedEvent","ConnectingToServiceEvent","authFetchEventid","privAuthFetchEventid","RecognitionStartedEvent","ServiceTelemetryListener","privListeningTriggerMetric","privMicMetric","privConnectionEstablishMetric","End","eventTime","Start","privMicStartTime","privConnectionStartTime","Id","getConnectionError","privReceivedMessages","networkReceivedTime","getTelemetry","metrics","privPhraseLatencies","PhraseLatencyMs","privHypothesisLatencies","FirstHypothesisLatencyMs","telemetry","Metrics","ReceivedMessages","audioReceivedTime","RequestSession","privIsAudioNodeDetached","privIsRecognizing","privIsSpeechEnded","privTurnStartAudioOffset","privLastRecoOffset","privHypothesisReceived","privBytesSent","privRecogNumber","privConnectionAttempts","onSpeechContext","privServiceTelemetryListener","hasTelemetry","replay","continuousRecognition","isSpeechEnded","hypothesisReceived","findTimeAtOffset","phraseReceived","onServiceRecognized","shrinkBuffers","bytesSent","_a","detachAudioNode","DynamicGrammarBuilder","phrase","privPhrases","grammar","privGrammars","retObj","ReferenceGrammars","retPhrases","Groups","Items","SpeechContext","dynamicGrammar","privDynamicGrammar","phraseDetection","enrichment","pronunciationAssessment","phraseOutput","detailed","dgi","generateGrammarObject","SpeechDetected","privSpeechStartDetected","ServiceRecognizerBase","recognizerConfig","recognizer","privSetTimeout","privIsLiveAudio","recognizeOverride","disconnectOverride","sendSpeechContext","speechContextJson","speechContext","privRequestSession","sendPrePayloadJSONOverride","postConnectImplOverride","requestSession","telemetryDataEnabled","privRecognizerConfig","DisableReferenceChannel","MicSpec","privMustReportEndOfStream","privAudioSource","privRecognizer","privSpeechContext","numConnectionAttempts","maxRetryCount","cancelRecognitionLocal","token","auth","recognitionMode","recoMode","startNewRecognition","listenForServiceTelemetry","conPromise","audioStreamNode","onAudioSourceAttachCompleted","onStopRecognizing","sessionStartEventArgs","sessionStarted","sendAudio","RuntimeError","isRecognizing","sendFinalAudio","turnCompletionPromise","NoError","telemetryData","cancelRecognition","speechStartDetected","speechStartEventArgs","speechStopDetected","isContinuousRecognition","currentTurnAudioOffset","speechStopEventArgs","speechEndDetected","sendTelemetryData","EndOfStream","sessionStopEventArgs","sessionStopped","sendPrePayloadJSON","sendWaveHeader","retryableConnect","audioFormat","nextSendTime","fastLaneSizeMs","maxSendUnthrottledBytes","startRecogNumber","recogNumber","readAndUploadCycle","sendDelay","onAudioSent","onSpeechEnded","lastStatusCode","lastReason","onRetryConnection","delayMs","out","readView","padStart","AuthInfo","privHeaderName","privToken","CognitiveSubscriptionKeyAuthentication","privAuthInfo","AuthKey","AuthHeader","CognitiveTokenAuthentication","fetchCallback","fetchOnExpiryCallback","privFetchCallback","privTokenPrefix","privFetchOnExpiryCallback","Recognizer","audioConfig","fromDefaultMicrophoneInput","implCommonRecognizerSetup","errorCb","privReco","disposing","osPlatform","osName","osVersion","userAgent","appVersion","createRecognizerConfig","createServiceRecognizer","getAuthFromProperties","implRecognizerStop","recognize","stopRecognizing","enabled","ConnectionOpenResponse","RawWebsocketMessage","privPayload","OCSPEvent","signature","privSignature","OCSPMemoryCacheHitEvent","OCSPCacheMissEvent","OCSPDiskCacheHitEvent","OCSPCacheUpdateNeededEvent","OCSPMemoryCacheStoreEvent","OCSPDiskCacheStoreEvent","OCSPCacheUpdateCompleteEvent","OCSPStapleReceivedEvent","OCSPCacheEntryExpiredEvent","serialNumber","expireTime","privExpireTime","OCSPCacheEntryNeedsRefreshEvent","startTime","privStartTime","OCSPCacheHitEvent","privExpireTimeString","toLocaleDateString","privStartTimeString","toLocaleTimeString","OCSPVerificationFailedEvent","OCSPCacheFetchErrorEvent","OCSPResponseRetrievedEvent","OCSPCacheUpdateErrorEvent","CertCheckAgent","proxyInfo","privProxyInfo","privDiskCache","Cache","supportBuffer","location","process","SPEECH_OCSP_CACHE_ROOT","disableStapling","agent","Agent","CreateConnection","HostName","Port","request","socketPromise","enableOCSP","NODE_TLS_REJECT_UNAUTHORIZED","SPEECH_CONDUCT_OCSP_CHECK","secureEndpoint","requestOCSP","forceDisableOCSPStapling","servername","baseAgent","GetProxyAgent","socket","tls","net","OCSPCheck","privMemCache","httpProxyOptions","UserName","Password","HttpsProxyAgent","resolved","cork","tlsSocket","stapling","destroy","peer","getPeerCertificate","GetIssuer","issuer","ocspRequest","ocsp","raw","sig","GetResponseFromCache","cacheEntry","VerifyOCSPResponse","uncork","issuerCertificate","fetchIssuer","cachedResponse","diskCacheResponse","isCached","StoreMemoryCacheEntry","cachedOcspResponse","tbsData","tbsResponseData","responses","cachedStartTime","thisUpdate","cachedNextTime","nextUpdate","testTimeOffset","minUpdate","UpdateCache","cacheValue","ocspResponse","certID","GetOCSPResponse","StoreCacheEntry","req","rawResponse","StoreDiskCacheEntry","cert","parsedUri","WebsocketMessageAdapter","messageFormatter","enableCompression","privConnectionState","privConnectionEstablishDeferral","privCertificateValidatedDeferral","Connecting","WebSocket","forceNpmWebSocket","perMessageDeflate","privEnableCompression","checkAgent","GetAgent","toLocaleLowerCase","privWebsocketClient","ws","binaryType","privReceivingMessageQueue","privDisconnectDeferral","privSendMessageQueue","processSendQueue","onopen","Connected","privLastErrorReceived","onclose","onClose","rawMessage","privMessageFormatter","toConnectionMessage","messageSendStatusDeferral","messageSendDeferral","Message","sendStatusDeferral","sendRawMessage","sendItem","isWebsocketOpen","stack","None","ConnectionId","closeReason","pendingReceiveItem","pendingSendItem","itemToSend","OPEN","WebsocketConnection","queryParameters","privConnectionMessageAdapter","queryParams","ProxyInfo","privProxyHostName","privProxyPort","privProxyUserName","privProxyPassword","config","fromParameters","QueryParameterNames","SynthesisStatus","RecognitionStatus","ConnectionFactoryBase","setUrlParameter","EnableAudioLogging","EnableWordLevelTimestamps","Profanity","InitialSilenceTimeoutMs","EndSilenceTimeoutMs","StableIntermediateThreshold","serviceProperties","num","propId","parameterName","WebsocketMessageFormatter","textMessage","textContent","headerBodySplit","parseHeaders","binaryMessage","binaryContent","dataView","headerLength","getInt16","headersString","getInt8","makeHeaders","content","headerBuffer","stringToArrayBuffer","headerInt8Array","payloadInt8Array","bodyInt8Array","headerMatches","match","separatorIndex","headerValue","SpeechConnectionFactory","interactiveRelativeUri","conversationRelativeUri","dictationRelativeUri","authInfo","hostSuffix","getHostSuffix","endpointId","CustomSpeechDeploymentId","Language","Format","autoDetectSourceLanguages","EnableLanguageId","setCommonUrlParams","Conversation","Dictation","fromRecognizerConfig","SpeechHypothesis","privSpeechHypothesis","Duration","PrimaryLanguage","Confidence","SpeakerId","VoiceProfileType","SimpleSpeechPhrase","privSimpleSpeechPhrase","DisplayText","EnumTranslation","recognitionStatus","Success","NoMatch","InitialSilenceTimeout","BabbleTimeout","EndOfDictation","BadRequest","Forbidden","ServiceError","TooManyRequests","cancellationErrorCode","DetailedSpeechPhrase","privDetailedSpeechPhrase","baseOffset","NBest","firstWordOffset","Words","details","Display","SpeechServiceRecognizer","speechRecognizer","privSpeechRecognizer","sourceLanguages","onSuccess","action","onUnknown","interimResults","resultType","phraseResults","resultProps","processed","hypothesis","LanguageDetectionConfidence","onHypothesis","recognizing","simple","resultReason","implTranslateRecognitionResult","onPhraseRecognized","cancelReason","implTranslateCancelResult","implTranslateCancelErrorCode","implTranslateErrorDetails","totalOffset","offsetCorrectedJson","getJsonWithCorrectedOffsets","recognized","canceled","SpeechRecognizer","speechConfig","speechConfigImpl","privDisposedRecognizer","Detailed","recognizeOnceAsyncImpl","startContinuousRecognitionAsyncImpl","stopContinuousRecognitionAsyncImpl","_super","autoDetectSourceLanguageConfig","mergeTo","IntentConnectionFactory","intentRegion","AddedLmIntent","modelImpl","intentName","IntentRecognitionCanceledEventArgs","IntentResponse","privIntentResponse","query","topScoringIntent","entities","IntentServiceRecognizer","privIntentRecognizer","privIntentDataSent","addedIntents","umbrellaIntent","privAddedLmIntents","privUmbrellaIntent","speechHypothesis","sendEvent","privPendingIntentArgs","intentResponse","addedIntent","intent","IntentRecognizer","configImpl","privAddedIntents","privDisposedIntentRecognizer","buildSpeechContext","Intent","addReferenceGrammar","setIntents","simplePhrase","refGrammers","addedLmIntent","grammer","provider","TranslationStatus","TranslationConnectionFactory","to","StableTranslation","NoMatchReason","TranslationRecognitionCanceledEventArgs","sessionid","privCancelReason","Translations","privMap","TranslationHypothesis","privTranslationHypothesis","Translation","TranslationPhrase","privTranslationPhrase","translationResponse","SpeechPhrase","TranslationSynthesisEnd","privSynthesisEnd","FailureReason","TranslationServiceRecognizer","translationRecognizer","privTranslationRecognizer","onConnection","onDisconnection","handleTranslationPhrase","translatedPhrase","fireEventForResult","fromTranslationResponse","sendSynthesisAudio","synthEnd","retEvent","canceledResult","serviceResult","translation","ConnectionMessageImpl","privConnectionMessage","find","ConnectionEventArgs","ConnectionMessageEventArgs","ServiceEventArgs","privEventName","Connection","privInternalData","propertyName","propertyValue","success","sendNetworkMessage","privEventListener","connected","disconnected","messageSent","messageReceived","privServiceEventListener","receivedServiceMessage","jsonString","recoBase","internalData","setupEvents","synthesizer","synthBase","TranslationRecognizer","privDisposedTranslationRecognizer","updateLanguages","includes","conn","fromRecognizer","setMessageProperty","sendMessageAsync","NoMatchDetails","simpleSpeech","NotRecognized","InitialBabbleTimeout","CancellationDetailsBase","CancellationDetails","PhraseListGrammar","recogBase","privGrammerBuilder","addPhrase","phrases","clearPhrases","DialogServiceConfig","DialogServiceConfigImpl","privSpeechConfig","setServiceProperty","BotFrameworkConfig","subscription","botId","botFrameworkConfig","DialogTypes","BotFramework","resolvedHost","CustomCommandsConfig","applicationId","customCommandsConfig","CustomCommands","DialogConnectionFactory","dialogType","requestTurnStatus","RequestBotStatusMessages","BotId","CustomCommandsAppId","resourceInfix","Constants","BaseUrl","standardizedHost","endsWith","ApiKey","MessageDataStreamType","DialogEvent","SendingAgentContextMessageEvent","agentConfig","ActivityReceivedEventArgs","activity","privActivity","privAudioStream","TurnStatusResponsePayload","privMessageStatusResponse","interactionId","conversationId","TurnStatusReceivedEventArgs","turnStatus","privTurnStatus","ActivityPayloadResponse","privActivityResponse","messageDataStreamType","ServicePropertyChannel","DialogServiceTurnState","manager","privIsCompleted","privTurnManager","resetTurnEndTimeout","TextToSpeechAudio","createPullStream","privTimeoutToken","endAudioStream","CompleteTurn","DialogServiceTurnStateManager","privTurnMap","turnState","complete","SpeechKeyword","privSpeechKeyword","Status","DialogServiceAdapter","dialogServiceConnector","sendAgentConfig","agentConfigSent","botInfo","commandsCulture","agentConfigJson","toJsonString","sendAgentContext","guid","speechActivityTemplate","privDialogServiceConnector","agentContext","channelData","agentContextJson","handleResponseMessage","responseMessage","responsePayload","responseRequestId","activityPayload","turn","privTurnStateManager","GetTurn","updateAgentConfig","pullAudioOutputStream","processActivityPayload","activityReceived","turnStatusReceived","receiveDialogMessageOverride","listenOnce","dialogConnectImpl","configConnection","privDisconnect","privDialogAudioSource","privLastResult","terminateMessageLoop","interactionGuid","agentMessage","agentMessageJson","speechPhrase","keyword","audioRequestId","preAudioPromise","sendPreAudioMessages","node","privConnectionLoop","startMessageLoop","communicationCustodian","loop","turnRequestId","audioSessionReqId","StartTurn","turnEndRequestId","addKeywordContextData","keywordPropertyValue","keywordOffsetPropertyValue","keywordDurationPropertyValue","keywords","keywordOffsets","keywordDurations","keywordDefinitionArray","definition","Number","clientDetectedKeywords","onReject","DialogServiceConnector","dialogConfig","dialogServiceConfigImpl","isTurnComplete","buildAgentConfig","retPromise","errCb","sendMessage","commType","fromId","ttsAudioFormat","BaseAudioPlayer","audioContext","gainNode","autoUpdateBufferTimer","init","newAudioData","ensureInitializedContext","formatAudioData","newSamplesData","samples","clearInterval","setInterval","updateAudioBuffer","createGain","gain","formatArrayBuffer","Int16Array","Int32Array","maxValue","float32Data","bufferSource","createBufferSource","frameCount","createBuffer","channelOffset","decodeAudioData","newBuffer","VoiceProfile","profileId","profileType","privProfileType","VoiceProfileEnrollmentResult","statusText","privDetails","enrollmentStatus","enrollmentsCount","enrollmentsLengthInSec","results","getIdentificationDetails","getVerificationDetails","audioLengthInSec","parseFloat","audioSpeechLengthInSec","enrollmentsSpeechLengthInSec","identificationProfileId","remainingEnrollmentsSpeechLengthInSec","verificationProfileId","remainingEnrollmentsCount","remainingEnrollments","VoiceProfileEnrollmentCancellationDetails","VoiceProfileResult","VoiceProfileCancellationDetails","VoiceProfilePhraseResult","passPhrase","activationPhrase","SpeakerRecognitionConfig","RestConfigBase","privDefaultRequestOptions","privDefaultParams","privRestErrors","Accept","ignoreCache","timeout","authInvalidSubscriptionKey","authInvalidSubscriptionRegion","invalidArgs","invalidCreateJoinConversationResponse","invalidParticipantRequest","permissionDeniedConnect","permissionDeniedConversation","permissionDeniedParticipant","permissionDeniedSend","permissionDeniedStart","apiVersion","authorization","clientAppId","contentTypeKey","correlationId","languageCode","nickname","roomId","sessionToken","subscriptionRegion","RestRequestType","SpeakerRecognitionResultType","RestMessageAdapter","configParams","privIgnoreCache","responseReceivedDeferral","requestCommand","handleRestResponse","j","d","ok","blobToArrayBuffer","onloadend","postData","bent","sendRequest","Delete","Post","queryString","map","headerKey","headerMap","line","parts","SpeakerIdMessageAdapter","requestOptions","privApiVersion","privRestAdapter","getOperationUri","getQueryParams","locale","profile","ignoreMinLength","voiceProfile","TextIndependentIdentification","profileIds","voiceProfileIds","Get","mode","dependency","TextDependentVerification","VoiceProfileClient","implClientSetup","privAdapter","createProfile","getProfileStatus","getProfiles","FromIdentificationProfileList","FromVerificationProfileList","getPhrases","createEnrollment","deleteProfile","getResult","resetProfile","successReason","SpeakerIdentificationModel","profiles","privVoiceProfiles","SpeakerRecognitionResult","Identify","privProfileId","identifiedProfile","privScore","score","recognitionResult","SpeakerRecognitionCancellationDetails","SpeakerVerificationModel","privVoiceProfile","SpeakerRecognizer","privAudioConfigImpl","implSRSetup","responsePromise","identifySpeaker","verifySpeaker","Verify","AutoDetectSourceLanguageConfig","configs","autoConfig","langs","customProperty","AutoDetectSourceLanguageResult","SourceLanguageConfig","privEndpointId","ConversationConnectionConfig","privHost","privClientAppId","privDefaultLanguageCode","privRestPath","privWebSocketPath","privSpeechHost","privSpeechPath","privTranscriptionEventKeys","ParticipantChangedReason","InternalParticipants","participants","meId","exists","getParticipantIndex","getParticipant","findIndex","isHost","ConversationTranslatorMessageTypes","ConversationTranslatorCommandTypes","ConversationManager","privRequestParams","privErrors","restErrors","restPath","conversationCode","defaultLanguageCode","endpointHost","authToken","extractHeaderValue","conversation","errMessageRaw","errorMessage","ConversationConnectionMessage","privConversationMessageType","ConversationWebsocketMessageFormatter","incomingMessage","ConversationConnectionFactory","webSocketPath","ConversationTranslationCanceledEventArgs","ConversationExpirationEventArgs","expirationTime","privExpirationTime","ConversationTranslationResult","participantId","originalLanguage","privOrigLang","ConversationRequestSession","privRequestCompletionDeferral","MuteAllEventArgs","isMuted","privIsMuted","LockRoomEventArgs","isLocked","privIsLocked","ParticipantEventArgs","participant","privParticipant","ParticipantAttributeEventArgs","privKey","privValue","privParticipantId","ParticipantsListEventArgs","translateTo","profanityFilter","roomProfanityFilter","isRoomLocked","isMuteAll","privRoomId","privSessionToken","privTranslateTo","privProfanityFilter","privRoomProfanityFilter","privIsRoomLocked","privParticipants","privIsMuteAll","ConversationReceivedTranslationEventArgs","command","privCommand","CommandResponsePayload","privCommandResponse","roomid","ParticipantsListPayloadResponse","privParticipantsPayloadResponse","roomLocked","muteAll","ParticipantPayloadResponse","privParticipantPayloadResponse","usetts","ismuted","ishost","avatar","SpeechResponsePayload","privSpeechResponse","timestamp","TextResponsePayload","privTextResponse","originalText","ConversationServiceAdapter","conversationServiceConnector","privLastPartialUtteranceId","noOp","privConversationServiceConnector","privConversationAuthentication","receiveConversationMessageOverride","conversationConnectImpl","privConversationRequestSession","privConversationConnectionFactory","privConversationIsDisposed","privConnectionConfigPromise","sendFinal","conversationMessageType","commandPayload","participantsPayload","participantsResult","displayName","isUsingTts","preferredLanguage","participantsListReceived","participantUpdateCommandReceived","muteAllCommandReceived","conversationExpiration","lockRoomCommandReceived","joinParticipantPayload","joiningParticipant","participantJoinCommandReceived","leavingParticipant","participantLeaveCommandReceived","speechPayload","speechResult","getTranslations","isFinal","translationReceived","textPayload","textResult","messageRetrievalPromise","r","serviceResultTranslations","ConversationRecognizerFactory","ConversationTranslatorRecognizer","serviceConfigImpl","conversationImpl","privConversation","privConnection","privClearTimeout","privSpeechRecognitionLanguage","conversationTranslatorToken","resetConversationTimeout","connectAsync","closeConnection","_b","PromiseToEmptyCallback","getKeepAlive","ConversationParticipantsChangedEventArgs","SpeechState","ConversationTranslationEventArgs","User","userId","privUserId","Participant","privAvatar","privDisplayName","privIsHost","privIsUsingTts","privPreferredLanguage","privVoice","arg2","arg3","arg4","ConversationImpl","createConversationAsync","privIsConnected","privConversationId","onConnected","privConversationTranslator","privTranscriberRecognizer","conversationStarted","onDisconnected","conversationStopped","onCanceled","_c","conversationCanceled","onParticipantUpdateCommandReceived","updatedParticipant","useTts","translateToLanguages","addOrUpdateParticipant","participantsChanged","Updated","toParticipant","onLockRoomCommandReceived","onMuteAllCommandReceived","toParticipants","onParticipantJoinCommandReceived","newParticipant","JoinedConversation","onParticipantLeaveCommandReceived","ejectedParticipant","deleteParticipant","LeftConversation","onTranslationReceived","transcribed","transcribing","textMessageReceived","_f","onParticipantsListReceived","privRoom","me","privIsReady","changeNicknameAsync","onConversationExpiration","privManager","addTargetLanguage","setProfanity","Masked","hostNickname","privConfig","privTextMessageMaxLength","conversationTranslator","privConversationRecognizer","handleError","createOrJoin","room","handleCallback","fromConfig","addParticipantImplAsync","cognitiveSpeechAuthToken","deleteConversationImplAsync","leave","endConversationImplAsync","canSendAsHost","getLockCommand","getMuteAllCommand","canSend","getMuteCommand","removeParticipantImplAsync","getEjectCommand","getMessageCommand","getChangeNicknameCommand","convId","part","transcriptionEventKeys","conversationProperties","conversationInfo","pushConversationEvent","includeHost","ConversationCommon","privAudioConfig","SynthesisServiceType","ConversationTranslationRecognizer","translator","privSpeechState","Inactive","privTranslator","tr","cancelSpeech","fireCancelEvent","newState","stopContinuousRecognitionAsync","ConversationTranslator","privIsSpeaking","privPlaceholderKey","privPlaceholderRegion","param1","param2","param3","privSpeechTranslationConfig","fromSubscription","speechEndpointHost","joinConversationAsync","startConversationAsync","sendTextMessageAsync","privCTRecognizer","connectTranslatorRecognizer","canSpeak","startContinuousRecognition","speechHost","cognitiveSpeechRegion","speechPath","startContinuousRecognitionAsync","isConnected","isMutedByHost","TranscriberConnectionFactory","multiaudioRelativeUri","hostDefault","ConversationTranscriptionCanceledEventArgs","TranscriptionServiceRecognizer","transcriber","sendSpeechEvent","speechEventJson","sendTranscriptionStartJSON","createSpeechEventPayload","getConversationInfo","meeting","eventDict","audiorecording","TranscriberRecognizer","speechTranslationConfig","speechTranslationConfigImpl","reco","sendSpeechEventAsync","ConversationTranscriber","connectCallbacks","connectTranscriberRecognizer","disconnectCallbacks","SpeechSynthesisConnectionFactory","synthesisUri","hostPrefix","CustomVoiceDeploymentId","SynthesisVoiceGender","SynthesisVoiceType","SynthesizerConfig","privSynthesisServiceType","Standard","SynthesisRestAdapter","setHeaders","VoiceInfo","privStyleList","privVoicePath","privLocale","Locale","privShortName","ShortName","privLocalName","LocalName","privVoiceType","VoiceType","OnlineStandard","OnlineNeural","privGender","Gender","Male","Female","StyleList","style","SynthesisVoicesResult","privVoices","SpeechSynthesizer","privSynthesizing","synthesisRequestQueue","implCommonSynthesizeSetup","languageToDefaultVoice","XMLEncode","speakImpl","getVoices","createSynthesizerConfig","createSynthesisAdapter","fromSpeechSynthesisOutputFormat","IsSsml","dataStream","SynthesisRequest","adapterSpeak","getVoicesList","Speak","PronunciationAssessmentResult","privPronJson","detailResult","PronunciationAssessment","AccuracyScore","PronScore","CompletenessScore","FluencyScore","param","throwIfNullOrUndefined","throwIfNullOrWhitespace","PronunciationAssessmentConfig","referenceText","gradingSystem","PronunciationAssessmentGradingSystem","granularity","PronunciationAssessmentGranularity","enableMiscue","updateJson","setPronunciationAssessmentParams","phonemeAlphabet","privPhonemeAlphabet","nbestPhonemeCount","privNBestPhonemeCount","paramsJson","dimension","enableMiscueString","privKeys","privValues","keyToUse","clonedMap","destinationCollection","propIsEnumerable","propertyIsEnumerable","toObject","assign","test1","getOwnPropertyNames","test2","test3","letter","shouldUseNative","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","bigint","bool","number","string","symbol","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","prefix","undef","parser","exec","aa","m","y","ba","ca","da","ea","fa","document","createElement","ha","ia","ja","ka","B","g","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","sanitizeURL","removeEmptyString","D","oa","pa","qa","ma","na","la","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ra","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","sa","ta","ua","wa","xa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","for","E","Ma","Ka","La","Na","Oa","Pa","prepareStackTrace","Qa","tag","render","_render","Ra","$$typeof","_context","_payload","_init","Sa","Ta","nodeName","Va","_valueTracker","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","$a","ab","bb","ownerDocument","eb","children","Children","db","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","kb","lb","mb","nb","ob","namespaceURI","innerHTML","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","pb","lastChild","nodeType","nodeValue","qb","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","rb","sb","tb","ub","menuitem","area","br","col","embed","hr","img","keygen","link","meta","wbr","vb","wb","is","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Ob","Pb","Qb","removeEventListener","Rb","l","onError","Sb","Tb","Ub","Vb","Wb","Xb","Zb","alternate","return","flags","$b","memoizedState","dehydrated","ac","cc","child","sibling","current","bc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","nc","oc","pc","qc","rc","blockedOn","domEventName","eventSystemFlags","nativeEvent","targetContainers","sc","pointerId","tc","vc","wc","lanePriority","unstable_runWithPriority","priority","hydrate","containerInfo","xc","yc","zc","Ac","Bc","unstable_scheduleCallback","unstable_NormalPriority","Cc","Dc","Ec","animationend","animationiteration","animationstart","transitionend","Fc","Gc","Hc","transition","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","unstable_now","Rc","Uc","pendingLanes","expiredLanes","suspendedLanes","pingedLanes","Vc","entangledLanes","entanglements","Wc","Xc","Yc","Zc","$c","eventTimes","clz32","bd","cd","LN2","dd","unstable_UserBlockingPriority","ed","gd","hd","uc","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","repeat","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","range","tel","time","week","ne","oe","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","Le","nextSibling","Me","contains","compareDocumentPosition","Ne","HTMLIFrameElement","contentWindow","Oe","contentEditable","Pe","Qe","Re","Se","Te","Ue","selectionStart","selectionEnd","anchorNode","defaultView","getSelection","anchorOffset","focusNode","focusOffset","Ve","We","Xe","Ye","Ze","Yb","G","$e","af","bf","cf","df","capture","passive","Nb","x","w","z","u","q","t","v","ef","ff","parentWindow","gf","hf","J","K","Q","L","je","char","ke","jf","kf","lf","mf","autoFocus","nf","__html","of","pf","qf","rf","sf","previousSibling","tf","vf","wf","xf","yf","zf","Af","Bf","H","I","Cf","M","N","Df","Ef","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ff","childContextTypes","Gf","Hf","If","getChildContext","Jf","__reactInternalMemoizedMergedChildContext","Kf","Lf","Mf","Nf","Of","Pf","unstable_cancelCallback","Qf","unstable_shouldYield","Rf","unstable_requestPaint","Sf","Tf","unstable_getCurrentPriorityLevel","Uf","unstable_ImmediatePriority","Vf","Wf","Xf","unstable_LowPriority","Yf","unstable_IdlePriority","Zf","$f","ag","bg","cg","dg","O","eg","fg","gg","hg","ig","jg","kg","ReactCurrentBatchConfig","lg","defaultProps","mg","ng","og","pg","qg","rg","_currentValue","sg","childLanes","tg","dependencies","firstContext","lanes","ug","vg","observedBits","responders","wg","xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","yg","zg","lane","Ag","Bg","Cg","A","C","Dg","Eg","Fg","Component","refs","Gg","Kg","isMounted","_reactInternals","enqueueSetState","Hg","Ig","Jg","enqueueReplaceState","enqueueForceUpdate","Lg","shouldComponentUpdate","isPureReactComponent","Mg","contextType","updater","Ng","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Og","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Pg","Qg","ref","_owner","_stringRef","Rg","Sg","lastEffect","nextEffect","firstEffect","Tg","Ug","Vg","implementation","Wg","Xg","Yg","Zg","$g","ah","bh","ch","dh","eh","documentElement","tagName","fh","gh","hh","P","ih","memoizedProps","revealOrder","jh","kh","lh","mh","nh","oh","pendingProps","ph","qh","rh","sh","th","uh","_workInProgressVersionPrimary","vh","ReactCurrentDispatcher","wh","xh","R","S","T","yh","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","baseQueue","queue","Ih","Jh","Kh","lastRenderedReducer","eagerReducer","eagerState","lastRenderedState","dispatch","Lh","Mh","_getVersion","_source","mutableReadLanes","Nh","U","useState","getSnapshot","subscribe","useEffect","setSnapshot","Oh","Ph","Qh","Rh","deps","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","ci","di","readContext","useCallback","useContext","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useMutableSource","useOpaqueIdentifier","unstable_isNewReconciler","uf","ei","ReactCurrentOwner","fi","gi","hi","ii","ji","compare","ki","li","mi","baseLanes","ni","oi","pi","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","qi","getDerivedStateFromError","ri","pendingContext","Bi","Di","Ei","si","retryLane","ti","fallback","unstable_avoidThisFallback","ui","unstable_expectedLoadTime","vi","wi","xi","yi","zi","isBackwards","rendering","renderingStartTime","tail","tailMode","Ai","Fi","Gi","wasMultiple","multiple","onClick","onclick","createElementNS","createTextNode","V","Hi","Ii","W","Ji","Ki","Li","Mi","Ni","Oi","WeakMap","Pi","Qi","Ri","Si","componentDidCatch","Ti","componentStack","Ui","WeakSet","Vi","Wi","Xi","__reactInternalSnapshotBeforeUpdate","Yi","Zi","$i","focus","aj","display","bj","onCommitFiberUnmount","componentWillUnmount","cj","dj","ej","fj","gj","hj","insertBefore","_reactRootContainer","ij","jj","kj","lj","mj","nj","ceil","oj","pj","X","Y","qj","rj","sj","tj","uj","vj","Infinity","wj","ck","Z","xj","yj","zj","Aj","Bj","Cj","Dj","Ej","Fj","Gj","Hj","Ij","Jj","Sc","Kj","Lj","Mj","callbackNode","expirationTimes","callbackPriority","Tc","Nj","Oj","Pj","Qj","Rj","Sj","Tj","finishedWork","finishedLanes","Uj","timeoutHandle","Wj","Xj","pingCache","Yj","Zj","va","ak","bk","dk","rangeCount","focusedElem","selectionRange","ek","extend","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","onCommitFiberRoot","fk","gk","ik","isReactComponent","pendingChildren","jk","mutableSourceEagerHydrationData","kk","lk","mk","nk","qk","hydrationOptions","mutableSources","_internalRoot","rk","tk","hasAttribute","sk","uk","hk","_calculateChangedBits","unstable_observedBits","unmount","querySelectorAll","form","Vj","vk","wk","findFiberByHostInstance","bundleType","rendererPackageName","xk","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","__REACT_DEVTOOLS_GLOBAL_HOOK__","yk","isDisabled","supportsFiber","inject","createPortal","findDOMNode","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","checkDCE","hasElementType","Element","hasMap","hasSet","hasArrayBuffer","equal","__self","__source","jsx","jsxs","Fragment","StrictMode","Profiler","Suspense","setState","forceUpdate","escape","_status","_result","IsSomeRendererActing","only","PureComponent","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","createFactory","createRef","forwardRef","isValidElement","lazy","memo","runtime","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","_invoke","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","awrap","async","iter","reverse","pop","skipTempReset","prev","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","MessageChannel","unstable_forceFrameRate","cancelAnimationFrame","requestAnimationFrame","port2","port1","sortIndex","priorityLevel","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_wrapCallback","required","qs","CRHTLF","slashes","protocolre","windowsDriveLetter","whitespace","trimLeft","rules","address","isSpecial","NaN","ignore","hash","lolcation","global","finaldestination","Url","unescape","scheme","extractProtocol","rest","forwardSlashes","otherSlashes","slashesCount","relative","extracted","instruction","instructions","up","origin","ins","warning","_arrayLikeToArray","_assertThisInitialized","_classCallCheck","_createClass","_createForOfIteratorHelper","_createSuper","_defineProperty","_inherits","_isNativeReflectConstruct","_possibleConstructorReturn","_toConsumableArray","_unsupportedIterableToArray","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","chunkId","reduce","promises","miniCssF","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","onScriptComplete","doneFns","head","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","some","chunkLoadingGlobal","_asyncToGenerator","readCookie","cleanValue","cleanupCookieValue","doNotParse","isParsingCookie","__assign","Cookies","cookies","_this","changeListeners","HAS_DOCUMENT_COOKIE","cookie","parseCookies","_updateBrowserValues","parseOptions","_emitChange","getAll","name_1","finalOptions","addChangeListener","removeChangeListener","idx","getTokenOrRefresh","Cookie","speechToken","speechKey","speechRegion","tokenResponse","ManagerReferenceNodeContext","React","ManagerReferenceNodeSetterContext","Manager","_ref","_React$useState","referenceNode","setReferenceNode","hasUnmounted","handleSetReferenceNode","unwrapArray","safeInvoke","_len","_key","setRef","fromEntries","acc","useIsomorphicLayoutEffect","getWindow","isElement","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","getBoundingClientRect","includeScale","rect","scaleX","scaleY","offsetHeight","offsetWidth","right","bottom","getWindowScroll","win","pageXOffset","pageYOffset","getNodeName","getDocumentElement","getWindowScrollBarX","getComputedStyle","isScrollParent","_getComputedStyle","overflow","overflowX","overflowY","getCompositeRect","elementOrVirtualElement","offsetParent","isFixed","isOffsetParentAnElement","offsetParentIsScaled","isElementScaled","scroll","offsets","getNodeScroll","clientLeft","clientTop","getLayoutRect","clientRect","abs","offsetLeft","offsetTop","getParentNode","assignedSlot","getScrollParent","listScrollParents","_element$ownerDocumen","scrollParent","isBody","visualViewport","updatedList","isTableElement","getTrueOffsetParent","position","getOffsetParent","isFirefox","currentNode","css","transform","perspective","contain","willChange","getContainingBlock","auto","basePlacements","viewport","popper","variationPlacements","placement","placements","modifierPhases","modifiers","visited","modifier","requires","requiresIfExists","dep","depModifier","debounce","DEFAULT_OPTIONS","strategy","areValidElements","popperGenerator","generatorOptions","_generatorOptions","_generatorOptions$def","defaultModifiers","_generatorOptions$def2","defaultOptions","reference","orderedModifiers","modifiersData","elements","attributes","styles","effectCleanupFns","isDestroyed","setOptions","setOptionsAction","cleanupModifierEffects","scrollParents","contextElement","phase","orderModifiers","merged","existing","mergeByName","_ref3","_ref3$options","effect","cleanupFn","noopFn","update","_state$elements","rects","_state$orderedModifie","_state$orderedModifie2","_options","onFirstUpdate","getBasePlacement","getVariation","getMainAxisFromPlacement","computeOffsets","basePlacement","variation","commonX","commonY","mainAxis","unsetSides","mapToStyles","_ref2","_Object$assign2","popperRect","gpuAcceleration","adaptive","roundOffsets","_offsets$x","_offsets$y","hasX","hasY","sideX","sideY","heightProp","widthProp","_Object$assign","commonStyles","_ref4","dpr","devicePixelRatio","roundOffsetsByDPR","_options$offset","invertDistance","skidding","distance","distanceAndSkiddingToXY","_data$state$placement","popperOffsets","getOppositePlacement","matched","getOppositeVariationPlacement","parent","rootNode","getRootNode","isSameNode","rectToClientRect","getClientRectFromMixedType","clippingParent","html","clientWidth","clientHeight","getViewportRect","getInnerBoundingClientRect","winScroll","scrollWidth","scrollHeight","direction","getDocumentRect","getClippingRect","boundary","rootBoundary","mainClippingParents","clippingParents","clipperElement","getClippingParents","firstClippingParent","clippingRect","accRect","mergePaddingObject","paddingObject","expandToHashMap","hashMap","detectOverflow","_options$placement","_options$boundary","_options$rootBoundary","_options$elementConte","elementContext","_options$altBoundary","altBoundary","_options$padding","padding","altContext","clippingClientRect","referenceClientRect","popperClientRect","elementClientRect","overflowOffsets","offsetData","multiply","axis","within","mathMax","mathMin","_options$mainAxis","checkMainAxis","_options$altAxis","altAxis","checkAltAxis","_options$tether","tether","_options$tetherOffset","tetherOffset","isBasePlacement","referenceRect","tetherOffsetValue","normalizedTetherOffsetValue","offsetModifierState","_offsetModifierState$","mainSide","altSide","additive","maxLen","arrowElement","arrow","arrowRect","arrowPaddingObject","arrowPaddingMin","arrowPaddingMax","arrowLen","minOffset","maxOffset","arrowOffsetParent","clientOffset","offsetModifierValue","tetherMax","preventedOffset","_offsetModifierState$2","_mainSide","_altSide","_offset","_min","_max","isOriginSide","_offsetModifierValue","_tetherMin","_tetherMax","_preventedOffset","withinMaxClamp","_state$modifiersData$","toPaddingObject","minProp","maxProp","endDiff","startDiff","clientSize","centerToReference","center","axisProp","centerOffset","_options$element","querySelector","getSideOffsets","preventedOffsets","isAnySideFullyClipped","side","createPopper","_options$scroll","_options$resize","resize","_ref5","_options$gpuAccelerat","_options$adaptive","_options$roundOffsets","initialStyles","margin","attribute","_skip","specifiedFallbackPlacements","fallbackPlacements","_options$flipVariatio","flipVariations","allowedAutoPlacements","preferredPlacement","oppositePlacement","getExpandedFallbackPlacements","_options$allowedAutoP","allPlacements","allowedPlacements","overflows","computeAutoPlacement","checksMap","makeFallbackChecks","firstFittingPlacement","_basePlacement","isStartVariation","isVertical","mainVariationSide","altVariationSide","checks","every","check","_loop","fittingPlacement","preventOverflow","referenceOverflow","popperAltOverflow","referenceClippingOffsets","popperEscapeOffsets","isReferenceHidden","hasPopperEscaped","EMPTY_MODIFIERS","NOOP","NOOP_PROMISE","Popper","_ref$placement","_ref$strategy","_ref$modifiers","referenceElement","innerRef","popperElement","setPopperElement","_React$useState2","setArrowElement","_usePopper","prevOptions","optionsWithDefaults","updateStateModifier","popperOptions","newOptions","isEqual","popperInstanceRef","popperInstance","defaultCreatePopper","usePopper","childrenProps","hide","arrowProps","Reference","refHandler","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","nextCallback","prevState","_proto","updateStatus","prevProps","nextStatus","cancelNextCallback","getTimeouts","exit","mounting","performEnter","performExit","_this2","appearing","nodeRef","ReactDOM","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","setNextCallback","_this4","handler","doesNotHaveTimeoutOrListener","addEndListener","maybeNextCallback","_this$props","childProps","excluded","sourceKeys","_objectWithoutPropertiesLoose","TransitionGroupContext","noop","propTypes","globalCssModule","getScrollbarWidth","scrollDiv","scrollbarWidth","setScrollbarWidth","paddingRight","isBodyOverflowing","innerWidth","getOriginalBodyPadding","getPropertyValue","conditionallyUpdateScrollbar","fixedContent","bodyPadding","mapToCssModules","className","cssModule","omit","omitKeys","pick","pickKeys","warned","warnOnce","deprecated","propType","explanation","DOMElement","targetPropType","tagPropType","TransitionTimeouts","Fade","Collapse","Modal","Carousel","Offcanvas","TransitionPropTypeKeys","TransitionStatuses","keyCodes","esc","space","tab","down","home","PopperPlacements","canUseDOM","isReactRefObj","getTag","toNumber","isObject","other","isBinary","isFunction","findDOMElements","selection","isArrayOrNodeList","els","getTarget","allElements","defaultToggleEvents","addMultipleEventListeners","_els","_events","useCapture","el","focusableElements","fluid","Container","Tag","containerClass","rowColsPropType","noGutters","xs","sm","xl","xxl","widths","Row","colClasses","colWidth","colSize","isXs","colWidths","stringOrNumberProp","columnProps","getColumnSizeClass","getColumnClasses","columnProp","colSizeInterfix","colClass","Col","modifiedAttributes","light","dark","full","fixed","sticky","role","container","expand","Navbar","getExpandClass","NavbarBrand","NavbarText","NavbarToggler","tabs","pills","vertical","horizontal","justified","fill","navbar","card","Nav","getVerticalClass","NavItem","NavLink","listTag","listClassName","Breadcrumb","ListTag","listClasses","BreadcrumbItem","block","outline","Button","ariaLabel","btnOutlineColor","defaultAriaLabel","onBlur","onFocus","ButtonToggle","toggled","DropdownContext","a11y","group","isOpen","toggle","inNavbar","setActiveFromChild","menuRole","preventDefaultKeys","Dropdown","addEvents","handleDocumentClick","handleKeyDown","removeEvents","handleMenuRef","containerRef","menuRef","getContextValue","dropup","onMenuRef","handleProps","getContainer","getMenu","getMenuCtrl","_$menuCtrl","getItemType","getMenuItems","menuContainer","menu","clickIsInContainer","clickIsInInput","classList","clickIsInMenu","isTargetMenuItem","isTargetMenuCtrl","isTab","click","$menuitems","charPressed","attrs","subItemIsActive","dropdownItem","ButtonDropdown","ButtonGroup","ButtonToolbar","divider","DropdownItem","getTabIndex","getRole","tabIndex","flip","directionPositionMap","DropdownMenu","show","position1","position2","poperPlacement","poperModifiers","combinedStyle","tagRef","caret","DropdownToggle","baseClass","baseClassActive","otherProps","transitionProps","AccordionContext","flush","Accordion","accordionContext","defaultOpen","stayOpen","targetId","AccordionHeader","buttonClasses","collapsed","AccordionItem","transitionStatusToClassHash","getDimension","isAppearing","collapseClass","getTransitionClass","accordionId","pill","Badge","inverse","Card","CardGroup","CardDeck","CardColumns","CardBody","CardLink","CardFooter","CardHeader","CardImg","cardImgClassName","CardImgOverlay","CarouselItem","startAnimation","dispatchEvent","CustomEvent","isIn","slide","isActive","directionClassName","itemClasses","CarouselContext","handleKeyPress","renderItems","hoverStart","hoverEnd","handleTouchStart","handleTouchEnd","touchStartX","touchStartY","activeIndex","indicatorClicked","ride","interval","cycleInterval","mouseEnter","mouseLeave","evt","keyboard","previous","enableTouch","currentX","currentY","diffX","carouselItems","fade","outerClasses","innerClasses","onMouseEnter","onMouseLeave","controlLeft","controlRight","indicators","wrappedIndicators","onClickHandler","onTouchStart","onTouchEnd","nextProps","CarouselControl","directionText","anchorClasses","iconClasses","screenReaderClasses","cursor","CarouselIndicators","items","indicatorClasses","caption","CarouselCaption","captionHeader","captionText","controls","autoPlay","defaultActiveIndex","goToIndex","UncontrolledCarousel","animating","nextIndex","newIndex","slides","alt","altText","CardSubtitle","CardText","CardTitle","popperClassName","placementPrefix","arrowClassName","hideArrow","boundariesElement","onClosed","PopperContent","setTargetNode","getTargetNode","getRef","_element","childNodes","targetNode","getContainerNode","renderChildren","_arrowClassName","_popperClassName","modifierNames","baseModifiers","extendedModifiers","popperTransition","ReactPopper","popperPlacement","PopperTargetHelper","popperManager","innerClassName","autohide","trigger","DEFAULT_DELAYS","isInDOMSubtree","subtreeRoot","isInDOMSubtrees","subtreeRoots","subTreeRoot","TooltipPopoverWrapper","_targets","currentTargetElement","addTargetEvents","removeTargetEvents","showWithDelay","hideWithDelay","onMouseOverTooltipContent","onMouseLeaveTooltipContent","onEscKeyDown","_isMounted","updateTarget","clearShowTimeout","clearHideTimeout","_hideTimeout","_showTimeout","getDelay","_popover","getCurrentTarget","parentElement","composedPath","triggers","addEventOnTargets","isBubble","removeEventOnTargets","newTarget","popperClasses","onMouseOver","onKeyDown","Popover","UncontrolledPopover","PopoverHeader","PopoverBody","bar","multi","animated","striped","barClassName","barStyle","barAriaValueText","barAriaLabelledBy","Progress","percent","progressClasses","progressBarProps","Portal","defaultNode","FadePropTypes","centered","fullscreen","scrollable","labelledBy","backdrop","onOpened","wrapClassName","modalClassName","backdropClassName","contentClassName","external","backdropTransition","modalTransition","unmountOnClose","returnFocusAfterClose","trapFocus","propsToOmit","_originalBodyPadding","getFocusableChildren","handleBackdropClick","handleBackdropMouseDown","handleEscape","handleStaticBackdropAnimation","handleTab","manageFocusAfterClose","clearBackdropAnimationTimeout","showStaticBackdropAnimation","setFocus","_dialog","modalIndex","openCount","getFocusedChild","currentFocus","focusableChildren","_mouseDownElement","totalFocusable","focusedIndex","_backdropAnimationTimeout","_triggeringElement","_mountContainer","modalOpenClassName","modalOpenClassNameRegex","renderModalDialog","dialogBaseClass","isModalHidden","modalAttributes","onMouseDown","onKeyUp","hasTransition","Backdrop","wrapTag","closeAriaLabel","ModalHeader","closeButton","WrapTag","ModalBody","ModalFooter","Tooltip","bordered","borderless","hover","responsive","responsiveTag","Table","ResponsiveTag","table","responsiveClassName","numbered","ListGroup","getHorizontalClass","inline","Form","submit","valid","tooltip","FormFeedback","validMode","row","switch","floating","FormGroup","formCheck","FormText","bsSize","invalid","plaintext","addon","Input","checkInput","isNotaNumber","selectInput","rangeInput","formControlClass","InputGroup","InputGroupText","hidden","Label","htmlFor","heading","middle","Media","defaultTag","media","offcanvasTransition","offcanvasIndex","_backdrop","isOffcanvasHidden","offcanvasAttributes","visibility","OffcanvasBody","OffcanvasHeader","Pagination","PaginationItem","PaginationLink","defaultCaret","TabContext","activeTab","TabContent","activeTabId","tabId","TabPane","getClasses","closeClassName","Alert","closeClasses","alertTransition","Toast","toastTransition","ToastBody","icon","ToastHeader","tagClassName","iconProp","xmlns","preserveAspectRatio","focusable","handleDisabledOnClick","ListGroupItem","ListGroupItemHeading","ListGroupItemText","ListInlineItem","UncontrolledButtonDropdown","toggler","toggleEvents","UncontrolledCollapse","togglers","removeEventListeners","UncontrolledDropdown","onToggle","UncontrolledTooltip","Spinner","Placeholder","PlaceholderButton","createEvent","initCustomEvent","speechsdk","App","setMsg","setPhrase","sttFromMic","tokenRes","fromAuthorizationToken","HundredMark","Phoneme","applyTo","recognizeOnceAsync","displayText","pronunciationAssessmentResult","fromResult","pronunciationScore","wordLevelResult","onChange","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById","reportWebVitals"],"sourceRoot":""}